"Do some research on al-Khorezmi (also al-Khwarizmi), the man from whose name the word ""algorithm"" is derived. In particular, you should learn what the origins of the words ""algorithm"" and ""algebra"" have in common. ",13,0.997849032868,0.499236638604,0.463222
"Given that the official purpose of the U.S. patent system is the promotion of the ""useful arts,"" do you think algorithms are patentable in this country? Should they be? ",22,0.989285530471,0.501652607941,0.385732
Write down driving directions for going from your school to your home with the precision required from an algorithm's description. b. Write down a recipe for cooking your favorite dish with the precision required by an algorithm.,17,0.99770493824,0.435654860785,0.537229
"Old World puzzle A peasant finds himself on a riverbank with a wolf, a goat, and a head of cabbage. He needs to transport all three to the other side of the river in his boat. However, the boat has room for only the peasant himself and one other item (either the wolf, the goat, or the cabbage). In his absence, the wolf would eat the goat, and the goat would eat the cabbage. Solve this problem for the peasant or prove it has no solution. (Note: The peasant is a vegetarian but does not like cabbage and hence can eat neither the goat nor the cabbage to help him solve the problem. And it goes without saying that the wolf is a protected species.) ",17,0.988990214174,0.0,0.7915
"New World puzzle There are four people who want to cross a rickety bridge; they all begin on the same side. You have 17 minutes to get them all across to the other side. It is night, and they have one flashlight. A maximum of two people can cross the bridge at one time. Any party that crosses, either one or two people, must have the flashlight with them. The flashlight must be walked back and forth; it cannot be thrown, for example. Person 1 takes 1 minute to cross the bridge, person 2 takes 2 minutes, person 3 takes 5 minutes, and person 4 takes 10 minutes. A pair must walk together at the rate of the slower person's pace. (Note: According to a rumor on the Internet, interviewers at a well-known software company located near Seattle have given this problem to interviewees.) ",17,0.99999712941,0.0,0.751313
"Which of the following formulas can be considered an algorithm for computing the area of a triangle whose side lengths are given positive numbers a, b, and c? a. S= p(p - a)(p - b)(p - c), where p = (a + b + c)/2 b. S= 1 bc sin A, where A is the angle between sides b and c 2 c. S = 1 aha , where ha is the height to base a 2 ",10,0.987652216616,0.5,0.486533
"Write pseudocode for an algorithm for finding real roots of equation ax2 + bx + c = 0 for arbitrary real coefficients a, b, and c. (You may assume the availability of the square root function sqrt (x).) ",14,0.817536251069,0.857347485764,0.665557
Describe the standard algorithm for finding the binary representation of a positive decimal integer a. in English. b. in pseudocode.,12,0.400187814444,0.0,0.438084
"Describe the algorithm used by your favorite ATM machine in dispensing cash. (You may give your description in either English or pseudocode, whichever you find more convenient.) ",13,0.996051770335,0.0,0.53767
Name the algorithms for the searching problem that you already know. Give a good succinct description of each algorithm in English,12,0.905633779951,1.0,0.518668
"Describe how one can implement each of the following operations on an array so that the time it takes does not depend on the array's size n. a. Delete the ith element of an array (1 i n). b. Delete the ith element of a sorted array (the remaining array has to stay sorted, of course). ",17,0.890614929216,0.442767954424,0.517273
"If you have to solve the searching problem for a list of n numbers, how can you take advantage of the fact that the list is known to be sorted? Give separate answers for a. lists represented as arrays. b. lists represented as linked lists. ",10,0.827537881368,0.479901412236,0.531099
"Show the stack after each operation of the following sequence that starts with the empty stack: push(a), push(b), pop, push(c), push(d), pop b. Show the queue after each operation of the following sequence that starts with the empty queue: enqueue(a), enqueue(b), dequeue, enqueue(c), enqueue(d), dequeue ",13,0.583395680362,0.365450760912,0.483198
"Let A be the adjacency matrix of an undirected graph. Explain what property of the matrix indicates that i. the graph is complete. ii. the graph has a loop, i.e., an edge connecting a vertex to itself. iii. the graph has an isolated vertex, i.e., a vertex with no edges incident to it. b. Answer the same questions for the adjacency list representation. ",10,0.489583791514,0.325951883969,0.882074
Compute the following sums. a. 1 + 3 + 5 + 7 + . . . + 999 b. 2 + 4 + 8 + 16 + . . . + 1024 c. n+1 1 d. n+1 i e. n-1 i(i + 1) i=3 i=3 i=0 f. n 3j +1 g. n n ij h. n 1/ i(i + 1) j =1 i=1 j =1 i=1,12,0.848653186322,0.452504058244,0.577121
Find the order of growth of the following sums. Use the (g(n)) notation with the simplest function g(n) possible. a. ni =-01(i 2 +1)2 b. n-1 lg i2 i=2 ij-=10(i + j ) n-1 c. in=1(i + 1)2i-1 d. i=0,9,0.997323359662,0.323595565082,0.650932
"The sample variance of n measurements x1, . . . , xn can be computed as either in=1(xi - xų)2 n xi where xų = i=1 n-1 n or n xi2 - ( n xi )2/ n i=1 i=1 . n-1 Find and compare the number of divisions, multiplications, and additions/ subtractions (additions and subtractions are usually bunched together) that are required for computing the variance according to each of these formulas. ",14,0.965959387084,0.340830082104,0.586249
Find a Web site dedicated to applications of the Fibonacci numbers and study it.,1,0.979313672004,0.339628792968,0.861482
Fibonacci's rabbits problem A man put a pair of rabbits in a place surrounded by a wall. How many pairs of rabbits will be there in a year if the initial pair of rabbits (male and female) are newborn and all rabbit pairs are not fertile during their first month of life but thereafter give birth to one new male/female pair at the end of every month?,3,0.999343258759,0.257971768974,0.676073
"Climbing stairs Find the number of different ways to climb an n-stair staircase if each step is either one or two stairs. For example, a 3-stair staircase can be climbed three ways: 1-1-1, 1-2, and 2-",8,0.986483437822,1.0,0.693711
"How many even numbers are there among the first n Fibonacci numbers, i.e., among the numbers F (0), F (1), . . . , F (n - 1)? Give a closed-form formula valid for every n > ",3,0.960231111807,0.164508150948,0.854578
"Apply quicksort to sort the list E, X, A, M, P , L, E in alphabetical order. Draw the tree of the recursive calls made. ",14,0.735502642365,0.597787035242,0.473398
"For the partitioning procedure outlined in this section: a. Prove that if the scanning indices stop while pointing to the same element, i.e., i = j, the value they are pointing to must be equal to p. b. Prove that when the scanning indices stop, j cannot point to an element more than one position to the left of the one pointed to by i. ",15,0.98622355691,0.0,0.781496
Give an example showing that quicksort is not a stable sorting algorithm.,15,0.778717919237,0.0,0.599397
Give an example of an array of n elements for which the sentinel mentioned in the text is actually needed. What should be its value? Also explain why a single sentinel suffices for any input.,15,0.96421703035,1.0,0.532917
"For the version of quicksort given in this section: a. Are arrays made up of all equal elements the worst-case input, the bestcase input, or neither? b. Are strictly decreasing arrays the worst-case input, the best-case input, or neither? ",16,0.787157226573,0.5,0.727414
"For quicksort with the median-of-three pivot selection, are strictly increasing arrays the worst-case input, the best-case input, or neither? b. Answer the same question for strictly decreasing arrays. ",16,0.99952906042,0.0,0.87537
"Estimate how many times faster quicksort will sort an array of one million random numbers than insertion sort. b. True or false: For every n > 1, there are n-element arrays that are sorted faster by insertion sort than by quicksort? ",9,0.632698270961,1.0,0.872019
"Design a divide-and-conquer algorithm for computing the number of levels in a binary tree. (In particular, the algorithm must return 0 and 1 for the empty and single-node trees, respectively.) What is the time efficiency class of your algorithm? ",17,0.985219344894,0.770792459505,0.517549
"The following algorithm seeks to compute the number of leaves in a binary tree. ALGORITHM LeafCounter(T ) //Computes recursively the number of leaves in a binary tree //Input: A binary tree T //Output: The number of leaves in T if T = return 0 else return LeafCounter(Tleft)+ LeafCounter(Tright) Is this algorithm correct? If it is, prove it; if it is not, make an appropriate correction. ",15,0.997630580713,0.889794671266,0.675232
"Can you compute the height of a binary tree with the same asymptotic efficiency as the section's divide-and-conquer algorithm but without using a stack explicitly or implicitly? Of course, you may use a different algorithm altogether. ",17,0.997766606858,0.889794671266,0.695864
Consider the problem of finding the distance between the two closest numbers in an array of n numbers. (The distance between two numbers x and y is computed as |x - y|.) a. Design a presorting-based algorithm for solving this problem and determine its efficiency class. b. Compare the efficiency of this algorithm with that of the brute-force algorithm (see Problem 9 in Exercises,17,0.920268148092,0.479901411496,0.594013
Which of the following binary trees are AVL trees? 5 5 5 3 6 4 6 3 6 2 8 2 8 1 2 7 9 1 3 7 9 (a) (b) (c),10,0.334173040605,1.0,0.672806
"Construct a heap for the list 1, 8, 6, 5, 3, 7, 4 by the bottom-up algorithm.",14,0.251856379736,0.483482468173,0.47121
"Construct a heap for the list 1, 8, 6, 5, 3, 7, 4 by successive key insertions (top-down algorithm).",14,0.850200712178,1.0,0.729736
Is it always true that the bottom-up and top-down algorithms yield the same heap for the same input?,15,0.677513340498,0.0,0.343597
Find the smallest and the largest number of keys that a heap of height h can contain. b. Prove that the height of a heap with n nodes is equal to log2 n .,9,0.445947373086,0.537243728788,0.721624
Design an efficient algorithm for finding and deleting an element of the smallest value in a heap and determine its time efficiency.,16,0.371728183376,1.0,0.468324
Design an efficient algorithm for finding and deleting an element of a given value v in a heap H and determine its time efficiency.,16,0.215993313742,0.0,0.469776
Indicate the time efficiency classes of the three main operations of the priority queue implemented as a. an unsorted array. b. a sorted array. c. a binary search tree. d. an AVL tree. e. a heap.,16,0.481405300126,1.0,0.539138
"Sort the following lists by heapsort by using the array representation of heaps. a. 1, 2, 3, 4, 5 (in increasing order) b. 5, 4, 3, 2, 1 (in increasing order) c. S, O, R, T, I, N, G (in alphabetical order) ",14,0.924322634641,0.0,0.795563
Is heapsort a stable sorting algorithm?,7,0.372101234622,0.0,0.75248
What variety of the transform-and-conquer technique does heapsort represent?,6,0.595062486608,1.0,0.8058
Which sorting algorithm other than heapsort uses a priority queue?,6,0.937591800743,1.0,0.727052
"Implement three advanced sorting algorithms--mergesort, quicksort, and heapsort--in the language of your choice and investigate their performance on arrays of sizes n = 103, 104, 105, and ",14,0.45684787256,0.0,0.502313
Write pseudocode for the brute-force polynomial evaluation that stems from substituting a given value of the variable into the polynomial's formula and evaluating it from the lowest term to the highest one. Determine the number of multiplications and the number of additions made by this algorithm.,14,0.992985406501,0.644145636002,0.765566
"Estimate how much faster Horner's rule is compared to the ""lowest to highest term"" brute-force algorithm of Problem 2 if (i) the time of one multiplication is significantly larger than the time of one addition; (ii) the time of one multiplication is about the same as the time of one addition.",15,0.994983186721,0.601334385475,0.551877
Is Horner's rule more time efficient at the expense of being less space efficient than the brute-force algorithm?,6,0.918237853034,0.314679707235,0.596346
Apply Horner's rule to evaluate the polynomial p(x) = 3x4 - x3 + 2x + 5 at x = -,14,0.8520924594,1.0,0.820393
Apply Horner's rule to convert 110100101 from binary to decimal.,14,0.987065226404,0.0,0.669607
"Is it possible to exchange numeric values of two variables, say, u and v, without using any extra storage? ",23,0.857917897089,0.513092832745,0.593121
Will the comparison-counting algorithm work correctly for arrays with equal values?,15,0.935816752115,1.0,0.503898
Give examples of using an index in real-life applications that do not involve computers.,9,0.870220524399,0.22645175938,0.392807
Find the minimum order of the B-tree that guarantees that the number of disk accesses in searching in a file of 100 million records does not exceed,8,0.999245357873,0.75251069385,0.664013
Draw the B-tree obtained after inserting 30 and then 31 in the B-tree in Figure,14,0.563456682101,1.0,0.492034
Outline an algorithm for finding the largest key in a B-tree.,8,0.237666862141,0.604863153571,0.696747
Why is the time efficiency of algorithm OptimalBST cubic? b. Why is the space efficiency of algorithm OptimalBST quadratic?,16,0.299773317851,0.0,0.620375
Write pseudocode for a linear-time algorithm that generates the optimal binary search tree from the root table.,17,0.911967921404,0.0,0.762361
"Devise a way to compute the sums j ps , which are used in the dynamic s=i programming algorithm for constructing an optimal binary search tree, in constant time (per sum). ",17,0.989473783469,0.74186450308,0.748235
True or false: The root of an optimal binary search tree always contains the key with the highest search probability?,8,0.995644691419,1.0,0.730689
How would you construct an optimal binary search tree for a set of n keys if all the keys are equally likely to be searched for? What will be the average number of comparisons in a successful search in such a tree if n = 2k?,15,0.648354779796,0.5,0.765017
"Show that the number of distinct binary search trees b(n) that can be constructed for a set of n orderable keys satisfies the recurrence relation n-1 b(n) = b(k)b(n - 1 - k) for n > 0, b(0) = ",10,0.829370381865,1.0,0.563731
Design a (n2) algorithm for finding an optimal binary search tree.,17,0.961138347741,0.468235802013,0.687206
Generalize the optimal binary search algorithm by taking into account unsuccessful searches.,17,0.972720962329,0.618589221785,0.742356
Apply Warshall's algorithm to find the transitive closure of the digraph defined by the following adjacency matrix: 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0,14,0.909638770396,0.750047217637,0.79432
Explain what adjustments if any need to be made in Dijkstra's algorithm and/or in an underlying graph to solve the following problems. a. Solve the single-source shortest-paths problem for directed weighted graphs. b. Find a shortest path between two given vertices of a weighted graph or digraph. (This variation is called the single-pair shortest-path problem.) c. Find the shortest paths to a given vertex from each other vertex of a weighted graph or digraph. (This variation is called the single-destination shortest-paths problem.) d. Solve the single-source shortest-paths problem in a graph with nonnegative numbers assigned to its vertices (and the length of a path defined as the sum of the vertex numbers on the path).,8,0.999496103027,0.696967953385,0.778521
"Solve the following linear programming problems geometrically. a. maximize 3x + y subject to -x + y 1 2x + y 4 x 0, y 0 b. maximize x + 2y subject to 4x y y 3+x x 0, y 0 ",8,0.474043910508,1.0,0.657195
"Since maximum-flow algorithms require processing edges in both directions, it is convenient to modify the adjacency matrix representation of a network as follows. If there is a directed edge from vertex i to vertex j of capacity uij , then the element in the ith row and the j th column is set to uij , and the element in the j th row and the ith column is set to -uij ; if there is no edge between vertices i and j , both these elements are set to zero. Outline a simple algorithm for identifying a source and a sink in a network presented by such a matrix and indicate its time efficiency. ",17,0.999748044687,0.457664748705,0.619927
Apply the shortest-augmenting path algorithm to find a maximum flow and a minimum cut in the following networks. a. 5 2 1 2 5 6 4 4 3 7 4 8 6 b. 3 2 4 2 1 1 4 4 6 7 3 5 5 2,14,0.997432953068,0.34146009237,0.594952
Does the maximum-flow problem always have a unique solution? Would your answer be different for networks with different capacities on all their edges? b. Answer the same questions for the minimum-cut problem of finding a cut of the smallest capacity in a given network.,9,0.9999756405,0.489661010798,0.62609
Explain how the maximum-flow problem for a network with several sources and sinks can be transformed into the same problem for a network with a single source and a single sink. b. Some networks have capacity constraints on the flow amounts that can flow through their intermediate vertices. Explain how the maximum-flow problem for such a network can be transformed to the maximum-flow problem for a network with edge capacity constraints only.,21,0.9999847456,0.820732242667,0.806063
"Consider a network that is a rooted tree, with the root as its source, the leaves as its sinks, and all the edges directed along the paths from the root to the leaves. Design an efficient algorithm for finding a maximum flow in such a network. What is the time efficiency of your algorithm? ",17,0.996359439548,0.276334764849,0.47557
"Find a trivial lower-bound class for each of the following problems and indicate, if you can, whether this bound is tight. a. finding the largest element in an array b. checking completeness of a graph represented by its adjacency matrix c. generating all the subsets of an n-element set d. determining whether n given real numbers are all distinct ",15,0.940245635967,0.349127052579,0.51311
Consider the problem of identifying a lighter fake coin among n identicallooking coins with the help of a balance scale. Can we use the same information-theoretic argument as the one in the text for the number of questions in the guessing game to conclude that any algorithm for identifying the fake will need at least log2 n weighings in the worst case?,23,0.547858150158,0.35449634807,0.827215
Prove by mathematical induction that a. h log2 l for any binary tree with height h and the number of leaves l. b. h log3 l for any ternary tree with height h and the number of leaves l.,8,0.801525802208,1.0,0.676757
"Some textbooks define the number of significant digits in the approximation of number by number as the largest nonnegative integer k for which | - | < 5 . 10-k. || According to this definition, how many significant digits are there in the approximation of by a. ",8,0.922314601964,0.282453365055,0.554635
Use the composite trapezoidal rule with n = 4 to approximate the following definite integrals. Find the truncation error of each approximation and compare it with the one given by formula (,14,0.999877990641,0.454674394072,0.747278
"Apply the nearest-neighbor algorithm to the instance defined by the intercity distance matrix below. Start the algorithm at the first city, assuming that the cities are numbered from 1 to ",14,0.489601628419,0.350770213001,0.446944
Find on the Internet or in your library a procedure for finding a real root of the general cubic equation ax3 + bx2 + cx + d = 0 with real coefficients. b. What general algorithm design technique is it based on?,15,0.208477639695,0.227006912524,0.494696
Indicate how many roots each of the following equations has: a. xex - 1 = 0 b. x - ln x = 0 c. x sin x - 1 = 0,14,0.352974685965,0.638124216991,0.631983
"Prove that if p(x) is a polynomial of an odd degree, then it must have at least one real root. b. Prove that if x0 is a root of an n-degree polynomial p(x), the polynomial can be factored into p(x) = (x - x0)q(x), where q(x) is a polynomial of degree n - 1",10,0.800416377335,0.829719846449,0.729982
Apply the bisection method to find the root of the equation x3 + x - 1 = 0 with an absolute error smaller than 10-,14,0.941075379165,1.0,0.859255
"One can find arguments supporting either view. There is a well-established principle pertinent to the matter, though: scientific facts or mathematical expressions of them are not patentable. (Why do you think this is the case?) But should this preclude granting patents for all algorithms? ",22,0.171699747815,0.146602441162,0.433083
Try to design an algorithm that always makes less than mn comparisons.,17,0.23292006517,0.298019287791,0.512238
Just follow Euclid's algorithm as described in the text. b. Compare the number of divisions made by the two algorithms.,14,0.908770957243,0.501652605552,0.660459
"Prove that if d divides both m and n (i.e., m = sd and n = td for some positive integers s and t), then it also divides both n and r = m mod n and vice versa. Use the formula m = qn + r (0 r < n) and the fact that if d divides two integers u and v, it also divides u + v and u - v (why?). ",2,0.393879287484,0.307428709266,0.653493
Perform one iteration of the algorithm for two arbitrarily chosen integers m < n.,14,0.186514682291,0.288827255396,0.444594
"For a sorted array, there is a spectacularly efficient algorithm you almost certainly have heard about. b. Unsuccessful searches can be made faster. ",9,0.206082099151,0.552710164723,0.469877
Simplify the functions given to single out the terms defining their orders of growth.,14,0.33512821244,0.499490305475,0.705237
You can prove this assertion either by computing an appropriate limit or by applying mathematical induction. b. Compute limn a1n/a2n.,14,0.114602406802,0.299606923622,0.355315
"Prove the correctness of (a), (b), and (c) by using the appropriate definitions; construct a counterexample for (d) (e.g., by constructing two functions behaving differently for odd and even values of their arguments). ",9,0.452410479863,0.332284524402,0.640799
Follow the analysis plan used in the text when the algorithm was mentioned for the first time.,15,0.0969669683167,1.0,0.651001
Each of these recurrences can be solved by the method of backward substitutions.,14,0.929965937346,1.0,0.49592
The question is similar to that about the efficiency of the recursive algorithm for computing n!. b. Write pseudocode for the nonrecursive algorithm and determine its efficiency.,15,0.413888520085,0.403384837432,0.495142
"Note that you are asked here about a recurrence for the function's values, not about a recurrence for the number of times its operation is executed. Just follow the pseudocode to set it up. It is easier to solve this recurrence by forward substitutions (see Appendix B). b. This question is very similar to one we have already discussed. c. You may want to include the subtractions needed to decrease n. ",14,0.630536124475,0.199566530273,0.731727
Does it return a correct comparison count for every array of size 2?,15,0.280933973317,0.5,0.539874
Check how fast the count values grow with doubling the input size.,9,0.308682346379,0.601877655271,0.502089
Compare the values of the functions lg lg n and lg n for n = 2k.,2,0.517552913843,1.0,0.824114
Insert the division counter in a program implementing the algorithm and run it for the input pairs in the range indicated.,14,0.748859861651,0.421470276219,0.487262
"Get the empirical data for random values of n in a range of, say, between 102 and 104 or 105 and plot the data obtained. (You may want to use different scales for the axes of your coordinate system.)",2,0.997750078917,0.264814313081,0.76863
Solving the problem for n = 2 and n = 3 should lead you to the critical insight. b. Where would you put the post office if it did not have to be at one of the village locations?,10,0.394794696843,1.0,0.417868
"Check requirements (i)_(iii) by using basic properties of absolute values. b. For the Manhattan distance, the points in question are defined by the equation |x - 0| + |y - 0| = ",8,0.413133553007,0.250899788092,0.460782
Compare the efficiency classes of the two versions of DFS for sparse graphs.,15,0.392774399118,0.346593471814,0.660534
Perform the BFS traversal the same way it is done in the text,14,0.95979733216,0.66598779216,0.761526
What property of a BFS forest indicates a cycle's presence? (The answer is similar to the one for a DFS forest.) b. Find two examples supporting this answer.,15,0.969153557497,0.454500409323,0.785179
"Given the fact that both traversals can reach a new vertex if and only if it is adjacent to one of the previously visited vertices, which vertices will be visited by the time either traversal halts (i.e., its stack or queue becomes empty)? ",15,0.877158327112,0.75536773519,0.807823
"Use a DFS forest and a BFS forest for parts (a) and (b), respectively. ",14,0.987666481336,0.760928945155,0.773957
Use either DFS or BFS.,14,0.979150242092,1.0,0.865975
Follow the instructions of the problem's statement. b. Trying both traversals should lead you to a correct answer very fast.,14,0.589886366013,0.557649049088,0.370955
You can apply BFS without an explicit sketch of a graph representing the states of the puzzle.,14,0.144485080882,0.595046215685,0.735345
Trace the algorithm for n = 2; take advantage of this trace in tracing the algorithm for n = 3 and then use the latter for n =,14,0.475780815977,0.38307289967,0.540206
Just trace the algorithms for n =,14,0.0615508699672,1.0,0.36604
Represent the disk movements by flipping bits in a binary n-tuple.,21,0.602660926822,0.757741773205,0.503647
Trace the algorithm on the input given. You will have to use it again in order to compute the products of two-digit numbers as well.,14,0.326824878655,0.405648154683,0.480508
Take logarithms of both sides of the equality. b. What did we use the closed-form formula for?,8,0.726967337238,0.519405020927,0.31577
"How do we multiply by powers of 10? b. Try to repeat the argument for, say, 98. Counting the number of one-digit additions made by the pen-and-pencil algorithm in multiplying, say, two four-digit numbers, should help answer the general question. ",9,0.529338250327,0.155586253556,0.439698
Check the formulas by simple algebraic manipulations.,8,0.248529247264,0.482507579688,0.496315
Trace Strassen's algorithm on the input given,14,0.29877593284,1.0,0.854516
Use the method of backward substitutions to solve the recurrence given in the text.,14,0.800293298655,1.0,0.729671
The recurrence for the number of multiplications in Pan's algorithm is similar to that for Strassen's algorithm. Use the Master Theorem to find the order of growth of its solution.,14,0.913655517562,0.437773808057,0.762377
Trace the algorithm as we did in solving another system in the section.,14,0.546173205884,1.0,0.702441
Use the Gaussian elimination results as explained in the text. b. It is one of the varieties of the transform-and-conquer technique. Which one?,15,0.807066544775,0.413929863774,0.707291
Find the inverse. You can either solve the system with three simultaneous right-hand side vectors representing the columns of the 3 x 3 identity matrix or use the LU decomposition of the system's coefficient matrix,14,0.882980674898,0.33559525339,0.798706
"Though the final answer is correct, its derivation contains an error you have to find. ",15,0.27784878254,0.38695402624,0.613253
Estimate the ratio of the algorithm running times by using the approximate formulas for the number of divisions and the number of multiplications in both algorithms.,9,0.901761812745,0.269025195077,0.503049
Trace the algorithm outlined in the text on the input given.,14,0.237433712602,1.0,0.685388
"Comment on the following: For a heap represented by an array, only the parental dominance requirement needs to be checked. ",9,0.948464972053,0.168363974818,0.831029
What structure does a complete tree of height h with the largest number of nodes have? What about a complete tree with the smallest number of nodes? b. Use the results established in part (a).,3,0.589698124813,0.811993348364,0.638828
"First, express the right-hand side as a function of h. Then, prove the obtained equality by either using the formula for the sum i2i given in Appendix A or by mathematical induction on h. ",14,0.702462124835,0.238202796288,0.40056
Where in a heap should one look for its smallest element?,7,0.47919375001,1.0,0.616306
Deleting an arbitrary element of a heap can be done by generalizing the algorithm for deleting its root.,17,0.873871232507,1.0,0.375206
"Fill in a table with the time efficiency classes of efficient implementations of the three operations: finding the largest element, finding and deleting the largest element, and adding a new element. ",15,0.202595665777,0.534163621774,0.314033
"As a rule, sorting algorithms that can exchange far-apart elements are not stable. ",15,0.565687714318,0.511086280283,0.609389
Set up sums and simplify them by using the standard formulas and rules for sum manipulation. Do not forget to include the multiplications outside the inner loop.,14,0.917313622448,0.270231224262,0.543101
Check the algorithm's pseudocode to see what it does upon encountering equal values.,14,0.70409271804,0.514685096172,0.489183
Trace the algorithm on the input given,14,0.388079228887,1.0,0.413716
Check whether the algorithm can reverse a relative ordering of equal elements.,9,0.167478892479,0.516587355241,0.446654
Where will A[i] be in the sorted array?,9,0.227755021462,0.341490651382,0.465184
Take advantage of the standard traversals of such trees.,2,0.292122684727,0.500610151425,0.603205
"Follow the definitions of the arrays B and C in the description of the method. b. Find, say, B[C[3]] for the example in part (a). ",3,0.363791950213,0.215035240155,0.499801
Start by finding the target positions for all the statures.,14,0.232479650797,1.0,0.592427
Use linked lists to hold nonzero elements of the matrices.,8,0.119538751074,0.500160985409,0.662278
Represent each of the given polynomials by a linked list with nodes containing exponent i and coefficient ai for each nonzero term aixi.,14,0.315154857834,0.34645133369,0.47358
Trace the algorithm in the same way it is done in the section for another instance of the string-matching problem.,9,0.290262196356,0.0,0.644653
Thinking about searching for information should lead to a variety of examples.,1,0.179008874181,0.467295830654,0.5485
"Use the standard rules of sum manipulation and, in particular, the geometric series formula. b. You will need to take logarithms base m/2 in your derivation. ",14,0.599106902108,0.348528699843,0.613249
Find this value from the inequality in the text that provides the upper-bound of the B-tree's height.,8,0.875027952536,0.349419512531,0.801134
Follow the insertion algorithm outlined in the section.,1,0.132801707952,0.0,0.6681
"Just follow the description of the algorithm given in the statement of the problem. Note that a new key is always inserted in a leaf and that full nodes are always split on the way down, even though the leaf for the new key may have a room for it. b. Can a split of a full node cause a cascade of splits through the chain of its ancestors? Can we get a taller search tree than necessary?",9,0.489863859576,0.778360098635,0.793809
Compare the definitions of the two techniques.,1,0.209655891893,0.333333333333,0.683887
Use the table generated by the dynamic programming algorithm in solving the problem's instance in Example 1 of the section.,14,0.748526530036,0.74662410007,0.740515
Apply the dynamic programming algorithm to the instance given as it is done in Example 2 of the section. Note that there are two optimal coin combinations here.,14,0.561060637025,0.469561071147,0.612913
The algorithm's time efficiency can be investigated by following the standard plan of analyzing the time efficiency of a nonrecursive algorithm. b. How much space do the two tables generated by the algorithm use?,9,0.546267668241,0.190599572178,0.594411
Use a space-for-time trade-off.,2,0.764337033027,1.0,0.0
"If the assertion were true, would we not have a simpler algorithm for constructing an optimal binary search tree? ",10,0.831139762331,1.0,0.717918
The structure of the tree should simply minimize the average depth of its nodes. Do not forget to indicate a way to distribute the keys among the nodes of the tree.,8,0.786343891297,0.89950980169,0.780336
Consider all the possibilities of partitioning the nodes between the left and right subtrees. b. Compute the values in question using the two formulas. c. Use the formula for the nth Catalan number and Stirling's formula for n!. ,14,0.662590979568,0.454937041551,0.410277
Change the bounds of the innermost loop of algorithm OptimalBST by exploiting the monotonicity of the root table mentioned at the end of the section.,14,0.125256212457,0.309586570571,0.523532
"Considering the case of two jobs might help. Of course, after forming a hypothesis, you will have to prove the algorithm's optimality for an arbitrary input or find a specific counterexample showing that it is not the case. ",11,0.389081481592,0.336666148685,0.588304
Simply apply the greedy approach to the situation at hand. You may assume that t1 t2 . . . tn.,8,0.606651897188,0.461923512537,0.708854
"Trace the algorithm for the graph given. An example can be found in the text. b. After the next fringe vertex is added to the tree, add all the unseen vertices adjacent to it to the priority queue of fringe vertices. ",13,0.849901612024,0.774346575852,0.710196
Applying Prim's algorithm to a weighted graph that is not connected should help in answering this question.,8,0.570495405653,0.513326590581,0.766921
Check whether the proof of the algorithm's correctness is valid for negative edge weights.,3,0.891311032658,0.525562118227,0.800876
The answer is no. Give a counterexample.,4,0.227799719353,0.0,0.579795
"Since Prim's algorithm needs weights on a graph's edges, some weights have to be assigned. As to the second question, think of other algorithms that can solve this problem. ",7,0.82327940707,0.641316087517,0.689782
"After combining the two nodes with the lowest probabilities, resolve the tie arising on the next iteration in two different ways. For each of the two Huffman codes obtained, compute the mean and variance of the codeword length. ",14,0.974115379198,0.489915292286,0.790973
The maximal length of a codeword relates to the height of Huffman's coding tree in an obvious fashion. Try to find a set of n specific frequencies for an alphabet of size n for which the tree has the shape yielding the longest codeword possible.,14,0.848268329188,0.503233085038,0.738185
"What is the most appropriate data structure for an algorithm whose principal operation is finding the two smallest elements in a given set and replacing them by their sum? b. Identify the principal operations of the algorithm, the number of times they are executed, and their efficiencies for the data structure used. ",7,0.447207854534,0.204758373508,0.579044
"Maintain two queues: one for given frequencies, the other for weights of new trees. ",14,0.303327619127,0.78555020222,0.426616
Generate the codewords right to left.,14,0.692346816596,1.0,0.619643
See an application of this algorithm to another bipartite graph in the section.,9,0.366813768213,0.448085179645,0.619919
The definition of a matching and its cardinality should lead you to the answers to these questions with no difficulty.,14,0.264197593501,0.240808923177,0.720551
"You do not have to check the inequality for each subset S of V if you can point out a subset for which the inequality does not hold. Otherwise, fill in a table for all the subsets S of the indicated set V with columns for S, R(S), and |R(S)| |S|. b. Think time efficiency. ",16,0.346307568254,0.338154094133,0.504098
Reduce the problem to finding a maximum matching in a bipartite graph.,8,0.984771274991,0.505266018512,0.867832
Transform a given bipartite graph into a network by making vertices of the former be intermediate vertices of the latter.,7,0.402481012199,0.284564127482,0.778528
"Since this greedy algorithm is arguably simpler than the augmenting-path algorithm given in the section, should we expect a positive or negative answer? Of course, this point cannot be substituted for a more specific argument or a counterexample. ",10,0.480324780192,0.250801434334,0.633563
Prove first that 2h l by induction on h. b. Prove first that 3h l by induction on h.,14,0.727351643258,0.424987682511,0.507336
"How many outcomes does the problem have? b. Of course, there are many ways to solve this simple problem. c. Thinking about a, b, and c as points on the real line should help. ",9,0.609657479361,0.31516235978,0.539652
"This is a straightforward question. You may assume that the three elements to be sorted are distinct. (If you need help, see decision trees for the threeelement selection sort and three-element insertion sort in the section.) ",2,0.282133554805,0.254238989638,0.715423
Compute a nontrivial lower bound for sorting a four-element array and then identify a sorting algorithm whose number of comparisons in the worst case matches the lower bound.,10,0.723161295509,0.499696034236,0.576458
This is not an easy task. None of the standard sorting algorithms can do this. Try to design a special algorithm that squeezes as much information as possible from each of its comparisons.,23,0.301173077489,0.31880187294,0.542818
This is a very straightforward question. Use the obvious observation that sequential search in a sorted list can be stopped as soon as an element larger than the search key is encountered.,1,0.0931859259717,0.418019616028,0.854179
Start by transforming the logarithms to the same base. b. The easiest way is to prove that lim log2(n + 1) >,16,0.510752933467,0.392969692609,0.84509
"As the given definition of the number of significant digits requires, compute the relative errors of the approximations. One of the answers doesn't agree with our intuitive idea of this notion. ",10,0.785514127529,0.349127567471,0.73534
Use the definitions of the absolute and relative errors and the properties of the absolute value.,0,0.988090414998,0.21131922415,0.704315
Apply the formula for the area of a trapezoid to each of the n approximating trapezoid strips and sum them up.,0,0.960998185815,0.492324509036,0.478816
Find an upper bound for the second derivative of esin x and use formula (,10,0.435908453885,0.517615027689,0.496586
"Consider all possible values for the coefficients a, b, and c. Keep in mind that solving an equation means finding all its roots or proving that no roots exist. ",14,0.276684805619,0.332514471173,0.86487
"Prove that every element xn of the sequence is (i) positive, (ii) greater than D (by computing xn+1 - D), and (iii) decreasing (by computing xn+1 - xn). Then take the limit of both sides of equality (",16,0.348459785427,0.394548835296,0.638832
What operations does a best-first branch-and-bound algorithm perform on the live nodes of its state-space tree?,7,0.466949823856,0.297967834753,0.552703
"Use the smallest numbers selected from the columns of the cost matrix to compute the lower bounds. With this bounding function, it's more logical to consider four ways to assign job 1 for the nodes on the first level of the tree. ",8,0.995870004506,0.413090026417,0.638687
Your answer should be an n _ n matrix with a simple structure making the algorithm work the fastest. b. Sketch the structure of the state-space tree for your answer to part (a).,11,0.250669472767,0.398737361773,0.487232
Start by marking the first column of the matrix and finding the smallest element in the first row and an unmarked column. b. You will have to find an optimal solution by exhaustive search or by a branch-and-bound algorithm or by some other method.,15,0.998800940888,0.423733780974,0.477526
"The simplest approach is to mark matrix columns that correspond to visited cities. Alternatively, you can maintain a linked list of unvisited cities. b. Following the standard plan for analyzing algorithm efficiency should pose no difficulty (and yield the same result for either of the two options mentioned in the hint to part (a)). ",14,0.53675785779,0.154203813156,0.406027
Extend the triangle inequality to the case of k 1 intermediate vertices and prove its validity by mathematical induction.,9,0.165911814555,0.337909632179,0.539282
"First, determine the time efficiency of each of the three steps of the algorithm. ",9,0.125445730482,0.306333546989,0.397365
"You will have to prove two facts: i. f (s) 2f (sa) for any instance of the knapsack problem, where f (sa) is the value of the approximate solution obtained by the enhanced greedy algorithm and f (s) is the optimal value of the exact solution to the same instance. ii. The smallest constant for which such an assertion is true is ",9,0.621106844983,0.396296557376,0.609134
Do the walk in the opposite direction.,14,0.234896428499,0.0,0.837797
"Use the property underlying the bisection method. b. Use the definition of division of polynomial p(x) by x - x0, i.e., the equality p(x) = q(x)(x - x0) + r, where x0 is a root of p(x), q(x) and r are the quotient and remainder of this division, respectively. c. Differentiate both sides of the equality given in part (b) and substitute x0 in the result. ",14,0.378196505952,0.508373169943,0.550628
"Use the fact that |xn - x| is the distance between xn, the middle of interval [an, bn], and root x. ",2,0.745089522418,0.774009368819,0.727326
Sketch the graph to determine a general location of the root and choose an initial interval bracketing it. Use an appropriate inequality given in Section,14,0.328129078635,0.365765345264,0.66913
"Write an equation of the line through the points (an, f (an)) and (bn, f (bn)) and find its x-intercept. ",8,0.275074075755,0.392843764355,0.537832
"Write an equation of the tangent line to the graph of the function at (xn, f (xn)) and find its x-intercept. ",8,0.864889368257,0.585447173999,0.478003
