intellect distinguishes ;distinguishes impossible ;impossible reason ;reason distinguishes ;distinguishes senseless ;senseless max ;max born ;born life ;life views ;views preceding ;preceding chapters ;chapters encountered ;encountered dozens ;dozens algorithms ;algorithms solving ;solving variety ;variety problems ;problems fair ;fair assessment ;assessment algorithms ;algorithms problem ;problem solving ;solving tools ;tools inescapable ;inescapable powerful ;powerful instruments ;instruments executed ;executed modern ;modern computers ;computers power ;power algorithms ;algorithms unlimited ;unlimited limits ;limits subject ;subject chapter ;chapter problems ;problems solved ;solved algorithm ;algorithm problems ;problems solved ;solved algorithmically ;algorithmically polynomial ;polynomial problem ;problem solved ;solved polynomial ;polynomial algorithms ;algorithms lower ;lower bounds ;bounds efficiency ;efficiency section ;section methods ;methods obtaining ;obtaining lower ;lower bounds ;bounds estimates ;estimates minimum ;minimum needed ;needed solve ;solve problem ;problem general ;general obtaining ;obtaining nontrivial ;nontrivial lower ;lower bound ;bound simple ;simple sounding ;sounding problem ;problem difficult ;difficult task ;task opposed ;opposed ascertaining ;ascertaining efficiency ;efficiency algorithm ;algorithm task ;task establish ;establish limit ;limit efficiency ;efficiency algorithm ;algorithm unknown ;unknown necessitates ;necessitates careful ;careful description ;description operations ;operations algorithms ;algorithms allowed ;allowed define ;define carefully ;carefully rules ;rules game ;game speak ;speak claims ;claims large ;large dustbin ;dustbin impossibility ;impossibility related ;related statements ;statements celebrated ;celebrated british ;british physicist ;physicist lord ;lord kelvin ;kelvin heavier ;heavier air ;air flying ;flying machines ;machines impossible ;impossible section ;section discusses ;discusses decision ;decision trees ;trees technique ;technique applications ;applications establish ;establish lower ;lower bounds ;bounds efficiency ;efficiency comparison ;comparison based ;based algorithms ;algorithms sorting ;sorting searching ;searching sorted ;sorted arrays ;arrays result ;result questions ;questions faster ;faster sorting ;sorting algorithm ;algorithm mergesort ;mergesort binary ;binary fastest ;fastest algorithm ;algorithm searching ;searching sorted ;sorted array ;array intuition ;intuition answers ;answers questions ;questions incidentally ;incidentally decision ;decision trees ;trees great ;great vehicle ;vehicle directing ;directing solution ;solution puzzles ;puzzles coin ;coin weighing ;weighing problem ;problem discussed ;discussed section ;section deals ;deals intractability ;intractability problems ;problems solved ;solved polynomial ;polynomial developed ;developed area ;area theoretical ;theoretical science ;science called ;called computational ;computational complexity ;complexity theory ;theory basic ;basic elements ;elements theory ;theory discuss ;discuss informally ;informally fundamental ;fundamental notions ;notions problems ;problems important ;important unresolved ;unresolved theoretical ;theoretical science ;science relationship ;relationship problems ;problems section ;section chapter ;chapter deals ;deals numerical ;numerical analysis ;analysis science ;science concerns ;concerns algorithms ;algorithms solving ;solving problems ;problems continuous ;continuous mathematics ;mathematics solving ;solving equations ;equations systems ;systems equations ;equations evaluating ;evaluating func ;func tions ;tions computing ;computing integrals ;integrals nature ;nature problems ;problems imposes ;imposes types ;types limitations ;limitations solved ;solved solving ;solving approximately ;approximately requires ;requires dealing ;dealing numbers ;numbers rep ;rep resented ;resented digital ;digital precision ;precision manipulating ;manipulating approximate ;approximate numbers ;numbers proper ;proper lead ;lead inaccurate ;inaccurate results ;results solving ;solving basic ;basic quadratic ;quadratic equation ;equation poses ;poses sig ;sig nificant ;nificant difficulties ;difficulties require ;require modification ;modification canonical ;canonical formula ;formula equation ;equation roots ;roots lower ;lower bound ;bound arguments ;arguments efficiency ;efficiency algorithm ;algorithm ways ;ways establish ;establish asymp ;asymp totic ;totic efficiency ;efficiency class ;class worst ;worst case ;case class ;class stands ;stands respect ;respect hierarchy ;hierarchy efficiency ;efficiency classes ;classes outlined ;outlined section ;section exam ;exam ple ;ple selection ;selection sort ;sort efficiency ;efficiency quadratic ;quadratic fast ;fast algorithm ;algorithm tower ;tower hanoi ;hanoi problem ;problem ficiency ;ficiency exponential ;exponential comparison ;comparison akin ;akin proverbial ;proverbial comparison ;comparison apples ;apples oranges ;oranges algorithms ;algorithms solve ;solve problems ;problems alternative ;alternative possibly ;possibly fairer ;fairer approach ;approach efficient ;efficient algorithm ;algorithm respect ;respect algorithms ;algorithms problem ;problem light ;light selection ;selection sort ;sort considered ;considered log ;log sorting ;sorting algorithms ;algorithms tower ;tower hanoi ;hanoi algorithm ;algorithm turns ;turns fastest ;fastest problem ;problem solves ;solves ascertain ;ascertain efficiency ;efficiency algorithm ;algorithm respect ;respect algorithms ;algorithms problem ;problem desirable ;desirable efficiency ;efficiency algorithm ;algorithm solving ;solving problem ;problem knowing ;knowing lower ;lower bound ;bound improvement ;improvement achieve ;achieve quest ;quest algorithm ;algorithm problem ;problem bound ;bound tight ;tight algorithm ;algorithm efficiency ;efficiency class ;class lower ;lower bound ;bound constant ;constant factor ;factor improvement ;improvement gap ;gap efficiency ;efficiency fastest ;fastest algorithm ;algorithm lower ;lower bound ;bound door ;door improvement ;improvement remains ;remains faster ;faster algorithm ;algorithm matching ;matching lower ;lower bound ;bound lower ;lower bound ;bound proved ;proved section ;section methods ;methods establishing ;establishing lower ;lower bounds ;bounds illustrate ;illustrate specific ;specific examples ;examples analyzing ;analyzing efficiency ;efficiency specific ;specific algorithms ;algorithms preceding ;preceding chapters ;chapters distinguish ;distinguish lower ;lower bound ;bound class ;class minimum ;minimum times ;times operation ;operation executed ;executed problem ;problem difficult ;difficult immediately ;immediately conclude ;conclude algorithm ;algorithm finding ;finding median ;median numbers ;numbers simple ;simple prove ;prove comparison ;comparison based ;based algorithm ;algorithm problem ;problem comparisons ;comparisons worst ;worst case ;case odd ;odd trivial ;trivial lower ;lower bounds ;bounds simplest ;simplest method ;method obtaining ;obtaining lower ;lower bound ;bound class ;class based ;based counting ;counting items ;items problem ;problem input ;input processed ;processed output ;output items ;items produced ;produced algorithm ;algorithm read ;read items ;items process ;process write ;write outputs ;outputs yields ;yields trivial ;trivial lower ;lower bound ;bound algorithm ;algorithm generating ;generating permutations ;permutations distinct ;distinct items ;items size ;size output ;output bound ;bound tight ;tight good ;good algorithms ;algorithms generating ;generating permutations ;permutations spend ;spend constant ;constant initial ;initial section ;section problem ;problem evaluating ;evaluating polynomial ;polynomial degree ;degree anxn ;anxn coefficients ;coefficients easy ;easy coefficients ;coefficients processed ;processed polynomial ;polynomial evaluation ;evaluation algorithm ;algorithm case ;case unprocessed ;unprocessed coefficient ;coefficient polynomial ;polynomial nonzero ;nonzero means ;means algorithm ;algorithm lower ;lower bound ;bound tight ;tight left ;left evaluation ;evaluation algorithm ;algorithm problem ;problem exercises ;exercises horner ;horner section ;section linear ;linear similar ;similar vein ;vein trivial ;trivial lower ;lower bound ;bound computing ;computing product ;product matrices ;matrices algorithm ;algorithm process ;process elements ;elements input ;input matrices ;matrices generate ;generate elements ;elements product ;product unknown ;unknown bound ;bound tight ;tight trivial ;trivial lower ;lower bounds ;bounds low ;low trivial ;trivial bound ;bound traveling ;traveling salesman ;salesman problem ;problem input ;input intercity ;intercity distances ;distances output ;output cities ;cities making ;making optimal ;optimal bound ;bound useless ;useless algorithm ;algorithm running ;running polynomial ;polynomial function ;function degree ;degree obstacle ;obstacle deriving ;deriving meaningful ;meaningful lower ;lower bound ;bound method ;method lies ;lies determining ;determining input ;input processed ;processed algorithm ;algorithm solving ;solving problem ;problem searching ;searching element ;element sorted ;sorted array ;array require ;require processing ;processing elements ;elements problem ;problem determining ;determining connectivity ;connectivity undirected ;undirected graph ;graph defined ;defined adjacency ;adjacency matrix ;matrix plausible ;plausible algorithm ;algorithm existence ;existence potential ;potential edges ;edges proof ;proof fact ;fact trivial ;trivial information ;information theoretic ;theoretic arguments ;arguments approach ;approach outlined ;outlined takes ;takes account ;account size ;size problem ;problem output ;output information ;information theoretical ;theoretical approach ;approach seeks ;seeks establish ;establish lower ;lower bound ;bound based ;based information ;information game ;game deducing ;deducing positive ;positive integer ;integer selected ;selected person ;person questions ;questions answers ;answers uncertainty ;uncertainty algorithm ;algorithm solving ;solving problem ;problem resolve ;resolve measured ;measured log ;log bits ;bits needed ;needed possibilities ;possibilities accurate ;accurate yielding ;yielding bit ;bit information ;information algorithm ;algorithm output ;output selected ;selected algorithm ;algorithm log ;log steps ;steps determine ;determine output ;output worst ;worst case ;case approach ;approach exploited ;exploited called ;called information ;information theoretic ;theoretic argument ;argument connection ;connection information ;information theory ;theory proved ;proved finding ;finding called ;called information ;information theoretic ;theoretic lower ;lower bounds ;bounds problems ;problems involving ;involving comparisons ;comparisons sorting ;sorting searching ;searching underlying ;underlying idea ;idea realized ;realized precisely ;precisely mechanism ;mechanism decision ;decision trees ;trees importance ;importance technique ;technique discuss ;discuss separately ;separately section ;section adversary ;adversary arguments ;arguments revisit ;revisit game ;game guessing ;guessing idea ;idea information ;information theoretic ;theoretic argument ;argument prove ;prove algorithm ;algorithm solves ;solves problem ;problem log ;log questions ;questions worst ;worst case ;case playing ;playing role ;role hostile ;hostile adversary ;adversary make ;make algorithm ;algorithm questions ;questions adversary ;adversary starts ;starts numbers ;numbers potentially ;potentially selected ;selected cheating ;cheating game ;game concerned ;concerned prove ;prove assertion ;assertion adversary ;adversary leaves ;leaves largest ;largest set ;set numbers ;numbers consistent ;consistent previously ;previously answers ;answers strategy ;strategy leaves ;leaves half ;half numbers ;numbers algorithm ;algorithm stops ;stops size ;size set ;set reduced ;reduced adversary ;adversary exhibit ;exhibit legitimate ;legitimate input ;input algorithm ;algorithm failed ;failed simple ;simple technical ;technical log ;log iterations ;iterations shrink ;shrink element ;element set ;set element ;element set ;set halving ;halving rounding ;rounding size ;size remaining ;remaining set ;set log ;log questions ;questions asked ;asked algorithm ;algorithm worst ;worst case ;case illustrates ;illustrates adversary ;adversary method ;method establishing ;establishing lower ;lower bounds ;bounds based ;based logic ;logic malevolent ;malevolent honest ;honest adversary ;adversary malevolence ;malevolence makes ;makes algorithm ;algorithm consuming ;consuming path ;path honesty ;honesty forces ;forces consistent ;consistent choices ;choices lower ;lower bound ;bound obtained ;obtained measuring ;measuring needed ;needed shrink ;shrink set ;set potential ;potential inputs ;inputs single ;single input ;input consuming ;consuming path ;path problem ;problem merging ;merging sorted ;sorted lists ;lists size ;size single ;single sorted ;sorted size ;size simplicity ;simplicity assume ;assume distinct ;distinct problem ;problem unique ;unique solution ;solution encountered ;encountered problem ;problem discussing ;discussing mergesort ;mergesort section ;section recall ;recall merging ;merging repeatedly ;repeatedly comparing ;comparing elements ;elements remaining ;remaining lists ;lists outputting ;outputting smaller ;smaller key ;key comparisons ;comparisons worst ;worst case ;case algorithm ;algorithm merging ;merging algorithm ;algorithm merging ;merging faster ;faster turns ;turns knuth ;knuth knuiii ;knuiii quotes ;quotes adversary ;adversary method ;method proving ;proving lower ;lower bound ;bound key ;key comparisons ;comparisons comparison ;comparison based ;based algorithm ;algorithm problem ;problem adversary ;adversary true ;true comparison ;comparison merging ;merging algorithm ;algorithm combined ;combined consistent ;consistent combined ;combined algorithm ;algorithm explicitly ;explicitly adjacent ;adjacent pairs ;pairs elements ;elements comparisons ;comparisons compared ;compared transpose ;transpose keys ;keys consistent ;consistent comparisons ;comparisons distinguished ;distinguished configuration ;configuration lower ;lower bound ;bound key ;key comparisons ;comparisons needed ;needed merging ;merging algorithm ;algorithm problem ;problem reduction ;reduction encountered ;encountered problem ;problem reduction ;reduction approach ;approach section ;section discussed ;discussed algorithm ;algorithm problem ;problem reducing ;reducing problem ;problem solvable ;solvable algorithm ;algorithm similar ;similar reduction ;reduction idea ;idea finding ;finding lower ;lower bound ;bound problem ;problem hard ;hard problem ;problem lower ;lower bound ;bound words ;words arbitrary ;arbitrary instance ;instance problem ;problem transformed ;transformed efficient ;efficient fashion ;fashion instance ;instance problem ;problem algorithm ;algorithm solving ;solving solve ;solve lower ;lower bound ;bound lower ;lower bound ;bound table ;table lists ;lists important ;important problems ;problems purpose ;purpose table ;table problems ;problems establishing ;establishing lower ;lower bounds ;bounds problem ;problem reduction ;reduction problem ;problem lower ;lower bound ;bound tightness ;tightness sorting ;sorting log ;log searching ;searching sorted ;sorted array ;array log ;log element ;element uniqueness ;uniqueness problem ;problem log ;log multiplication ;multiplication digit ;digit integers ;integers unknown ;unknown multiplication ;multiplication matrices ;matrices unknown ;unknown establish ;establish lower ;lower bounds ;bounds sorting ;sorting searching ;searching sec ;sec tion ;tion element ;element uniqueness ;uniqueness problem ;problem asks ;asks duplicates ;duplicates numbers ;numbers encountered ;encountered problem ;problem sections ;sections proof ;proof lower ;lower bound ;bound seemingly ;seemingly simple ;simple problem ;problem based ;based sophisti ;sophisti cated ;cated mathematical ;mathematical analysis ;analysis scope ;scope pre ;pre elementary ;elementary exposition ;exposition algebraic ;algebraic prob ;prob lems ;lems table ;table lower ;lower bounds ;bounds quoted ;quoted trivial ;trivial improved ;improved remains ;remains unknown ;unknown establishing ;establishing lower ;lower bound ;bound reduction ;reduction euclidean ;euclidean minimum ;minimum spanning ;spanning tree ;tree problem ;problem points ;points cartesian ;cartesian plane ;plane construct ;construct tree ;tree minimum ;minimum total ;total length ;length vertices ;vertices points ;points problem ;problem lower ;lower bound ;bound element ;element uniqueness ;uniqueness problem ;problem transform ;transform set ;set real ;real numbers ;numbers set ;set points ;points cartesian ;cartesian plane ;plane simply ;simply adding ;adding points ;points coordinate ;coordinate minimum ;minimum spanning ;spanning tree ;tree set ;set points ;points shortest ;shortest edge ;edge checking ;checking length ;length edge ;edge uniqueness ;uniqueness numbers ;numbers reduction ;reduction implies ;implies log ;log lower ;lower bound ;bound euclidean ;euclidean minimum ;minimum spanning ;spanning tree ;tree problem ;problem final ;final results ;results complexity ;complexity problems ;problems reduction ;reduction technique ;technique relative ;relative complexity ;complexity prob ;prob lems ;lems formulas ;formulas problems ;problems computing ;computing product ;product digit ;digit integers ;integers squaring ;squaring digit ;digit integer ;integer complexity ;complexity class ;class seemingly ;seemingly simpler ;simpler similar ;similar results ;results matrix ;matrix operations ;operations multi ;multi plying ;plying symmetric ;symmetric matrices ;matrices turns ;turns complexity ;complexity class ;class multiplying ;multiplying arbitrary ;arbitrary square ;square matrices ;matrices result ;result based ;based observation ;observation problem ;problem special ;special case ;case problem ;problem multiplying ;multiplying arbitrary ;arbitrary square ;square matrices ;matrices problem ;problem multiplying ;multiplying symmetric ;symmetric matrices ;matrices transpose ;transpose matrices ;matrices stands ;stands matrix ;matrix elements ;elements zeros ;zeros needed ;needed product ;product easily ;easily extracted ;extracted true ;true matrices ;matrices original ;original size ;size minor ;minor technical ;technical complication ;complication impact ;impact complexity ;complexity classes ;classes results ;results interesting ;interesting encounter ;encounter important ;important applications ;applications reduction ;reduction approach ;approach comparing ;comparing problem ;problem complexity ;complexity section ;section exercises ;exercises prove ;prove algorithm ;algorithm solving ;solving alternating ;alternating disk ;disk puzzle ;puzzle problem ;problem exercises ;exercises make ;make moves ;moves solve ;solve lower ;lower bound ;bound tight ;tight prove ;prove classic ;classic recursive ;recursive algorithm ;algorithm tower ;tower hanoi ;hanoi puzzle ;puzzle section ;section makes ;makes minimum ;minimum disk ;disk moves ;moves needed ;needed solve ;solve problem ;problem trivial ;trivial lower ;lower bound ;bound class ;class problems ;problems indi ;indi cate ;cate bound ;bound tight ;tight finding ;finding largest ;largest element ;element array ;array checking ;checking completeness ;completeness graph ;graph represented ;represented adjacency ;adjacency matrix ;matrix generating ;generating subsets ;subsets element ;element set ;set determining ;determining real ;real numbers ;numbers distinct ;distinct problem ;problem identifying ;identifying lighter ;lighter fake ;fake coin ;coin identical ;identical coins ;coins scale ;scale information ;information theoretic ;theoretic argument ;argument text ;text ques ;ques tions ;tions guessing ;guessing game ;game conclude ;conclude algorithm ;algorithm identifying ;identifying fake ;fake log ;log weighings ;weighings worst ;worst case ;case prove ;prove comparison ;comparison based ;based algorithm ;algorithm finding ;finding largest ;largest element ;element set ;set real ;real numbers ;numbers make ;make comparisons ;comparisons worst ;worst case ;case tight ;tight lower ;lower bound ;bound sorting ;sorting array ;array exchanging ;exchanging adjacent ;adjacent elements ;elements adversary ;adversary argument ;argument proof ;proof efficiency ;efficiency algorithm ;algorithm checks ;checks connectivity ;connectivity graph ;graph vertices ;vertices provided ;provided operation ;operation allowed ;allowed algorithm ;algorithm inquire ;inquire presence ;presence edge ;edge vertices ;vertices graph ;graph lower ;lower bound ;bound tight ;tight minimum ;minimum comparisons ;comparisons needed ;needed comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm merge ;merge sorted ;sorted lists ;lists sizes ;sizes elements ;elements prove ;prove validity ;validity product ;product matrices ;matrices transformation ;transformation product ;product symmetric ;symmetric matrices ;matrices section ;section formulas ;formulas complexity ;complexity equiva ;equiva lence ;lence multiplication ;multiplication squaring ;squaring integers ;integers complexity ;complexity equivalence ;equivalence multiplication ;multiplication squaring ;squaring square ;square matrices ;matrices multiplication ;multiplication matrices ;matrices reduced ;reduced squaring ;squaring matrix ;matrix tight ;tight lower ;lower bound ;bound class ;class problem ;problem finding ;finding closest ;closest numbers ;numbers real ;real numbers ;numbers tight ;tight lower ;lower bound ;bound class ;class placement ;placement problem ;problem exercises ;exercises decision ;decision trees ;trees important ;important algorithms ;algorithms sorting ;sorting searching ;searching comparing ;comparing items ;items inputs ;inputs study ;study performance ;performance algorithms ;algorithms device ;device called ;called decision ;decision tree ;tree figure ;figure presents ;presents decision ;decision tree ;tree algorithm ;algorithm finding ;finding minimum ;minimum numbers ;numbers internal ;internal node ;node binary ;binary decision ;decision tree ;tree represents ;represents key ;key comparison ;comparison node ;node left ;left subtree ;subtree information ;information subsequent ;subsequent comparisons ;comparisons subtree ;subtree case ;case sake ;sake simplicity ;simplicity assume ;assume section ;section input ;input items ;items distinct ;distinct leaf ;leaf represents ;represents outcome ;outcome algorithm ;algorithm run ;run input ;input size ;size leaves ;leaves greater ;greater outcomes ;outcomes algorithms ;algorithms outcome ;outcome arrived ;arrived chain ;chain comparisons ;comparisons case ;case decision ;decision tree ;tree figure ;figure important ;important leaves ;leaves large ;large outcomes ;outcomes algorithm ;algorithm input ;input size ;size traced ;traced path ;path root ;root leaf ;leaf decision ;decision tree ;tree comparisons ;comparisons algorithm ;algorithm figure ;figure decision ;decision tree ;tree finding ;finding minimum ;minimum numbers ;numbers run ;run equal ;equal length ;length path ;path comparisons ;comparisons worst ;worst case ;case equal ;equal height ;height algorithm ;algorithm decision ;decision tree ;tree central ;central idea ;idea model ;model lies ;lies observation ;observation tree ;tree leaves ;leaves dictated ;dictated outcomes ;outcomes tall ;tall leaves ;leaves specifically ;specifically difficult ;difficult prove ;prove binary ;binary tree ;tree leaves ;leaves height ;height log ;log binary ;binary tree ;tree height ;height largest ;largest leaves ;leaves largest ;largest leaves ;leaves tree ;tree words ;words immediately ;immediately implies ;implies inequality ;inequality puts ;puts lower ;lower bound ;bound heights ;heights binary ;binary decision ;decision trees ;trees worst ;worst case ;case comparisons ;comparisons comparison ;comparison based ;based algorithm ;algorithm problem ;problem bound ;bound called ;called informationtheoretic ;informationtheoretic lower ;lower bound ;bound section ;section illustrate ;illustrate technique ;technique important ;important problems ;problems sorting ;sorting searching ;searching sorted ;sorted array ;array decision ;decision trees ;trees sorting ;sorting algorithms ;algorithms comparison ;comparison based ;based comparing ;comparing elements ;elements sorted ;sorted studying ;studying properties ;properties decision ;decision trees ;trees algorithms ;algorithms derive ;derive important ;important lower ;lower bounds ;bounds efficiencies ;efficiencies interpret ;interpret outcome ;outcome sorting ;sorting algorithm ;algorithm finding ;finding permutation ;permutation element ;element indices ;indices input ;input puts ;puts elements ;elements ascending ;ascending element ;element orderable ;orderable items ;items real ;real numbers ;numbers strings ;strings outcome ;outcome obtained ;obtained sorting ;sorting figure ;figure permutation ;permutation general ;general outcomes ;outcomes sorting ;sorting arbitrary ;arbitrary element ;element equal ;equal abc ;abc cba ;cba bac ;bac cba ;cba figure ;figure decision ;decision tree ;tree element ;element selection ;selection sort ;sort triple ;triple node ;node state ;state array ;array sorted ;sorted redundant ;redundant comparisons ;comparisons single ;single outcome ;outcome results ;results previously ;previously comparisons ;comparisons inequality ;inequality implies ;implies height ;height binary ;binary decision ;decision tree ;tree comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm worst ;worst case ;case parisons ;parisons algorithm ;algorithm log ;log cworst ;cworst log ;log stirling ;stirling formula ;formula log ;log words ;words log ;log comparisons ;comparisons worst ;worst case ;case sort ;sort arbitrary ;arbitrary element ;element comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm mergesort ;mergesort makes ;makes comparisons ;comparisons worst ;worst case ;case asymptotically ;asymptotically optimal ;optimal implies ;implies asymptotic ;asymptotic lower ;lower bound ;bound log ;log tight ;tight substantially ;substantially improved ;improved lower ;lower bound ;bound log ;log improved ;improved values ;values log ;log proved ;proved comparisons ;comparisons sufficient ;sufficient sort ;sort array ;array elements ;elements worst ;worst case ;case decision ;decision trees ;trees analyzing ;analyzing average ;average case ;case efficiencies ;efficiencies comparison ;comparison based ;based sorting ;sorting algorithms ;algorithms compute ;compute average ;average comparisons ;comparisons algorithm ;algorithm average ;average depth ;depth decision ;decision tree ;tree leaves ;leaves average ;average path ;path length ;length root ;root leaves ;leaves abc ;abc bac ;bac acb ;acb bca ;bca figure ;figure decision ;decision tree ;tree element ;element insertion ;insertion sort ;sort element ;element insertion ;insertion sort ;sort decision ;decision tree ;tree figure ;figure standard ;standard assumption ;assumption outcomes ;outcomes sorting ;sorting equally ;equally lower ;lower bound ;bound average ;average comparisons ;comparisons cavg ;cavg comparison ;comparison based ;based algorithm ;algorithm sorting ;sorting element ;element proved ;proved cavg ;cavg log ;log earlier ;earlier lower ;lower bound ;bound log ;log surprised ;surprised lower ;lower bounds ;bounds average ;average worst ;worst cases ;cases identical ;identical bounds ;bounds obtained ;obtained maximizing ;maximizing compar ;compar isons ;isons average ;average worst ;worst cases ;cases sorting ;sorting algorithm ;algorithm average ;average case ;case efficiency ;efficiency significantly ;significantly worst ;worst case ;case efficiency ;efficiency decision ;decision trees ;trees searching ;searching sorted ;sorted array ;array section ;section decision ;decision trees ;trees establishing ;establishing lower ;lower bounds ;bounds key ;key comparisons ;comparisons searching ;searching sorted ;sorted array ;array keys ;keys principal ;principal algorithm ;algorithm problem ;problem binary ;binary section ;section comparisons ;comparisons binary ;binary worst ;worst case ;case cwbsorst ;cwbsorst formula ;formula cwbsorst ;cwbsorst log ;log figure ;figure ternary ;ternary decision ;decision tree ;tree binary ;binary element ;element array ;array decision ;decision trees ;trees determine ;determine smallest ;smallest comparisons ;comparisons dealing ;dealing comparisons ;comparisons key ;key compared ;compared element ;element natural ;natural ternary ;ternary decision ;decision trees ;trees figure ;figure presents ;presents tree ;tree case ;case internal ;internal nodes ;nodes tree ;tree array ;array elements ;elements compared ;compared key ;key leaves ;leaves matching ;matching element ;element case ;case successful ;successful interval ;interval key ;key belongs ;belongs case ;case unsuccessful ;unsuccessful represent ;represent algorithm ;algorithm searching ;searching sorted ;sorted array ;array comparisons ;comparisons ternary ;ternary decision ;decision tree ;tree similar ;similar figure ;figure array ;array elements ;elements decision ;decision trees ;trees leaves ;leaves successful ;successful searches ;searches unsuccessful ;unsuccessful minimum ;minimum height ;height ternary ;ternary tree ;tree leaves ;leaves log ;log lower ;lower bound ;bound worst ;worst case ;case comparisons ;comparisons cworst ;cworst log ;log lower ;lower bound ;bound smaller ;smaller log ;log worst ;worst case ;case comparisons ;comparisons binary ;binary large ;large values ;values smaller ;smaller equal ;equal log ;log positive ;positive integer ;integer problem ;problem section ;section exercises ;exercises prove ;prove lower ;lower bound ;bound binary ;binary optimal ;optimal turns ;turns lower ;lower bound ;bound binary ;binary ternary ;ternary decision ;decision trees ;trees figure ;figure internal ;internal nodes ;nodes tree ;tree correspond ;correspond comparisons ;comparisons terminal ;terminal nodes ;nodes successful ;successful searches ;searches leaves ;leaves represent ;represent unsuccessful ;unsuccessful searches ;searches searching ;searching element ;element array ;array figure ;figure binary ;binary decision ;decision tree ;tree binary ;binary element ;element array ;array comparison ;comparison decision ;decision trees ;trees figures ;figures illustrates ;illustrates binary ;binary decision ;decision tree ;tree simply ;simply ternary ;ternary decision ;decision tree ;tree middle ;middle subtrees ;subtrees eliminated ;eliminated applying ;applying inequality ;inequality binary ;binary decision ;decision trees ;trees immediately ;immediately yields ;yields cworst ;cworst log ;log inequality ;inequality closes ;closes gap ;gap lower ;lower bound ;bound worstcase ;worstcase comparisons ;comparisons binary ;binary log ;log sophisticated ;sophisticated analysis ;analysis knuiii ;knuiii section ;section shows ;shows standard ;standard assumptions ;assumptions searches ;searches binary ;binary makes ;makes smallest ;smallest comparisons ;comparisons average ;average comparisons ;comparisons algorithm ;algorithm turns ;turns log ;log successful ;successful unsuccessful ;unsuccessful searches ;searches exercises ;exercises prove ;prove mathematical ;mathematical induction ;induction log ;log binary ;binary tree ;tree height ;height leaves ;leaves log ;log ternary ;ternary tree ;tree height ;height leaves ;leaves problem ;problem finding ;finding median ;median element ;element set ;set orderable ;orderable items ;items information ;information theoretic ;theoretic lower ;lower bound ;bound comparison ;comparison based ;based gorithms ;gorithms solving ;solving problem ;problem draw ;draw decision ;decision tree ;tree algorithm ;algorithm solving ;solving problem ;problem worst ;worst case ;case comparisons ;comparisons algorithm ;algorithm greater ;greater information ;information theoretic ;theoretic lower ;lower bound ;bound algorithm ;algorithm matching ;matching lower ;lower bound ;bound exists ;exists algorithm ;algorithm prove ;prove impossibility ;impossibility draw ;draw decision ;decision tree ;tree key ;key comparisons ;comparisons worst ;worst average ;average cases ;cases element ;element basic ;basic sort ;sort element ;element enhanced ;enhanced sort ;sort stops ;stops swaps ;swaps design ;design comparison ;comparison based ;based algorithm ;algorithm sorting ;sorting element ;element array ;array smallest ;smallest element ;element comparisons ;comparisons design ;design comparison ;comparison based ;based algorithm ;algorithm sorting ;sorting element ;element array ;array comparisons ;comparisons worst ;worst case ;case draw ;draw binary ;binary decision ;decision tree ;tree searching ;searching element ;element sorted ;sorted sequen ;sequen tial ;tial lower ;lower bounds ;bounds searching ;searching sorted ;sorted array ;array log ;log positive ;positive integer ;integer log ;log positive ;positive integer ;integer information ;information theoretic ;theoretic lower ;lower bound ;bound finding ;finding maximum ;maximum numbers ;numbers comparison ;comparison based ;based algorithms ;algorithms bound ;bound tight ;tight tournament ;tournament tree ;tree binary ;binary tree ;tree reflecting ;reflecting results ;results knockout ;knockout tournament ;tournament leaves ;leaves represent ;represent players ;players entering ;entering tournament ;tournament internal ;internal node ;node represents ;represents winner ;winner played ;played players ;players represented ;represented node ;node children ;children winner ;winner tournament ;tournament represented ;represented root ;root tree ;tree total ;total games ;games played ;played tournament ;tournament rounds ;rounds tournament ;tournament design ;design efficient ;efficient algorithm ;algorithm determine ;determine player ;player information ;information produced ;produced tournament ;tournament extra ;extra games ;games algorithm ;algorithm require ;require advanced ;advanced fake ;fake coin ;coin problem ;problem coins ;coins identical ;identical appearance ;appearance genuine ;genuine fake ;fake unknown ;unknown fake ;fake coin ;coin lighter ;lighter heavier ;heavier genuine ;genuine scale ;scale sets ;sets coins ;coins tipping ;tipping left ;left staying ;staying scale ;scale sets ;sets heavier ;heavier problem ;problem coins ;coins genuine ;genuine fake ;fake coin ;coin establish ;establish lighter ;lighter heavier ;heavier genuine ;genuine prove ;prove algorithm ;algorithm problem ;problem make ;make log ;log weighings ;weighings worst ;worst case ;case draw ;draw decision ;decision tree ;tree algorithm ;algorithm solves ;solves problem ;problem coins ;coins weighings ;weighings prove ;prove exists ;exists algorithm ;algorithm solves ;solves problem ;problem coins ;coins weighings ;weighings draw ;draw decision ;decision tree ;tree algorithm ;algorithm solves ;solves problem ;problem coins ;coins weighings ;weighings extra ;extra coin ;coin genuine ;genuine draw ;draw decision ;decision tree ;tree algorithm ;algorithm solves ;solves classic ;classic version ;version problem ;problem coins ;coins weighings ;weighings extra ;extra coins ;coins jigsaw ;jigsaw puzzle ;puzzle jigsaw ;jigsaw puzzle ;puzzle pieces ;pieces section ;section puzzle ;puzzle set ;set pieces ;pieces connected ;connected consists ;consists connecting ;connecting sections ;sections algorithm ;algorithm minimize ;minimize moves ;moves required ;required puzzle ;puzzle problems ;problems study ;study computational ;computational complexity ;complexity problems ;problems scientists ;scientists computing ;computing professionals ;professionals problem ;problem solved ;solved polynomial ;polynomial algorithm ;algorithm definition ;definition algorithm ;algorithm solves ;solves problem ;problem polynomial ;polynomial worst ;worst case ;case efficiency ;efficiency belongs ;belongs polynomial ;polynomial problem ;problem input ;input size ;size big ;big notation ;notation problems ;problems solvable ;solvable logarithmic ;logarithmic solvable ;solvable polynomial ;polynomial problems ;problems solved ;solved polynomial ;polynomial called ;called tractable ;tractable problems ;problems solved ;solved polynomial ;polynomial called ;called intractable ;intractable reasons ;reasons drawing ;drawing intractability ;intractability line ;line entries ;entries table ;table discussion ;discussion section ;section imply ;imply solve ;solve arbitrary ;arbitrary instances ;instances intractable ;intractable problems ;problems reasonable ;reasonable instances ;instances small ;small huge ;huge difference ;difference running ;running times ;times polynomials ;polynomials drastically ;drastically degrees ;degrees polynomial ;polynomial algorithms ;algorithms degree ;degree polynomial ;polynomial higher ;higher addition ;addition polynomials ;polynomials bound ;bound running ;running times ;times algorithms ;algorithms extremely ;extremely large ;large coefficients ;coefficients polynomial ;polynomial functions ;functions convenient ;convenient properties ;properties sum ;sum composition ;composition polynomials ;polynomials fourth ;fourth choice ;choice class ;class led ;led development ;development extensive ;extensive theory ;theory called ;called computational ;computational complexity ;complexity seeks ;seeks classify ;classify problems ;problems inherent ;inherent difficulty ;difficulty theory ;theory problem ;problem intractability ;intractability remains ;remains principal ;principal models ;models computations ;computations reasonable ;reasonable input ;input encoding ;encoding schemes ;schemes problem ;problem consideration ;consideration basic ;basic notions ;notions ideas ;ideas complexity ;complexity theory ;theory section ;section interested ;interested formal ;formal treatment ;treatment theory ;theory finding ;finding wealth ;wealth textbooks ;textbooks devoted ;devoted subject ;subject aro ;aro problems ;problems discussed ;discussed solved ;solved polynomial ;polynomial algorithm ;algorithm computing ;computing product ;product greatest ;greatest common ;common divisor ;divisor integers ;integers sorting ;sorting searching ;searching key ;key pattern ;pattern text ;text string ;string checking ;checking connectivity ;connectivity acyclicity ;acyclicity graph ;graph finding ;finding minimum ;minimum spanning ;spanning tree ;tree shortest ;shortest paths ;paths weighted ;weighted graph ;graph invited ;invited examples ;examples informally ;informally problems ;problems solved ;solved polynomial ;polynomial set ;set science ;science theoreticians ;theoreticians formal ;formal definition ;definition includes ;includes decision ;decision problems ;problems answers ;answers definition ;definition class ;class decision ;decision problems ;problems solved ;solved polynomial ;polynomial deterministic ;deterministic algorithms ;algorithms class ;class problems ;problems called ;called polynomial ;polynomial restriction ;restriction decision ;decision problems ;problems justified ;justified reasons ;reasons exclude ;exclude problems ;problems solvable ;solvable polynomial ;polynomial exponentially ;exponentially large ;large output ;output problems ;problems arise ;arise naturally ;naturally generating ;generating subsets ;subsets set ;set permutations ;permutations distinct ;distinct items ;items apparent ;apparent outset ;outset solved ;solved polynomial ;polynomial important ;important problems ;problems decision ;decision problems ;problems natural ;natural formulation ;formulation reduced ;reduced series ;series decision ;decision problems ;problems easier ;easier study ;study minimum ;minimum colors ;colors needed ;needed color ;color vertices ;vertices graph ;graph adjacent ;adjacent vertices ;vertices colored ;colored color ;color exists ;exists coloring ;coloring graph ;graph vertices ;vertices colors ;colors called ;called coloring ;coloring problem ;problem series ;series decision ;decision problem ;problem coloring ;coloring solution ;solution solves ;solves optimization ;optimization version ;version graph ;graph coloring ;coloring problem ;problem natural ;natural decision ;decision problem ;problem solved ;solved polynomial ;polynomial turns ;turns fact ;fact decision ;decision problems ;problems solved ;solved algorithm ;algorithm problems ;problems called ;called undecidable ;undecidable opposed ;opposed decidable ;decidable problems ;problems solved ;solved algorithm ;algorithm famous ;famous undecidable ;undecidable problem ;problem alan ;alan turing ;turing problem ;problem called ;called halting ;halting problem ;problem input ;input determine ;determine halt ;halt input ;input working ;working indefinitely ;indefinitely surprisingly ;surprisingly short ;short proof ;proof remarkable ;remarkable fact ;fact contra ;contra diction ;diction assume ;assume algorithm ;algorithm solves ;solves halting ;halting problem ;problem input ;input halts ;halts input ;input halt ;halt input ;input output ;output algorithm ;algorithm pair ;pair construct ;construct halts ;halts halt ;halt input ;input halt ;halt halts ;halts input ;input substituting ;substituting halts ;halts halt ;halt input ;input halt ;halt halts ;halts input ;input contradiction ;contradiction outcomes ;outcomes completes ;completes proof ;proof decidable ;decidable intractable ;intractable problems ;problems examples ;examples surprisingly ;surprisingly small ;small arise ;arise naturally ;naturally constructed ;constructed sake ;sake theoretical ;theoretical argument ;argument important ;important problems ;problems polynomial ;polynomial algorithm ;algorithm impossibility ;impossibility algorithm ;algorithm proved ;proved classic ;classic monograph ;monograph garey ;garey johnson ;johnson gar ;gar problems ;problems areas ;areas science ;science mathematics ;mathematics operations ;operations research ;research small ;small sample ;sample problems ;problems fall ;fall category ;category hamiltonian ;hamiltonian circuit ;circuit problem ;problem determine ;determine graph ;graph hamiltonian ;hamiltonian circuit ;circuit path ;path starts ;starts ends ;ends vertex ;vertex passes ;passes vertices ;vertices traveling ;traveling salesman ;salesman problem ;problem shortest ;shortest cities ;cities positive ;positive integer ;integer distances ;distances shortest ;shortest hamiltonian ;hamiltonian circuit ;circuit graph ;graph positive ;positive integer ;integer weights ;weights breakthrough ;breakthrough contributions ;contributions theoretical ;theoretical science ;science english ;english mathematician ;mathematician science ;science pioneer ;pioneer alan ;alan turing ;turing recognition ;recognition acm ;acm principal ;principal society ;society computing ;computing professionals ;professionals researchers ;researchers named ;named award ;award outstanding ;outstanding contributions ;contributions theoretical ;theoretical science ;science lecture ;lecture occasion ;occasion richard ;richard karp ;karp kar ;kar interesting ;interesting historical ;historical account ;account development ;development complexity ;complexity theory ;theory knapsack ;knapsack problem ;problem valuable ;valuable subset ;subset items ;items positive ;positive integer ;integer weights ;weights values ;values knapsack ;knapsack positive ;positive integer ;integer capacity ;capacity partition ;partition problem ;problem positive ;positive integers ;integers determine ;determine possi ;possi ble ;ble partition ;partition disjoint ;disjoint subsets ;subsets sum ;sum bin ;bin packing ;packing problem ;problem items ;items sizes ;sizes positive ;positive rational ;rational num ;num bers ;bers larger ;larger smallest ;smallest bins ;bins size ;size graph ;graph coloring ;coloring problem ;problem graph ;graph chromatic ;chromatic smallest ;smallest colors ;colors assigned ;assigned graph ;graph vertices ;vertices adjacent ;adjacent vertices ;vertices assigned ;assigned color ;color integer ;integer linear ;linear programming ;programming problem ;problem maximum ;maximum minimum ;minimum linear ;linear function ;function integer ;integer valued ;valued variables ;variables subject ;subject finite ;finite set ;set constraints ;constraints linear ;linear equalities ;equalities inequalities ;inequalities problems ;problems decision ;decision problems ;problems decision ;decision version ;version counterparts ;counterparts coloring ;coloring problem ;problem graph ;graph coloring ;coloring problem ;problem problems ;problems common ;common exponential ;exponential worse ;worse growth ;growth choices ;choices function ;function input ;input size ;size solution ;solution problems ;problems fall ;fall umbrella ;umbrella solved ;solved polynomial ;polynomial eulerian ;eulerian circuit ;circuit problem ;problem existence ;existence traverses ;traverses edges ;edges graph ;graph solved ;solved checking ;checking addition ;addition graph ;graph connectivity ;connectivity graph ;graph vertices ;vertices degrees ;degrees striking ;striking counterintuitive ;counterintuitive problem ;problem cycles ;cycles traversing ;traversing edges ;edges eulerian ;eulerian circuits ;circuits easier ;easier seemingly ;seemingly similar ;similar problem ;problem cycles ;cycles visiting ;visiting vertices ;vertices hamiltonian ;hamiltonian circuits ;circuits common ;common feature ;feature vast ;vast majority ;majority decision ;decision problems ;problems fact ;fact solving ;solving problems ;problems computationally ;computationally difficult ;difficult checking ;checking proposed ;proposed solution ;solution solves ;solves problem ;problem computationally ;computationally easy ;easy polynomial ;polynomial proposed ;proposed solution ;solution randomly ;randomly generated ;generated leaving ;leaving task ;task verifying ;verifying validity ;validity easy ;easy proposed ;proposed vertices ;vertices hamiltonian ;hamiltonian circuit ;circuit graph ;graph vertices ;vertices graph ;graph vertices ;vertices distinct ;distinct consecutive ;consecutive pair ;pair vertices ;vertices connected ;connected edge ;edge general ;general observation ;observation decision ;decision problems ;problems led ;led scientists ;scientists notion ;notion nondeterministic ;nondeterministic algorithm ;algorithm definition ;definition nondeterministic ;nondeterministic algorithm ;algorithm stage ;stage procedure ;procedure takes ;takes input ;input instance ;instance decision ;decision problem ;problem nondeterministic ;nondeterministic guessing ;guessing stage ;stage arbitrary ;arbitrary string ;string generated ;generated thought ;thought candidate ;candidate solution ;solution instance ;instance gibberish ;gibberish deterministic ;deterministic verification ;verification stage ;stage deterministic ;deterministic algorithm ;algorithm takes ;takes input ;input outputs ;outputs represents ;represents solution ;solution instance ;instance solution ;solution instance ;instance algorithm ;algorithm returns ;returns allowed ;allowed halt ;halt nondeterministic ;nondeterministic algorithm ;algorithm solves ;solves decision ;decision problem ;problem instance ;instance problem ;problem returns ;returns execution ;execution words ;words require ;require nondeterministic ;nondeterministic algorithm ;algorithm capable ;capable guessing ;guessing solution ;solution verify ;verify validity ;validity output ;output instance ;instance finally ;finally nondeterministic ;nondeterministic algorithm ;algorithm nondeterministic ;nondeterministic polynomial ;polynomial efficiency ;efficiency verification ;verification stage ;stage polynomial ;polynomial define ;define class ;class problems ;problems definition ;definition class ;class decision ;decision problems ;problems solved ;solved nondeterministic ;nondeterministic polynomial ;polynomial algorithms ;algorithms class ;class problems ;problems called ;called nondeterministic ;nondeterministic polynomial ;polynomial decision ;decision problems ;problems class ;class includes ;includes problems ;problems true ;true problem ;problem deterministic ;deterministic polynomialtime ;polynomialtime algorithm ;algorithm solves ;solves verification ;verification stage ;stage nondeterministic ;nondeterministic algorithm ;algorithm simply ;simply ignores ;ignores string ;string generated ;generated nondeterministic ;nondeterministic guessing ;guessing stage ;stage hamiltonian ;hamiltonian circuit ;circuit problem ;problem partition ;partition problem ;problem decision ;decision versions ;versions traveling ;traveling salesman ;salesman knapsack ;knapsack graph ;graph coloring ;coloring hundreds ;hundreds difficult ;difficult combinatorial ;combinatorial optimization ;optimization problems ;problems cataloged ;cataloged gar ;gar halting ;halting problem ;problem rare ;rare examples ;examples decision ;decision problems ;problems leads ;leads important ;important theoretical ;theoretical science ;science proper ;proper subset ;subset classes ;classes fact ;fact symbolically ;symbolically imply ;imply hundreds ;hundreds difficult ;difficult combinatorial ;combinatorial decision ;decision problems ;problems solved ;solved polynomial ;polynomial algorithm ;algorithm scientists ;scientists failed ;failed algorithms ;algorithms persistent ;persistent efforts ;efforts years ;years decision ;decision problems ;problems cast ;cast doubts ;doubts possibility ;possibility problems ;problems informally ;informally problem ;problem difficult ;difficult problem ;problem class ;class definition ;definition problem ;problem reduced ;reduced polynomial ;polynomial shown ;shown symbolically ;symbolically figure ;figure formal ;formal definitions ;definitions concepts ;concepts definition ;definition decision ;decision problem ;problem polynomially ;polynomially reducible ;reducible decision ;decision problem ;problem exists ;exists function ;function transforms ;transforms instances ;instances maps ;maps instances ;instances computable ;computable polynomial ;polynomial algorithm ;algorithm definition ;definition immediately ;immediately implies ;implies problem ;problem polynomially ;polynomially reducible ;reducible problem ;problem solved ;solved polynomial ;polynomial problem ;problem solved ;solved polynomial ;polynomial definition ;definition decision ;decision problem ;problem belongs ;belongs class ;class problem ;problem polynomially ;polynomially reducible ;reducible fact ;fact closely ;closely related ;related decision ;decision problems ;problems polynomially ;polynomially reducible ;reducible surprising ;surprising prove ;prove hamiltonian ;hamiltonian circuit ;circuit problem ;problem polynomially ;polynomially reducible ;reducible decision ;decision version ;version traveling ;traveling problems ;problems problem ;problem figure ;figure notion ;notion problem ;problem polynomial ;polynomial reductions ;reductions problems ;problems problem ;problem shown ;shown arrows ;arrows salesman ;salesman problem ;problem stated ;stated existence ;existence problem ;problem hamil ;hamil tonian ;tonian circuit ;circuit longer ;longer positive ;positive integer ;integer graph ;graph positive ;positive integer ;integer weights ;weights map ;map graph ;graph instance ;instance hamiltonian ;hamiltonian circuit ;circuit problem ;problem weighted ;weighted graph ;graph representing ;representing stance ;stance traveling ;traveling salesman ;salesman problem ;problem assigning ;assigning weight ;weight edge ;edge adding ;adding edge ;edge weight ;weight pair ;pair nonadjacent ;nonadjacent vertices ;vertices upper ;upper bound ;bound hamiltonian ;hamiltonian circuit ;circuit length ;length vertices ;vertices transformation ;transformation polynomial ;polynomial instance ;instance hamiltonian ;hamiltonian circuit ;circuit problem ;problem hamiltonian ;hamiltonian circuit ;circuit image ;image length ;length making ;making image ;image instance ;instance decision ;decision traveling ;traveling salesman ;salesman problem ;problem conversely ;conversely hamiltonian ;hamiltonian circuit ;circuit length ;length larger ;larger length ;length circuit ;circuit edges ;edges making ;making inverse ;inverse image ;image instance ;instance decision ;decision traveling ;traveling salesman ;salesman problem ;problem instance ;instance hamiltonian ;hamiltonian circuit ;circuit problem ;problem completes ;completes proof ;proof notion ;notion completeness ;completeness requires ;requires polynomial ;polynomial reducibility ;reducibility problems ;problems unknown ;unknown problem ;problem bewildering ;bewildering variety ;variety decision ;decision problems ;problems short ;short amazing ;amazing specific ;specific examples ;examples problems ;problems neverthe ;neverthe mathematical ;mathematical feat ;feat accomplished ;accomplished independently ;independently stephen ;stephen cook ;cook united ;united states ;states leonid ;leonid levin ;levin soviet ;soviet union ;union paper ;paper cook ;cook coo ;coo showed ;showed called ;called cnf ;cnf satisfiability ;satisfiability problem ;problem cnf ;cnf satisfiability ;satisfiability problem ;problem deals ;deals boolean ;boolean expressions ;expressions boolean ;boolean expression ;expression represented ;represented conjunctive ;conjunctive normal ;normal expression ;expression involving ;involving boolean ;boolean variables ;variables negations ;negations denoted ;denoted cnf ;cnf satisfiability ;satisfiability problem ;problem asks ;asks assign ;assign values ;values true ;true false ;false variables ;variables boolean ;boolean expression ;expression cnf ;cnf make ;make entire ;entire expression ;expression true ;true easy ;easy formula ;formula true ;true false ;false entire ;entire expression ;expression true ;true cook ;cook levin ;levin discovery ;discovery problems ;problems scientists ;scientists hundreds ;hundreds thousands ;thousands exam ;exam ples ;ples problems ;problems decision ;decision versions ;versions men ;men tioned ;tioned hamiltonian ;hamiltonian circuit ;circuit traveling ;traveling salesman ;salesman partition ;partition bin ;bin packing ;packing graph ;graph coloring ;coloring problems ;problems history ;history science ;science breakthrough ;breakthrough discoveries ;discoveries independently ;independently simultaneously ;simultaneously scientists ;scientists fact ;fact levin ;levin introduced ;introduced general ;general notion ;notion completeness ;completeness decision ;decision problems ;problems paper ;paper lev ;lev published ;published years ;years cook ;cook leading ;leading candidate ;candidate problem ;problem determining ;determining integer ;integer prime ;prime composite ;composite portant ;portant theoretical ;theoretical breakthrough ;breakthrough professor ;professor manindra ;manindra agrawal ;agrawal students ;students neeraj ;neeraj kayal ;kayal nitin ;nitin saxena ;saxena indian ;indian institute ;institute technology ;technology kanpur ;kanpur announced ;announced discovery ;discovery deterministic ;deterministic polynomial ;polynomial algorithm ;algorithm primality ;primality testing ;testing agr ;agr algorithm ;algorithm solve ;solve related ;related problem ;problem factoring ;factoring large ;large composite ;composite integers ;integers lies ;lies heart ;heart widely ;widely encryption ;encryption method ;method called ;called rsa ;rsa algorithm ;algorithm riv ;riv showing ;showing decision ;decision problem ;problem steps ;steps problem ;problem randomly ;randomly generated ;generated string ;string checked ;checked polynomial ;polynomial determine ;determine represents ;represents solution ;solution problem ;problem typically ;typically easy ;easy problem ;problem reducible ;reducible problem ;problem polynomial ;polynomial transitivity ;transitivity polynomial ;polynomial reduction ;reduction showing ;showing problem ;problem transformed ;transformed problem ;problem polynomial ;polynomial figure ;figure transformation ;transformation ingenious ;ingenious incomparably ;incomparably simpler ;simpler proving ;proving existence ;existence transformation ;transformation problem ;problem hamiltonian ;hamiltonian circuit ;circuit problem ;problem polynomial ;polynomial reducibility ;reducibility decision ;decision traveling ;traveling salesman ;salesman problem ;problem implies ;implies easy ;easy decision ;decision traveling ;traveling salesman ;salesman problem ;problem class ;class definition ;definition completeness ;completeness immediately ;immediately implies ;implies exists ;exists deterministic ;deterministic polynomial ;polynomial algorithm ;algorithm problem ;problem solved ;solved polynomial ;polynomial deterministic ;deterministic algo ;algo rithm ;rithm words ;words finding ;finding polynomial ;polynomial algorithm ;algorithm problems ;problems problem ;problem candidate ;candidate completeness ;completeness figure ;figure proving ;proving completeness ;completeness reduction ;reduction problem ;problem qualitative ;qualitative difference ;difference complexity ;complexity checking ;checking proposed ;proposed solution ;solution finding ;finding polyno ;polyno mial ;mial vast ;vast majority ;majority decision ;decision problems ;problems kinds ;kinds implications ;implications make ;make scientists ;scientists successful ;successful finding ;finding mathematical ;mathematical proof ;proof intriguing ;intriguing conjecture ;conjecture sur ;sur prisingly ;prisingly interviews ;interviews authors ;authors lives ;lives discoveries ;discoveries prominent ;prominent scientists ;scientists sha ;sha cook ;cook uncertain ;uncertain eventual ;eventual resolution ;resolution dilemma ;dilemma levin ;levin contended ;contended outcome ;outcome eventual ;eventual proves ;proves knowing ;knowing problem ;problem important ;important practical ;practical implications ;implications today ;today means ;means faced ;faced problem ;problem aim ;aim gaining ;gaining fame ;fame fortune ;fortune designing ;designing polynomial ;polynomial algorithm ;algorithm solving ;solving instances ;instances approaches ;approaches seek ;seek alleviate ;alleviate intractability ;intractability problems ;problems approaches ;approaches outlined ;outlined chapter ;chapter exercises ;exercises game ;game chess ;chess posed ;posed decision ;decision problem ;problem legal ;legal positioning ;positioning chess ;chess pieces ;pieces information ;information determine ;determine win ;win decision ;decision problem ;problem decidable ;decidable problem ;problem solved ;solved algorithm ;algorithm running ;running nlog ;nlog assertions ;assertions true ;true problem ;problem tractable ;tractable problem ;problem intractable ;intractable impossible ;impossible examples ;examples graphs ;graphs examples ;examples graph ;graph hamiltonian ;hamiltonian circuit ;circuit eulerian ;eulerian circuit ;circuit graph ;graph eulerian ;eulerian circuit ;circuit hamiltonian ;hamiltonian circuit ;circuit graph ;graph hamiltonian ;hamiltonian circuit ;circuit eulerian ;eulerian circuit ;circuit graph ;graph includes ;includes vertices ;vertices hamil ;hamil tonian ;tonian circuit ;circuit eulerian ;eulerian circuit ;circuit clay ;clay mathematics ;mathematics institute ;institute cmi ;cmi cambridge ;cambridge massachusetts ;massachusetts designated ;designated prize ;prize solution ;solution problem ;problem graphs ;graphs chromatic ;chromatic design ;design polynomial ;polynomial algorithm ;algorithm graph ;graph coloring ;coloring problem ;problem deter ;deter vertices ;vertices graph ;graph colored ;colored colors ;colors adjacent ;adjacent vertices ;vertices colored ;colored color ;color brute ;brute algorithm ;algorithm solving ;solving composite ;composite num ;num ber ;ber problem ;problem successive ;successive integers ;integers divisors ;divisors divides ;divides evenly ;evenly composite ;composite algorithm ;algorithm problem ;problem class ;class state ;state decision ;decision version ;version problems ;problems outline ;outline polynomial ;polynomial algorithm ;algorithm verifies ;verifies proposed ;proposed solution ;solution solves ;solves problem ;problem assume ;assume proposed ;proposed solution ;solution represents ;represents legitimate ;legitimate input ;input verification ;verification algorithm ;algorithm knapsack ;knapsack problem ;problem bin ;bin packing ;packing problem ;problem partition ;partition problem ;problem polynomially ;polynomially reducible ;reducible decision ;decision version ;version knapsack ;knapsack problem ;problem problems ;problems polynomially ;polynomially reducible ;reducible determine ;determine graph ;graph positive ;positive integer ;integer clique ;clique size ;size clique ;clique size ;size graph ;graph subgraph ;subgraph vertices ;vertices determine ;determine graph ;graph positive ;positive integer ;integer vertex ;vertex size ;size vertex ;vertex size ;size graph ;graph subset ;subset edge ;edge belongs ;belongs iii ;iii determine ;determine graph ;graph positive ;positive integer ;integer independent ;independent set ;set size ;size independent ;independent set ;set size ;size graph ;graph subset ;subset vertices ;vertices adjacent ;adjacent determine ;determine problem ;problem sequences ;sequences uppercase ;uppercase lowercase ;lowercase letters ;letters select ;select letter ;letter sequence ;sequence selecting ;selecting upper ;upper lowercase ;lowercase versions ;versions letter ;letter sequences ;sequences abc ;abc choose ;choose sequence ;sequence fourth ;fourth make ;make required ;required selections ;selections sequences ;sequences kar ;kar diagrams ;diagrams contradict ;contradict current ;current state ;state knowledge ;knowledge complexity ;complexity classes ;classes npc ;npc problems ;problems npc ;npc king ;king arthur ;arthur expects ;expects knights ;knights annual ;annual dinner ;dinner camelot ;camelot unfortu ;unfortu nately ;nately knights ;knights quarrel ;quarrel arthur ;arthur quarrels ;quarrels arthur ;arthur seat ;seat guests ;guests table ;table quarreling ;quarreling knights ;knights sit ;sit standard ;standard problem ;problem model ;model king ;king arthur ;arthur task ;task research ;research project ;project proof ;proof arthur ;arthur problem ;problem solution ;solution knight ;knight quarrel ;quarrel knights ;knights challenges ;challenges numerical ;numerical algorithms ;algorithms numerical ;numerical analysis ;analysis science ;science cerned ;cerned algorithms ;algorithms solving ;solving mathematical ;mathematical problems ;problems description ;description important ;important clarification ;clarification problems ;problems continuous ;continuous mathematics ;mathematics solving ;solving equations ;equations systems ;systems equations ;equations evaluating ;evaluating func ;func tions ;tions computing ;computing integrals ;integrals opposed ;opposed problems ;problems discrete ;discrete mathematics ;mathematics dealing ;dealing structures ;structures graphs ;graphs trees ;trees permutations ;permutations combinations ;combinations efficient ;efficient algorithms ;algorithms mathematical ;mathematical problems ;problems stems ;stems fact ;fact problems ;problems arise ;arise models ;models real ;real life ;life phe ;phe nomena ;nomena natural ;natural world ;world social ;social sciences ;sciences fact ;fact numerical ;numerical analysis ;analysis main ;main area ;area research ;research study ;study application ;application science ;science rapid ;rapid proliferation ;proliferation computers ;computers business ;business everyday ;everyday life ;life applications ;applications deal ;deal primarily ;primarily storage ;storage retrieval ;retrieval information ;information relative ;relative importance ;importance numerical ;numerical analysis ;analysis shrunk ;shrunk years ;years applications ;applications enhanced ;enhanced power ;power modern ;modern computers ;computers areas ;areas fundamental ;fundamental research ;research technology ;technology inter ;inter ests ;ests wide ;wide world ;world modern ;modern computing ;computing important ;important understanding ;understanding special ;special challenges ;challenges posed ;posed continuous ;continuous mathematical ;mathematical problems ;problems discuss ;discuss variety ;variety difficulties ;difficulties posed ;posed modeling ;modeling task ;task describing ;describing real ;real life ;life phenomenon ;phenomenon mathematical ;mathematical terms ;terms assuming ;assuming principal ;principal obstacles ;obstacles solving ;solving mathematical ;mathematical problem ;problem major ;major obstacle ;obstacle fact ;fact numerical ;numerical analy ;analy sis ;sis problems ;problems solved ;solved approximately ;approximately replacing ;replacing infinite ;infinite finite ;finite approximation ;approximation computed ;computed approximating ;approximating infinite ;infinite taylor ;taylor series ;series finite ;finite sum ;sum terms ;terms called ;called nth ;nth degree ;degree taylor ;taylor polynomial ;polynomial definite ;definite integral ;integral function ;function approximated ;approximated finite ;finite weighted ;weighted sum ;sum values ;values composite ;composite trapezoidal ;trapezoidal calculus ;calculus class ;class figure ;figure errors ;errors approximations ;approximations called ;called truncation ;truncation errors ;errors major ;major tasks ;tasks numerical ;numerical analysis ;analysis estimate ;estimate magnitudes ;magnitudes truncation ;truncation solving ;solving linear ;linear equations ;equations polynomial ;polynomial evaluation ;evaluation discussed ;discussed sections ;sections rare ;rare exceptions ;exceptions figure ;figure composite ;composite trapezoidal ;trapezoidal errors ;errors typically ;typically calculus ;calculus tools ;tools elementary ;elementary advanced ;advanced approximation ;approximation max ;max segment ;segment endpoints ;endpoints formula ;formula makes ;makes determine ;determine degree ;degree taylor ;taylor polynomial ;polynomial needed ;needed predefined ;predefined accuracy ;accuracy approximation ;approximation compute ;compute formula ;formula truncation ;truncation error ;error smaller ;smaller proceed ;proceed estimate ;estimate formula ;formula max ;max bound ;bound desired ;desired accuracy ;accuracy solve ;solve inequality ;inequality compute ;compute values ;values smallest ;smallest inequality ;inequality holds ;holds similarly ;similarly approximation ;approximation standard ;standard bound ;bound truncation ;truncation error ;error inequality ;inequality max ;max interval ;interval asked ;asked inequality ;inequality exercises ;exercises section ;section problems ;problems errors ;errors called ;called errors ;errors caused ;caused accuracy ;accuracy represent ;represent real ;real numbers ;numbers digital ;digital errors ;errors arise ;arise irrational ;irrational numbers ;numbers definition ;definition require ;require infinite ;infinite digits ;digits exact ;exact representation ;representation rational ;rational numbers ;numbers overwhelming ;overwhelming majority ;majority situations ;situations real ;real numbers ;numbers represented ;represented floating ;floating numbers ;numbers base ;base unsophisticated ;unsophisticated calculators ;calculators digits ;digits representing ;representing fractional ;fractional called ;called mantissa ;mantissa integer ;integer exponent ;exponent range ;range values ;values approximately ;approximately symmetric ;symmetric accuracy ;accuracy floating ;floating representation ;representation depends ;depends significant ;significant digits ;digits representation ;representation computers ;computers levels ;levels precision ;precision single ;single precision ;precision typically ;typically equivalent ;equivalent significant ;significant decimal ;decimal digits ;digits precision ;precision significant ;significant decimal ;decimal digits ;digits extended ;extended precision ;precision significant ;significant decimal ;decimal digits ;digits higher ;higher precision ;precision arithmetic ;arithmetic slows ;slows computations ;computations overcome ;overcome problems ;problems caused ;caused errors ;errors higher ;higher precision ;precision algorithm ;algorithm approximation ;approximation kind ;kind important ;important distinguish ;distinguish absolute ;absolute error ;error relative ;relative error ;error representing ;representing approximation ;approximation absolute ;absolute error ;error relative ;relative error ;error relative ;relative error ;error undefined ;undefined large ;large small ;small numbers ;numbers represented ;represented floating ;floating arithmetic ;arithmetic phenomena ;phenomena called ;called underflow ;underflow respec ;respec tively ;tively arithmetic ;arithmetic operation ;operation yields ;yields result ;result range ;range floating ;floating numbers ;numbers typical ;typical examples ;examples arise ;arise multiplication ;multiplication large ;large numbers ;numbers division ;division small ;small eliminate ;eliminate problem ;problem making ;making simple ;simple expression ;expression evaluated ;evaluated replacing ;replacing expression ;expression equal ;equal computing ;computing logarithm ;logarithm expression ;expression underflow ;underflow occurs ;occurs result ;result operation ;operation nonzero ;nonzero fraction ;fraction small ;small magnitude ;magnitude represented ;represented nonzero ;nonzero floating ;floating underflow ;underflow numbers ;numbers replaced ;replaced special ;special generated ;generated hardware ;hardware event ;event occurred ;occurred important ;important addition ;addition inaccurate ;inaccurate representation ;representation numbers ;numbers arithmetic ;arithmetic operations ;operations performed ;performed exact ;exact subtracting ;subtracting equal ;equal floating ;floating numbers ;numbers large ;large relative ;relative error ;error phenomenon ;phenomenon called ;called subtractive ;subtractive cancellation ;cancellation irrational ;irrational numbers ;numbers represented ;represented floating ;floating numbers ;numbers relative ;relative errors ;errors approximations ;approximations small ;small relative ;relative error ;error representing ;representing difference ;difference floating ;floating representations ;representations large ;large relative ;relative error ;error accurate ;accurate approximations ;approximations significant ;significant magnification ;magnification error ;error lowaccuracy ;lowaccuracy difference ;difference divisor ;divisor encountered ;encountered problem ;problem discussing ;discussing gaussian ;gaussian elimination ;elimination section ;section solution ;solution partial ;partial pivoting ;pivoting numerical ;numerical algorithms ;algorithms involve ;involve thousands ;thousands millions ;millions arithmetic ;arithmetic operations ;operations typical ;typical inputs ;inputs algorithms ;algorithms propagation ;propagation errors ;errors major ;major practical ;practical theoretical ;theoretical standpoints ;standpoints algorithms ;algorithms errors ;errors propagate ;propagate algorithm ;algorithm operations ;operations increasing ;increasing effect ;effect highly ;highly undesirable ;undesirable property ;property numerical ;numerical algorithm ;algorithm called ;called instability ;instability problems ;problems exhibit ;exhibit high ;high sensitivity ;sensitivity input ;input impossible ;impossible design ;design stable ;stable algorithm ;algorithm solve ;solve problems ;problems called ;called ill ;ill conditioned ;conditioned linear ;linear equations ;equations unknowns ;unknowns solution ;solution sensitive ;sensitive small ;small coefficient ;coefficient matrix ;matrix slightly ;slightly values ;values solution ;solution previous ;previous coefficient ;coefficient matrix ;matrix singular ;singular minor ;minor coefficients ;coefficients yield ;yield solutions ;solutions infinitely ;infinitely solutions ;solutions depending ;depending values ;values formal ;formal detailed ;detailed discussion ;discussion degree ;degree ill ;ill condition ;condition coefficient ;coefficient matrix ;matrix numerical ;numerical analysis ;analysis textbooks ;textbooks ger ;ger conclude ;conclude problem ;problem finding ;finding real ;real roots ;roots quadratic ;quadratic equation ;equation real ;real coefficients ;coefficients secondary ;secondary school ;school algebra ;algebra equation ;equation real ;real roots ;roots discriminant ;discriminant nonnegative ;nonnegative roots ;roots formula ;formula solution ;solution posed ;posed problem ;problem mathematician ;mathematician concerned ;concerned solution ;solution algorithm ;algorithm designer ;designer major ;major obstacle ;obstacle evaluating ;evaluating square ;square root ;root positive ;positive integers ;integers irrational ;irrational computed ;computed approximately ;approximately method ;method computing ;computing square ;square roots ;roots commonly ;commonly taught ;taught secondary ;secondary school ;school ton ;ton method ;method important ;important algorithm ;algorithm solving ;solving equations ;equations discuss ;discuss section ;section method ;method generates ;generates sequence ;sequence approximations ;approximations nonnegative ;nonnegative formula ;formula initial ;initial approximation ;approximation chosen ;chosen possibilities ;possibilities difficultto ;difficultto prove ;prove sequence ;sequence decreasing ;decreasing converges ;converges generating ;generating elements ;elements difference ;difference consecutive ;consecutive elements ;elements predefined ;predefined error ;error tolerance ;tolerance sufficiently ;sufficiently approximation ;approximation sequence ;sequence converges ;converges fast ;fast values ;values prove ;prove iterations ;iterations needed ;needed scale ;scale interval ;interval formula ;formula integer ;integer apply ;apply newton ;newton algorithm ;algorithm compute ;compute simplicity ;simplicity scaling ;scaling numbers ;numbers decimal ;decimal places ;places standard ;standard numerical ;numerical analysis ;analysis notation ;notation offs ;offs approximations ;approximations exact ;exact issue ;issue computing ;computing square ;square roots ;roots squared ;squared pun ;pun intended ;intended home ;home free ;free write ;write based ;based formula ;formula impact ;impact errors ;errors obstacles ;obstacles faced ;faced menace ;menace subtractive ;subtractive cancellation ;cancellation larger ;larger root ;root computed ;computed formula ;formula large ;large relative ;relative error ;error paper ;paper george ;george forsythe ;forsythe equation ;equation true ;true roots ;roots significant ;significant digits ;digits george ;george forsythe ;forsythe noted ;noted numerical ;numerical analyst ;analyst played ;played leading ;leading role ;role establishing ;establishing science ;science academic ;academic discipline ;discipline united ;united states ;states words ;words epigraph ;epigraph preface ;preface formula ;formula computations ;computations decimal ;decimal floating ;floating arithmetic ;arithmetic significant ;significant digits ;digits relative ;relative error ;error approximating ;approximating small ;small root ;root large ;large possibility ;possibility subtractive ;subtractive cancellation ;cancellation formula ;formula obtained ;obtained danger ;danger subtractive ;subtractive cancellation ;cancellation denominator ;denominator computed ;computed standard ;standard formula ;formula danger ;danger cancellation ;cancellation positive ;positive case ;case symmetric ;symmetric formulas ;formulas case ;case considered ;considered cases ;cases obstacles ;obstacles applying ;applying formula ;formula related ;related limitations ;limitations floating ;floating arithmetic ;arithmetic small ;small division ;division fight ;fight danger ;danger subtractive ;subtractive cancellation ;cancellation computing ;computing calculating ;calculating precision ;precision problems ;problems overcome ;overcome william ;william kahan ;kahan university ;university toronto ;toronto algorithm ;algorithm considered ;considered significant ;significant achievement ;achievement history ;history numerical ;numerical analysis ;analysis overview ;overview piqued ;piqued seek ;seek information ;information books ;books devoted ;devoted exclusively ;exclusively numerical ;numerical algorithms ;algorithms discuss ;discuss topic ;topic chapter ;chapter classic ;classic methods ;methods solving ;solving equations ;equations unknown ;unknown exercises ;exercises textbooks ;textbooks define ;define significant ;significant digits ;digits approximation ;approximation largest ;largest nonnegative ;nonnegative integer ;integer definition ;definition significant ;significant digits ;digits approximation ;approximation approximate ;approximate absolute ;absolute error ;error exceeding ;exceeding range ;range values ;values range ;range relative ;relative errors ;errors approximations ;approximations approximate ;approximate obtained ;obtained degree ;degree taylor ;taylor polynomial ;polynomial compute ;compute truncation ;truncation error ;error approx ;approx imation ;imation result ;result theoretical ;theoretical prediction ;prediction section ;section derive ;derive formula ;formula composite ;composite trapezoidal ;trapezoidal composite ;composite trapezoidal ;trapezoidal approximate ;approximate definite ;definite integrals ;integrals truncation ;truncation error ;error approximation ;approximation pare ;pare formula ;formula esin ;esin xdx ;xdx computed ;computed composite ;composite trapezoidal ;trapezoidal large ;large subintervals ;subintervals truncation ;truncation error ;error smaller ;smaller solve ;solve systems ;systems linear ;linear equations ;equations ill ;ill conditioned ;conditioned write ;write solve ;solve equation ;equation prove ;prove nonnegative ;nonnegative sequence ;sequence newton ;newton method ;method computing ;computing strictly ;strictly decreasing ;decreasing converges ;converges initial ;initial approximation ;approximation prove ;prove iterations ;iterations newton ;newton method ;method needed ;needed apply ;apply iterations ;iterations newton ;newton method ;method compute ;compute estimate ;estimate absolute ;absolute relative ;relative errors ;errors approximation ;approximation summary ;summary class ;class algorithms ;algorithms solving ;solving problem ;problem lower ;lower bound ;bound efficiency ;efficiency algorithm ;algorithm class ;class trivial ;trivial lower ;lower bound ;bound based ;based counting ;counting items ;items problem ;problem input ;input processed ;processed output ;output items ;items produced ;produced information ;information theoretic ;theoretic lower ;lower bound ;bound obtained ;obtained mecha ;mecha nism ;nism decision ;decision trees ;trees technique ;technique comparison ;comparison based ;based algorithms ;algorithms sorting ;sorting searching ;searching specifically ;specifically general ;general comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm log ;log key ;key comparisons ;comparisons worst ;worst case ;case general ;general comparison ;comparison based ;based algorithm ;algorithm searching ;searching sorted ;sorted array ;array log ;log key ;key comparisons ;comparisons worst ;worst case ;case adversary ;adversary method ;method establishing ;establishing lower ;lower bounds ;bounds based ;based logic ;logic malevolent ;malevolent adversary ;adversary forces ;forces algorithm ;algorithm consuming ;consuming path ;path lower ;lower bound ;bound established ;established reduction ;reduction reducing ;reducing problem ;problem lower ;lower bound ;bound problem ;problem complexity ;complexity theory ;theory seeks ;seeks classify ;classify problems ;problems computational ;computational complexity ;complexity principal ;principal split ;split tractable ;tractable intractable ;intractable problems ;problems solved ;solved polynomial ;polynomial purely ;purely technical ;technical reasons ;reasons complexity ;complexity theory ;theory concentrates ;concentrates decision ;decision problems ;problems answers ;answers halting ;halting problem ;problem undecidable ;undecidable decision ;decision problem ;problem solved ;solved algorithm ;algorithm class ;class decision ;decision problems ;problems solved ;solved polynomial ;polynomial class ;class decision ;decision problems ;problems randomly ;randomly guessed ;guessed solutions ;solutions verified ;verified polynomial ;polynomial important ;important problems ;problems hamiltonian ;hamiltonian circuit ;circuit problem ;problem problems ;problems reducible ;reducible problem ;problem polynomial ;polynomial proof ;proof problem ;problem completeness ;completeness published ;published cook ;cook cnf ;cnf satisfiability ;satisfiability problem ;problem proper ;proper subset ;subset important ;important unresolved ;unresolved issue ;issue theoretical ;theoretical science ;science discovery ;discovery polynomial ;polynomial algorithm ;algorithm thousands ;thousands problems ;problems imply ;imply numerical ;numerical analysis ;analysis science ;science dealing ;dealing solving ;solving continuous ;continuous mathematical ;mathematical problems ;problems types ;types errors ;errors solving ;solving majority ;majority problems ;problems truncation ;truncation error ;error truncation ;truncation errors ;errors stem ;stem replacing ;replacing infinite ;infinite objects ;objects finite ;finite approximations ;approximations errors ;errors inaccuracies ;inaccuracies representing ;representing numbers ;numbers digital ;digital subtractive ;subtractive cancellation ;cancellation result ;result subtracting ;subtracting equal ;equal floating ;floating numbers ;numbers lead ;lead sharp ;sharp relative ;relative roundoff ;roundoff error ;error avoided ;avoided changing ;changing expression ;expression higher ;higher precision ;precision computing ;computing difference ;difference writing ;writing general ;general solving ;solving quadratic ;quadratic equations ;equations difficult ;difficult task ;task problem ;problem computing ;computing square ;square roots ;roots solved ;solved utilizing ;utilizing newton ;newton method ;method problem ;problem subtractive ;subtractive cancellation ;cancellation dealt ;dealt formulas ;formulas depending ;depending coefficient ;coefficient positive ;positive negative ;negative computing ;computing discriminant ;discriminant precision ;ideas gleaming ;gleaming jeweler ;jeweler velvet ;velvet calculus ;calculus algorithm ;algorithm calculus ;calculus rich ;rich body ;body mathematical ;mathematical analysis ;analysis gave ;gave rise ;rise modern ;modern science ;science algorithm ;algorithm modern ;modern world ;world david ;david berlinski ;berlinski advent ;advent algorithm ;algorithm study ;study algorithms ;algorithms professional ;professional practical ;practical theoretical ;theoretical reasons ;reasons study ;study algo ;algo rithms ;rithms practical ;practical standpoint ;standpoint standard ;standard set ;set important ;important algorithms ;algorithms areas ;areas computing ;computing addition ;addition design ;design algorithms ;algorithms analyze ;analyze efficiency ;efficiency theoretical ;theoretical stand ;stand study ;study algorithms ;algorithms called ;called algorithmics ;algorithmics recognized ;recognized cornerstone ;cornerstone science ;science david ;david harel ;harel delightful ;delightful pointedly ;pointedly titled ;titled algorithmics ;algorithmics spirit ;spirit computing ;computing algorithmics ;algorithmics science ;science core ;core science ;science fairness ;fairness relevant ;relevant science ;science business ;business technology ;technology har ;har student ;student computing ;computing related ;related compelling ;compelling reasons ;reasons study ;study algorithms ;algorithms bluntly ;bluntly programs ;programs algorithms ;algorithms applications ;applications indispensable ;indispensable aspects ;aspects professional ;professional personal ;personal lives ;lives studying ;studying algorithms ;algorithms necessity ;necessity people ;people reason ;reason studying ;studying algorithms ;algorithms usefulness ;usefulness developing ;developing alytical ;alytical skills ;skills algorithms ;algorithms special ;special kinds ;kinds solutions ;solutions problems ;problems answers ;answers precisely ;precisely defined ;defined procedures ;procedures answers ;answers specific ;specific algorithm ;algorithm design ;design techniques ;techniques interpreted ;interpreted problem ;problem solving ;solving strategies ;strategies involved ;involved precision ;precision inherently ;inherently imposed ;imposed algorithmic ;algorithmic thinking ;thinking limits ;limits kinds ;kinds problems ;problems solved ;solved algorithm ;algorithm living ;living happy ;happy life ;life rich ;rich famous ;famous required ;required precision ;precision important ;important educational ;educational advantage ;advantage donald ;donald knuth ;knuth prominent ;prominent scientists ;scientists history ;history algorithmics ;algorithmics person ;person trained ;trained science ;science deal ;deal algorithms ;algorithms construct ;construct manipulate ;manipulate understand ;understand analyze ;analyze knowledge ;knowledge preparation ;preparation writing ;writing good ;good programs ;programs general ;general purpose ;purpose mental ;mental tool ;tool definite ;definite aid ;aid understanding ;understanding subjects ;subjects chemistry ;chemistry linguistics ;linguistics music ;music reason ;reason understood ;understood person ;person understand ;understand teaching ;teaching person ;person understand ;understand teaching ;teaching expressing ;expressing algorithm ;algorithm formalize ;formalize things ;things algorithms ;algorithms leads ;leads deeper ;deeper understanding ;understanding simply ;simply comprehend ;comprehend things ;things traditional ;traditional knu ;knu notion ;notion algorithm ;algorithm section ;section examples ;examples algorithms ;algorithms problem ;problem computing ;computing greatest ;greatest common ;common divisor ;divisor reasons ;reasons choice ;choice deals ;deals problem ;problem familiar ;familiar erybody ;erybody middle ;middle school ;school days ;days makes ;makes important ;important problem ;problem solved ;solved algorithms ;algorithms typically ;typically algorithms ;algorithms differ ;differ idea ;idea sophistication ;sophistication efficiency ;efficiency algorithms ;algorithms deserves ;deserves introduced ;introduced age ;age peared ;peared euclid ;euclid famous ;famous treatise ;treatise years ;years ago ;ago enduring ;enduring power ;power importance ;importance finally ;finally investigation ;investigation algorithms ;algorithms leads ;leads general ;general observations ;observations important ;important properties ;properties algo ;algo rithms ;rithms general ;general section ;section deals ;deals algorithmic ;algorithmic problem ;problem solving ;solving discuss ;discuss important ;important issues ;issues related ;related design ;design analysis ;analysis algorithms ;algorithms aspects ;aspects algorithmic ;algorithmic problem ;problem solving ;solving range ;range analysis ;analysis problem ;problem means ;means expressing ;expressing algorithm ;algorithm establishing ;establishing correctness ;correctness analyzing ;analyzing efficiency ;efficiency section ;section magic ;magic recipe ;recipe designing ;designing algorithm ;algorithm arbitrary ;arbitrary problem ;problem established ;established fact ;fact recipe ;recipe material ;material section ;section organizing ;organizing designing ;designing analyzing ;analyzing algorithms ;algorithms section ;section devoted ;devoted problem ;problem types ;types proven ;proven partic ;partic ularly ;ularly important ;important study ;study algorithms ;algorithms application ;application fact ;fact textbooks ;textbooks sed ;sed organized ;organized problem ;problem types ;types hold ;hold view ;view shared ;shared organization ;organization based ;based algorithm ;algorithm design ;design techniques ;techniques superior ;superior case ;case important ;important aware ;aware princi ;princi pal ;pal problem ;problem types ;types commonly ;commonly encountered ;encountered problem ;problem types ;types real ;real life ;life applications ;applications demonstrate ;demonstrate algorithm ;algorithm design ;design techniques ;techniques section ;section review ;review fundamental ;fundamental data ;data structures ;structures meant ;meant reference ;reference deliberate ;deliberate discussion ;discussion topic ;topic detailed ;detailed exposition ;exposition wealth ;wealth good ;good books ;books subject ;subject tailored ;tailored programming ;programming language ;language algorithm ;algorithm universally ;universally agreed ;agreed wording ;wording notion ;notion general ;general agreement ;agreement concept ;concept means ;means algorithm ;algorithm sequence ;sequence unambiguous ;unambiguous instructions ;instructions solving ;solving problem ;problem obtaining ;obtaining required ;required output ;output legitimate ;legitimate input ;input finite ;finite definition ;definition illustrated ;illustrated simple ;simple diagram ;diagram figure ;figure reference ;reference instructions ;instructions definition ;definition implies ;implies thing ;thing capable ;capable understanding ;understanding instructions ;instructions keeping ;keeping mind ;mind electronic ;electronic invented ;invented word ;word meant ;meant human ;human involved ;involved ing ;ing numeric ;numeric calculations ;calculations nowadays ;nowadays computers ;computers ubiquitous ;ubiquitous electronic ;electronic devices ;devices indispensable ;indispensable majority ;majority algorithms ;algorithms intended ;intended eventual ;eventual implementation ;implementation notion ;notion algorithm ;algorithm assumption ;assumption examples ;examples illustrating ;illustrating notion ;notion algorithm ;algorithm section ;section methods ;methods solving ;solving problem ;problem computing ;computing greatest ;greatest common ;common divisor ;divisor integers ;integers examples ;examples illustrate ;illustrate important ;important points ;points nonambiguity ;nonambiguity requirement ;requirement algorithm ;algorithm promised ;promised range ;range inputs ;inputs algorithm ;algorithm works ;works carefully ;carefully algorithm ;algorithm represented ;represented ways ;ways algorithms ;algorithms solving ;solving problem ;problem algorithm ;algorithm input ;input output ;output figure ;figure notion ;notion algorithm ;algorithm algorithms ;algorithms problem ;problem based ;based ideas ;ideas solve ;solve problem ;problem dramatically ;dramatically speeds ;speeds recall ;recall greatest ;greatest common ;common divisor ;divisor nonnegative ;nonnegative integers ;integers denoted ;denoted gcd ;gcd defined ;defined largest ;largest integer ;integer divides ;divides evenly ;evenly remainder ;remainder euclid ;euclid alexandria ;alexandria century ;century outlined ;outlined algorithm ;algorithm solving ;solving problem ;problem volumes ;volumes elements ;elements famous ;famous systematic ;systematic exposition ;exposition geometry ;geometry modern ;modern terms ;terms euclid ;euclid algorithm ;algorithm based ;based applying ;applying repeatedly ;repeatedly equality ;equality gcd ;gcd mod ;mod remainder ;remainder division ;division mod ;mod equal ;equal gcd ;gcd greatest ;greatest common ;common divisor ;divisor initial ;initial gcd ;gcd computed ;computed gcd ;gcd impressed ;impressed algorithm ;algorithm finding ;finding greatest ;greatest common ;common divisor ;divisor larger ;larger numbers ;numbers problem ;problem section ;section exercises ;exercises structured ;structured description ;description algorithm ;algorithm euclid ;euclid algorithm ;algorithm computing ;computing gcd ;gcd proceed ;proceed assign ;assign remainder ;remainder assign ;assign alternatively ;alternatively express ;express algorithm ;algorithm pseudocode ;pseudocode algorithm ;algorithm euclid ;euclid computes ;computes gcd ;gcd euclid ;euclid algorithm ;algorithm input ;input nonnegative ;nonnegative integers ;integers output ;output greatest ;greatest common ;common divisor ;divisor mod ;mod euclid ;euclid algorithm ;algorithm eventually ;eventually observation ;observation integer ;integer pair ;pair smaller ;smaller iteration ;iteration negative ;negative iteration ;iteration mod ;mod smaller ;smaller integer ;integer eventually ;eventually algorithm ;algorithm stops ;stops problems ;problems algorithms ;algorithms computing ;computing greatest ;greatest common ;common divisor ;divisor methods ;methods problem ;problem simply ;simply based ;based definition ;definition greatest ;greatest common ;common divisor ;divisor largest ;largest integer ;integer divides ;divides numbers ;numbers evenly ;evenly common ;common divisor ;divisor greater ;greater smaller ;smaller numbers ;numbers denote ;denote min ;min checking ;checking divides ;divides simply ;simply decrease ;decrease process ;process eventually ;eventually numbers ;numbers algorithm ;algorithm reaches ;reaches stops ;stops consecutive ;consecutive integer ;integer checking ;checking algorithm ;algorithm computing ;computing gcd ;gcd assign ;assign min ;min remainder ;remainder division ;division remainder ;remainder division ;division proceed ;proceed decrease ;decrease euclid ;euclid algorithm ;algorithm presented ;presented correctly ;correctly input ;input numbers ;numbers illustrates ;illustrates important ;important set ;set algorithm ;algorithm inputs ;inputs explicitly ;explicitly carefully ;carefully procedure ;procedure finding ;finding greatest ;greatest common ;common divisor ;divisor familiar ;familiar middle ;middle school ;school middle ;middle school ;school procedure ;procedure computing ;computing gcd ;gcd prime ;prime factors ;factors prime ;prime factors ;factors common ;common factors ;factors prime ;prime expansions ;expansions common ;common factor ;factor occurring ;occurring times ;times repeated ;repeated min ;min times ;times compute ;compute product ;product common ;common factors ;factors greatest ;greatest common ;common divisor ;divisor numbers ;numbers gcd ;gcd nostalgia ;nostalgia days ;days learned ;learned method ;method noting ;noting procedure ;procedure complex ;complex slower ;slower euclid ;euclid algorithm ;algorithm discuss ;discuss methods ;methods finding ;finding comparing ;comparing running ;running times ;times algorithms ;algorithms chapter ;chapter addition ;addition inferior ;inferior efficiency ;efficiency middleschool ;middleschool procedure ;procedure qualify ;qualify presented ;presented legitimate ;legitimate algorithm ;algorithm prime ;prime factorization ;factorization steps ;steps defined ;defined unambiguously ;unambiguously require ;require prime ;prime numbers ;numbers strongly ;strongly middle ;middle school ;school math ;math teacher ;teacher unnecessary ;unnecessary nitpicking ;nitpicking issue ;issue resolved ;resolved write ;write implementing ;implementing procedure ;procedure incidentally ;incidentally defined ;defined ambiguity ;ambiguity easier ;easier rectify ;rectify factorization ;factorization steps ;steps common ;common elements ;elements sorted ;sorted lists ;lists simple ;simple algorithm ;algorithm generating ;generating consecutive ;consecutive primes ;primes exceeding ;exceeding integer ;integer invented ;invented ancient ;ancient greece ;greece sieve ;sieve eratosthenes ;eratosthenes algorithm ;algorithm starts ;starts initializing ;initializing prime ;prime candidates ;candidates consecutive ;consecutive integers ;integers iteration ;iteration algorithm ;algorithm eliminates ;eliminates multiples ;multiples moves ;moves item ;item eliminates ;eliminates multiples ;multiples straightforward ;straightforward version ;version overhead ;overhead numbers ;numbers eliminated ;eliminated needed ;needed multiples ;multiples eliminated ;eliminated previous ;previous remaining ;remaining algorithm ;algorithm continues ;continues fashion ;fashion numbers ;numbers eliminated ;eliminated remaining ;remaining integers ;integers primes ;primes needed ;needed application ;application algorithm ;algorithm finding ;finding primes ;primes exceeding ;exceeding passes ;passes needed ;needed eliminate ;eliminate num ;num bers ;bers eliminated ;eliminated previous ;previous iterations ;iterations algorithm ;algorithm remaining ;remaining numbers ;numbers consecutive ;consecutive primes ;primes equal ;equal largest ;largest multiples ;multiples make ;make iterations ;iterations algorithm ;algorithm multiples ;multiples eliminated ;eliminated current ;current multiple ;multiple smaller ;smaller multiples ;multiples eliminated ;eliminated earlier ;earlier passes ;passes observation ;observation helps ;helps eliminating ;eliminating greater ;greater exceed ;exceed rounded ;rounded denoted ;denoted called ;called floor ;floor function ;function assume ;assume pseudocode ;pseudocode function ;function computing ;computing alternatively ;alternatively inequality ;inequality loop ;loop continuation ;continuation condition ;condition algorithm ;algorithm sieve ;sieve implements ;implements sieve ;sieve eratosthenes ;eratosthenes input ;input positive ;positive integer ;integer output ;output array ;array prime ;prime numbers ;numbers equal ;equal ndo ;ndo pseudocode ;pseudocode eliminated ;eliminated previous ;previous passes ;passes element ;element eliminated ;eliminated remaining ;remaining elements ;elements array ;array primes ;primes incorporate ;incorporate sieve ;sieve eratosthenes ;eratosthenes middle ;middle school ;school procedure ;procedure legitimate ;legitimate algorithm ;algorithm computing ;computing greatest ;greatest common ;common divisor ;divisor positive ;positive integers ;integers special ;special exercised ;exercised input ;input numbers ;numbers equal ;equal mathematicians ;mathematicians prime ;prime strictly ;strictly speaking ;speaking method ;method inputs ;inputs leave ;leave section ;section comment ;comment examples ;examples considered ;considered section ;section majority ;majority algorithms ;algorithms today ;today implemented ;implemented programs ;programs deal ;deal mathematical ;mathematical problems ;problems algorithms ;algorithms helping ;helping daily ;daily routines ;routines professional ;professional personal ;personal ubiquity ;ubiquity algorithms ;algorithms today ;today world ;world resolve ;resolve fascinating ;fascinating engines ;engines information ;information age ;age exercises ;exercises research ;research khorezmi ;khorezmi khwarizmi ;khwarizmi word ;word algorithm ;algorithm derived ;derived origins ;origins words ;words algorithm ;algorithm algebra ;algebra common ;common official ;official purpose ;purpose patent ;patent promotion ;promotion arts ;arts algorithms ;algorithms patentable ;patentable country ;country write ;write driving ;driving directions ;directions school ;school home ;home precision ;precision required ;required algorithm ;algorithm description ;description write ;write recipe ;recipe cooking ;cooking favorite ;favorite dish ;dish precision ;precision required ;required algorithm ;algorithm design ;design algorithm ;algorithm computing ;computing positive ;positive integer ;integer assignment ;assignment comparison ;comparison algorithm ;algorithm basic ;basic arithmetical ;arithmetical operations ;operations design ;design algorithm ;algorithm common ;common elements ;elements sorted ;sorted lists ;lists numbers ;numbers lists ;lists output ;output maximum ;maximum comparisons ;comparisons algorithm ;algorithm makes ;makes lengths ;lengths lists ;lists gcd ;gcd applying ;applying euclid ;euclid algorithm ;algorithm estimate ;estimate times ;times faster ;faster gcd ;gcd euclid ;euclid algorithm ;algorithm compared ;compared algorithm ;algorithm based ;based checking ;checking secutive ;secutive integers ;integers min ;min gcd ;gcd prove ;prove equality ;equality gcd ;gcd mod ;mod pair ;pair positive ;positive integers ;integers euclid ;euclid algorithm ;algorithm pair ;pair integers ;integers smaller ;smaller maximum ;maximum times ;times algorithm ;algorithm execution ;execution input ;input minimum ;minimum divisions ;divisions euclid ;euclid algorithm ;algorithm inputs ;inputs maximum ;maximum divisions ;divisions euclid ;euclid algorithm ;algorithm inputs ;inputs euclid ;euclid algorithm ;algorithm presented ;presented euclid ;euclid treatise ;treatise subtractions ;subtractions integer ;integer divisions ;divisions write ;write pseudocode ;pseudocode version ;version euclid ;euclid algorithm ;algorithm euclid ;euclid game ;game bog ;bog starts ;starts unequal ;unequal positive ;positive integers ;integers board ;board players ;players player ;player write ;write board ;board positive ;positive equal ;equal difference ;difference numbers ;numbers board ;board numbers ;numbers board ;board player ;player loses ;loses game ;game choose ;choose game ;game extended ;extended euclid ;euclid algorithm ;algorithm determines ;determines greatest ;greatest common ;common divisor ;divisor positive ;positive integers ;integers necessarily ;necessarily positive ;positive description ;description extended ;extended euclid ;euclid algorithm ;algorithm knui ;knui implement ;implement language ;language choice ;choice modify ;modify integer ;integer solutions ;solutions diophantine ;diophantine equation ;equation set ;set integer ;integer coefficients ;coefficients locker ;locker doors ;doors lockers ;lockers hallway ;hallway numbered ;numbered sequentially ;sequentially initially ;initially locker ;locker doors ;doors closed ;closed make ;make passes ;passes lockers ;lockers starting ;starting locker ;locker ith ;ith toggle ;toggle door ;door ith ;ith locker ;locker door ;door closed ;closed locker ;locker doors ;doors closed ;closed fundamentals ;fundamentals algorithmic ;algorithmic problem ;problem solving ;solving reiterating ;reiterating important ;important introduction ;introduction chapter ;chapter algorithms ;algorithms procedural ;procedural solutions ;solutions problems ;problems solutions ;solutions answers ;answers specific ;specific instructions ;instructions answers ;answers emphasis ;emphasis precisely ;precisely defined ;defined constructive ;constructive procedures ;procedures makes ;makes science ;science distinct ;distinct disciplines ;disciplines distinguishes ;distinguishes oretical ;oretical mathematics ;mathematics practitioners ;practitioners typically ;typically satisfied ;satisfied proving ;proving existence ;existence solution ;solution problem ;problem possibly ;possibly investigating ;investigating solution ;solution properties ;properties briefly ;briefly discuss ;discuss sequence ;sequence steps ;steps typically ;typically designing ;designing analyzing ;analyzing algorithm ;algorithm figure ;figure understanding ;understanding problem ;problem practical ;practical perspective ;perspective thing ;thing designing ;designing algorithm ;algorithm understand ;understand completely ;completely problem ;problem read ;read problem ;problem description ;description carefully ;carefully questions ;questions doubts ;doubts problem ;problem small ;small examples ;examples special ;special cases ;cases questions ;questions needed ;needed types ;types problems ;problems arise ;arise computing ;computing applications ;applications review ;review section ;section problem ;problem algorithm ;algorithm solving ;solving helps ;helps understand ;understand algorithm ;algorithm works ;works strengths ;strengths weaknesses ;weaknesses choose ;choose algorithms ;algorithms readily ;readily algorithm ;algorithm design ;design sequence ;sequence steps ;steps outlined ;outlined section ;section exciting ;exciting easy ;easy task ;task input ;input algorithm ;algorithm specifies ;specifies instance ;instance problem ;problem algorithm ;algorithm solves ;solves important ;important set ;set instances ;instances algorithm ;algorithm recall ;recall variations ;variations set ;set instances ;instances greatest ;greatest common ;common divisor ;divisor algorithms ;algorithms discussed ;discussed previous ;previous section ;section algorithm ;algorithm correctly ;correctly majority ;majority inputs ;inputs boundary ;boundary algorithm ;algorithm works ;works correctly ;correctly legitimate ;legitimate inputs ;inputs skimp ;skimp algorithmic ;algorithmic problem ;problem solving ;solving process ;process run ;run unnecessary ;unnecessary rework ;rework ascertaining ;ascertaining capabilities ;capabilities computational ;computational device ;device completely ;completely understand ;understand problem ;problem ascertain ;ascertain capabilities ;capabilities computational ;computational device ;device algorithm ;algorithm intended ;intended vast ;vast majority ;majority understand ;understand problem ;problem computational ;computational means ;means exact ;exact approximate ;approximate solving ;solving algorithm ;algorithm design ;design technique ;technique design ;design algorithm ;algorithm prove ;prove correctness ;correctness analyze ;analyze algorithm ;algorithm code ;code algorithm ;algorithm figure ;figure algorithm ;algorithm design ;design analysis ;analysis process ;process algorithms ;algorithms today ;today destined ;destined programmed ;programmed closely ;closely resembling ;resembling von ;von neumann ;neumann machine ;machine architecture ;architecture outlined ;outlined prominent ;prominent hungarian ;hungarian american ;american mathematician ;mathematician john ;john von ;von neumann ;neumann collaboration ;collaboration burks ;burks goldstine ;goldstine essence ;essence architecture ;architecture captured ;captured called ;called random ;random access ;access machine ;machine ram ;ram central ;central assumption ;assumption instructions ;instructions executed ;executed operation ;operation algorithms ;algorithms designed ;designed executed ;executed machines ;machines called ;called sequential ;sequential algorithms ;algorithms central ;central assumption ;assumption ram ;ram model ;model hold ;hold newer ;newer computers ;computers execute ;execute operations ;operations concurrently ;concurrently parallel ;parallel algorithms ;algorithms advantage ;advantage capability ;capability called ;called parallel ;parallel algorithms ;algorithms studying ;studying classic ;classic techniques ;techniques design ;design analysis ;analysis algorithms ;algorithms ram ;ram model ;model remains ;remains cornerstone ;cornerstone algorithmics ;algorithmics foreseeable ;foreseeable future ;future speed ;speed memory ;memory disposal ;disposal designing ;designing algorithm ;algorithm scientific ;scientific qualified ;qualified section ;section scientists ;scientists study ;study algorithms ;algorithms terms ;terms independent ;independent specification ;specification parameters ;parameters designing ;designing algorithm ;algorithm practical ;practical tool ;tool problem ;problem solve ;solve computers ;computers today ;today unimaginably ;unimaginably fast ;fast situations ;situations task ;task important ;important problems ;problems complex ;complex nature ;nature process ;process huge ;huge volumes ;volumes data ;data deal ;deal applications ;applications critical ;critical situations ;situations imperative ;imperative aware ;aware speed ;speed memory ;memory choosing ;choosing exact ;exact approximate ;approximate problem ;problem solving ;solving principal ;principal decision ;decision choose ;choose solving ;solving problem ;problem solving ;solving approximately ;approximately case ;case algorithm ;algorithm called ;called exact ;exact algorithm ;algorithm case ;case algorithm ;algorithm called ;called approximation ;approximation algorithm ;algorithm opt ;opt approximation ;approximation algorithm ;algorithm important ;important problems ;problems simply ;simply solved ;solved instances ;instances examples ;examples extracting ;extracting square ;square roots ;roots solving ;solving nonlinear ;nonlinear equations ;equations evaluating ;evaluating definite ;definite integrals ;integrals algorithms ;algorithms solving ;solving problem ;problem unacceptably ;unacceptably problem ;problem intrinsic ;intrinsic complexity ;complexity problems ;problems involving ;involving large ;large choices ;choices examples ;examples difficult ;difficult problems ;problems chapters ;chapters approximation ;approximation algorithm ;algorithm sophisticated ;sophisticated algorithm ;algorithm solves ;solves problem ;problem algorithm ;algorithm design ;design techniques ;techniques components ;components algorithmic ;algorithmic problem ;problem solving ;solving design ;design algorithm ;algorithm solve ;solve problem ;problem main ;main seeks ;seeks teaching ;teaching general ;general design ;design techniques ;techniques algorithm ;algorithm design ;design technique ;technique algorithm ;algorithm design ;design technique ;technique strategy ;strategy paradigm ;paradigm general ;general approach ;approach solving ;solving problems ;problems algorithmically ;algorithmically applicable ;applicable variety ;variety problems ;problems areas ;areas computing ;computing table ;table contents ;contents majority ;majority chapters ;chapters devoted ;devoted individual ;individual design ;design techniques ;techniques distill ;distill key ;key ideas ;ideas proven ;proven designing ;designing algorithms ;algorithms learning ;learning techniques ;techniques utmost ;utmost importance ;importance reasons ;reasons guidance ;guidance designing ;designing algorithms ;algorithms problems ;problems satisfactory ;satisfactory algorithm ;algorithm language ;language famous ;famous proverb ;proverb learning ;learning techniques ;techniques akin ;akin learning ;learning fish ;fish opposed ;opposed fish ;fish caught ;caught true ;true general ;general techniques ;techniques necessarily ;necessarily applicable ;applicable problem ;problem encounter ;encounter constitute ;constitute powerful ;powerful collection ;collection tools ;tools handy ;handy studies ;studies algorithms ;algorithms cornerstone ;cornerstone science ;science interested ;interested classifying ;classifying principal ;principal subject ;subject science ;science exception ;exception algorithm ;algorithm design ;design techniques ;techniques make ;make classify ;classify algorithms ;algorithms underlying ;underlying design ;design idea ;idea natural ;natural categorize ;categorize study ;study algorithms ;algorithms designing ;designing algorithm ;algorithm data ;data structures ;structures algorithm ;algorithm design ;design techniques ;techniques powerful ;powerful set ;set general ;general proaches ;proaches algorithmic ;algorithmic problem ;problem solving ;solving designing ;designing algorithm ;algorithm problem ;problem challenging ;challenging task ;task design ;design techniques ;techniques simply ;simply inapplicable ;inapplicable problem ;problem techniques ;techniques combined ;combined algorithms ;algorithms hard ;hard pinpoint ;pinpoint applications ;applications design ;design techniques ;techniques design ;design technique ;technique plicable ;plicable algorithm ;algorithm requires ;requires nontrivial ;nontrivial ingenuity ;ingenuity algorithm ;algorithm designer ;designer practice ;practice tasks ;tasks choosing ;choosing general ;general techniques ;techniques applying ;applying easier ;easier rarely ;rarely easy ;easy pay ;pay attention ;attention choosing ;choosing data ;data structures ;structures appro ;appro priate ;priate operations ;operations performed ;performed algorithm ;algorithm sieve ;sieve eratosthenes ;eratosthenes introduced ;introduced section ;section run ;run longer ;longer linked ;linked array ;array implementation ;implementation gorithm ;gorithm design ;design techniques ;techniques discussed ;discussed chapters ;chapters intimately ;intimately structuring ;structuring restructuring ;restructuring data ;data problem ;problem instance ;instance years ;years ago ;ago influential ;influential textbook ;textbook proclaimed ;proclaimed fundamental ;fundamental importance ;importance algo ;algo rithms ;rithms data ;data structures ;structures programming ;programming title ;title algorithms ;algorithms data ;data structures ;structures programs ;programs wir ;wir world ;world oriented ;oriented pro ;pro gramming ;gramming data ;data structures ;structures crucially ;crucially important ;important design ;design analysis ;analysis algorithms ;algorithms review ;review basic ;basic data ;data structures ;structures section ;section methods ;methods algorithm ;algorithm designed ;designed algorithm ;algorithm fashion ;fashion section ;section euclid ;euclid algorithm ;algorithm words ;words free ;free pseudocode ;pseudocode options ;options widely ;widely nowadays ;nowadays algorithms ;algorithms natural ;natural language ;language obvious ;obvious appeal ;appeal inherent ;inherent ambi ;ambi guity ;guity natural ;natural language ;language makes ;makes succinct ;succinct description ;description algorithms ;algorithms surprisingly ;surprisingly difficult ;difficult important ;important skill ;skill strive ;strive process ;process learning ;learning algorithms ;algorithms pseudocode ;pseudocode mixture ;mixture natural ;natural language ;language programming ;programming language ;language constructs ;constructs pseudocode ;pseudocode precise ;precise natural ;natural language ;language usage ;usage yields ;yields succinct ;succinct algorithm ;algorithm descriptions ;descriptions surprisingly ;surprisingly scientists ;scientists agreed ;agreed single ;single pseudocode ;pseudocode leaving ;leaving textbook ;textbook authors ;authors design ;design dialects ;dialects fortunately ;fortunately dialects ;dialects familiar ;familiar modern ;modern programming ;programming language ;language understand ;understand dialect ;dialect selected ;selected minimal ;minimal difficulty ;difficulty reader ;reader sake ;sake simplicity ;simplicity omit ;omit declarations ;declarations variables ;variables indentation ;indentation scope ;scope statements ;statements previous ;previous section ;section arrow ;arrow assignment ;assignment operation ;operation slashes ;slashes comments ;comments earlier ;earlier days ;days computing ;computing dominant ;dominant vehicle ;vehicle algorithms ;algorithms flowchart ;flowchart method ;method expressing ;expressing algorithm ;algorithm collection ;collection connected ;connected geometric ;geometric shapes ;shapes descriptions ;descriptions algorithm ;algorithm steps ;steps representation ;representation technique ;technique proved ;proved inconvenient ;inconvenient simple ;simple algorithms ;algorithms nowadays ;nowadays algorithm ;algorithm books ;books state ;state art ;art computing ;computing reached ;reached algorithm ;algorithm description ;description natural ;natural language ;language pseudocode ;pseudocode fed ;fed electronic ;electronic directly ;directly converted ;converted written ;written language ;language algorithm ;algorithm preferable ;preferable algorithm ;algorithm implementation ;implementation proving ;proving algorithm ;algorithm correctness ;correctness algorithm ;algorithm prove ;prove correctness ;correctness prove ;prove algorithm ;algorithm yields ;yields required ;required result ;result legitimate ;legitimate input ;input finite ;finite correctness ;correctness euclid ;euclid algorithm ;algorithm computing ;computing greatest ;greatest common ;common divisor ;divisor stems ;stems correctness ;correctness equality ;equality gcd ;gcd mod ;mod proof ;proof problem ;problem exercises ;exercises simple ;simple observation ;observation integer ;integer smaller ;smaller iteration ;iteration algorithm ;algorithm fact ;fact algorithm ;algorithm stops ;stops integer ;integer algorithms ;algorithms proof ;proof correctness ;correctness easy ;easy complex ;complex common ;common technique ;technique proving ;proving correctness ;correctness mathematical ;mathematical induction ;induction algorithm ;algorithm iterations ;iterations natural ;natural sequence ;sequence steps ;steps needed ;needed proofs ;proofs mentioning ;mentioning tracing ;tracing algorithm ;algorithm performance ;performance specific ;specific inputs ;inputs worthwhile ;worthwhile activity ;activity prove ;prove algorithm ;algorithm correctness ;correctness conclusively ;conclusively algorithm ;algorithm incorrect ;incorrect instance ;instance input ;input algorithm ;algorithm fails ;fails notion ;notion correctness ;correctness approximation ;approximation algorithms ;algorithms straightforward ;straightforward exact ;exact algorithms ;algorithms approximation ;approximation algorithm ;algorithm error ;error produced ;produced algorithm ;algorithm exceed ;exceed predefined ;predefined limit ;limit examples ;examples investigations ;investigations chapter ;chapter analyzing ;analyzing algorithm ;algorithm algorithms ;algorithms qualities ;qualities correctness ;correctness important ;important efficiency ;efficiency fact ;fact kinds ;kinds algorithm ;algorithm efficiency ;efficiency indicating ;indicating fast ;fast algorithm ;algorithm runs ;runs space ;space ficiency ;ficiency indicating ;indicating extra ;extra memory ;memory general ;general framework ;framework specific ;specific techniques ;techniques analyzing ;analyzing algorithm ;algorithm efficiency ;efficiency chapter ;chapter desirable ;desirable characteristic ;characteristic algorithm ;algorithm simplicity ;simplicity effi ;effi ciency ;ciency precisely ;precisely defined ;defined investigated ;investigated mathematical ;mathematical rigor ;rigor simplicity ;simplicity beauty ;beauty considerable ;considerable degree ;degree eye ;eye beholder ;beholder people ;people euclid ;euclid algorithm ;algorithm simpler ;simpler middle ;middle school ;school procedure ;procedure computing ;computing gcd ;gcd clid ;clid algorithm ;algorithm simpler ;simpler consecutive ;consecutive integer ;integer checking ;checking algorithm ;algorithm simplicity ;simplicity important ;important algorithm ;algorithm characteristic ;characteristic strive ;strive sim ;sim pler ;pler algorithms ;algorithms easier ;easier understand ;understand easier ;easier resulting ;resulting programs ;programs bugs ;bugs undeniable ;undeniable aes ;aes thetic ;thetic appeal ;appeal simplicity ;simplicity simpler ;simpler algorithms ;algorithms efficient ;efficient complicated ;complicated alternatives ;alternatives true ;true case ;case judicious ;judicious compromise ;compromise desirable ;desirable characteristic ;characteristic algorithm ;algorithm generality ;generality fact ;fact issues ;issues generality ;generality problem ;problem algorithm ;algorithm solves ;solves set ;set inputs ;inputs accepts ;accepts issue ;issue easier ;easier design ;design algorithm ;algorithm problem ;problem posed ;posed general ;general terms ;terms problem ;problem determining ;determining integers ;integers prime ;prime common ;common divisor ;divisor equal ;equal easier ;easier design ;design algorithm ;algorithm general ;general problem ;problem computing ;computing greatest ;greatest common ;common divisor ;divisor integers ;integers solve ;solve problem ;problem gcd ;gcd situations ;situations designing ;designing general ;general algorithm ;algorithm unnecessary ;unnecessary difficult ;difficult impossible ;impossible unnecessary ;unnecessary sort ;sort numbers ;numbers median ;median smallest ;smallest element ;element standard ;standard formula ;formula roots ;roots quadratic ;quadratic equation ;equation generalized ;generalized polynomials ;polynomials arbitrary ;arbitrary degrees ;degrees set ;set inputs ;inputs main ;main designing ;designing algorithm ;algorithm set ;set inputs ;inputs natural ;natural problem ;problem integers ;integers equal ;equal inputs ;inputs greatest ;greatest common ;common divisor ;divisor algorithm ;algorithm unnatural ;unnatural standard ;standard formula ;formula roots ;roots quadratic ;quadratic equation ;equation holds ;holds complex ;complex coefficients ;coefficients implement ;implement generality ;generality capability ;capability explicitly ;explicitly required ;required satisfied ;satisfied algorithm ;algorithm efficiency ;efficiency simplicity ;simplicity generality ;generality drawing ;drawing board ;board redesign ;redesign algorithm ;algorithm fact ;fact evaluation ;evaluation positive ;positive searching ;searching algorithmic ;algorithmic solutions ;solutions recall ;recall algorithms ;algorithms previous ;previous section ;section computing ;computing greatest ;greatest common ;common divisor ;divisor generally ;generally algorithm ;algorithm fine ;fine tune ;tune algorithm ;algorithm improvements ;improvements implementation ;implementation sieve ;sieve eratosthenes ;eratosthenes compared ;compared initial ;initial outline ;outline section ;section mind ;mind observation ;observation antoine ;antoine saint ;saint exupe ;exupe french ;french writer ;writer pilot ;pilot aircraft ;aircraft designer ;designer arrived ;arrived perfection ;perfection longer ;longer coding ;coding algorithm ;algorithm algorithms ;algorithms destined ;destined ultimately ;ultimately implemented ;implemented pro ;pro grams ;grams programming ;programming algorithm ;algorithm presents ;presents peril ;peril opportunity ;opportunity peril ;peril lies ;lies possibility ;possibility making ;making transition ;transition algorithm ;algorithm pro ;pro gram ;gram incorrectly ;incorrectly inefficiently ;inefficiently influential ;influential scientists ;scientists strongly ;strongly correctness ;correctness proven ;proven mathematical ;mathematical rigor ;rigor considered ;considered developed ;developed special ;special techniques ;techniques proofs ;proofs gri ;gri power ;power techniques ;techniques formal ;formal verification ;verification small ;small programs ;programs practical ;practical validity ;validity programs ;programs established ;established testing ;testing programs ;programs art ;art science ;science books ;books devoted ;devoted testing ;testing debugging ;debugging important ;important debug ;debug implement ;implement algorithm ;algorithm assume ;assume inputs ;inputs algorithms ;algorithms sets ;sets require ;require verification ;verification implementing ;implementing algorithms ;algorithms programs ;programs actual ;actual applications ;applications verifications ;verifications implementing ;implementing algorithm ;algorithm correctly ;correctly sufficient ;sufficient diminish ;diminish algorithm ;algorithm power ;power inefficient ;inefficient implemen ;implemen tation ;tation modern ;modern compilers ;compilers safety ;safety net ;net regard ;regard code ;code optimization ;optimization mode ;mode aware ;aware standard ;standard tricks ;tricks computing ;computing loop ;loop invariant ;invariant expression ;expression loop ;loop collecting ;collecting common ;common subexpressions ;subexpressions replac ;replac ing ;ing expensive ;expensive operations ;operations cheap ;cheap ker ;ker ben ;ben good ;good discussion ;discussion code ;code tuning ;tuning issues ;issues related ;related algorithm ;algorithm ming ;ming typically ;typically improvements ;improvements speed ;speed constant ;constant factor ;factor algorithm ;algorithm make ;make difference ;difference running ;running orders ;orders magnitude ;magnitude algorithm ;algorithm selected ;selected speedup ;speedup effort ;effort design ;design simplicity ;simplicity essay ;essay collection ;collection jon ;jon bentley ;bentley ben ;ben essays ;essays deal ;deal variety ;variety issues ;issues algorithm ;algorithm design ;design implementation ;implementation justifiably ;justifiably titled ;titled programming ;programming pearls ;pearls wholeheartedly ;wholeheartedly recommend ;recommend writings ;writings jon ;jon bentley ;bentley antoine ;antoine saint ;saint exupe ;exupe working ;working additional ;additional opportunity ;opportunity allowing ;allowing pirical ;pirical analysis ;analysis underlying ;underlying algorithm ;algorithm analysis ;analysis based ;based timing ;timing inputs ;inputs analyzing ;analyzing results ;results obtained ;obtained dis ;dis cuss ;cuss advantages ;advantages disadvantages ;disadvantages approach ;approach analyzing ;analyzing algorithms ;algorithms section ;section conclusion ;conclusion emphasize ;emphasize main ;main lesson ;lesson process ;process depicted ;depicted figure ;figure good ;good algorithm ;algorithm result ;result repeated ;repeated effort ;effort rework ;rework fortunate ;fortunate algorithmic ;algorithmic idea ;idea perfect ;perfect improved ;improved good ;good news ;news makes ;makes ultimate ;ultimate result ;result enjoyable ;enjoyable naming ;naming joy ;joy algorithms ;algorithms real ;real world ;world project ;project schedule ;schedule impatience ;impatience boss ;boss perfection ;perfection expensive ;expensive fact ;fact called ;called designing ;designing algorithm ;algorithm engineering ;engineering activity ;activity calls ;calls compromises ;compromises competing ;competing goals ;goals constraints ;constraints resources ;resources designer ;designer resources ;resources academic ;academic world ;world leads ;leads interesting ;interesting difficult ;difficult investigation ;investigation algorithm ;algorithm optimality ;optimality efficiency ;efficiency algorithm ;algorithm complexity ;complexity problem ;problem solves ;solves minimum ;minimum effort ;effort algorithm ;algorithm exert ;exert solve ;solve problem ;problem problems ;problems algorithm ;algorithm sorts ;sorts array ;array comparing ;comparing values ;values elements ;elements log ;log comparisons ;comparisons arrays ;arrays size ;size section ;section seemingly ;seemingly easy ;easy problems ;problems integer ;integer multiplication ;multiplication scientists ;scientists final ;final important ;important issue ;issue algorithmic ;algorithmic problem ;problem solving ;solving problem ;problem solved ;solved algorithm ;algorithm talking ;talking problems ;problems solution ;solution finding ;finding real ;real roots ;roots quadratic ;quadratic equation ;equation negative ;negative discriminant ;discriminant cases ;cases output ;output indicating ;indicating problem ;problem solution ;solution algorithm ;algorithm talking ;talking ambiguously ;ambiguously stated ;stated problems ;problems unambiguous ;unambiguous problems ;problems simple ;simple undecidable ;undecidable unsolvable ;unsolvable algorithm ;algorithm important ;important problem ;problem appears ;appears section ;section fortunately ;fortunately vast ;vast majority ;majority problems ;problems practical ;practical computing ;computing solved ;solved algorithm ;algorithm leaving ;leaving section ;section misconception ;misconception possibly ;possibly caused ;caused mechanical ;mechanical nature ;nature diagram ;diagram figure ;figure designing ;designing algorithm ;algorithm dull ;dull activity ;activity truth ;truth inventing ;inventing discovering ;discovering algorithms ;algorithms creative ;creative rewarding ;rewarding process ;process designed ;designed convince ;convince case ;case exercises ;exercises world ;world puzzle ;puzzle peasant ;peasant finds ;finds riverbank ;riverbank wolf ;wolf goat ;goat cabbage ;cabbage river ;river boat ;boat room ;room peasant ;peasant item ;item wolf ;wolf goat ;goat cabbage ;cabbage absence ;absence wolf ;wolf eat ;eat goat ;goat eat ;eat cabbage ;cabbage solve ;solve problem ;problem peasant ;peasant prove ;prove solution ;solution peasant ;peasant vegetarian ;vegetarian cabbage ;cabbage eat ;eat goat ;goat cabbage ;cabbage solve ;solve problem ;problem wolf ;wolf protected ;protected species ;species world ;world puzzle ;puzzle people ;people rickety ;rickety bridge ;bridge begin ;begin minutes ;minutes night ;night flashlight ;flashlight maximum ;maximum people ;people bridge ;bridge party ;party crosses ;crosses people ;people flashlight ;flashlight walked ;walked thrown ;thrown person ;person takes ;takes minute ;minute bridge ;bridge person ;person takes ;takes minutes ;minutes person ;person takes ;takes minutes ;minutes person ;person takes ;takes minutes ;minutes pair ;pair rate ;rate slower ;slower person ;person pace ;pace rumor ;rumor internet ;internet interviewers ;interviewers software ;software company ;company located ;located seattle ;seattle problem ;problem interviewees ;interviewees formulas ;formulas considered ;considered algorithm ;algorithm comput ;comput ing ;ing area ;area triangle ;triangle lengths ;lengths positive ;positive numbers ;numbers angle ;angle sides ;sides aha ;aha height ;height base ;base write ;write pseudocode ;pseudocode algorithm ;algorithm finding ;finding real ;real roots ;roots equation ;equation arbitrary ;arbitrary real ;real coefficients ;coefficients assume ;assume availability ;availability square ;square root ;root function ;function sqrt ;sqrt standard ;standard algorithm ;algorithm finding ;finding binary ;binary representation ;representation positive ;positive decimal ;decimal integer ;integer english ;english pseudocode ;pseudocode algorithm ;algorithm favorite ;favorite atm ;atm machine ;machine dispensing ;dispensing cash ;cash description ;description english ;english pseudocode ;pseudocode convenient ;convenient problem ;problem computing ;computing solved ;solved instances ;instances problem ;problem algorithm ;algorithm problem ;problem internet ;internet problem ;problem computing ;computing greatest ;greatest common ;common divisor ;divisor algorithm ;algorithm simpler ;simpler efficient ;efficient algorithm ;algorithm finding ;finding distance ;distance closest ;closest elements ;elements array ;array numbers ;numbers algorithm ;algorithm mindistance ;mindistance input ;input array ;array numbers ;numbers output ;output minimum ;minimum distance ;distance elements ;elements dmin ;dmin make ;make improvements ;improvements algorithmic ;algorithmic solution ;solution problem ;problem algorithm ;algorithm altogether ;altogether implementation ;implementation influential ;influential books ;books problem ;problem solving ;solving titled ;titled solve ;solve pol ;pol written ;written hungarian ;hungarian american ;american mathematician ;mathematician george ;george lya ;lya summarized ;summarized ideas ;ideas summary ;summary internet ;internet outlined ;outlined section ;section common ;common important ;important problem ;problem types ;types limitless ;limitless sea ;sea problems ;problems encounters ;encounters computing ;computing areas ;areas attracted ;attracted attention ;attention researchers ;researchers large ;large driven ;driven problem ;problem practical ;practical importance ;importance specific ;specific characteristics ;characteristics making ;making problem ;problem interesting ;interesting research ;research subject ;subject fortunately ;fortunately motivating ;motivating forces ;forces reinforce ;reinforce cases ;cases section ;section important ;important problem ;problem types ;types sorting ;sorting searching ;searching string ;string processing ;processing graph ;graph problems ;problems combinatorial ;combinatorial problems ;problems geometric ;geometric problems ;problems numerical ;numerical problems ;problems subsequent ;subsequent chapters ;chapters illustrate ;illustrate algorithm ;algorithm design ;design techniques ;techniques methods ;methods algorithm ;algorithm analysis ;analysis sorting ;sorting problem ;problem rearrange ;rearrange items ;items nondecreasing ;nondecreasing problem ;problem meaningful ;meaningful nature ;nature items ;items ordering ;ordering mathematicians ;mathematicians relation ;relation total ;total ordering ;ordering practical ;practical sort ;sort lists ;lists numbers ;numbers characters ;characters alphabet ;alphabet character ;character strings ;strings important ;important records ;records similar ;similar maintained ;maintained schools ;schools students ;students libraries ;libraries holdings ;holdings companies ;companies employees ;employees case ;case records ;records choose ;choose piece ;piece information ;information sorting ;sorting choose ;choose sort ;sort student ;student records ;records alphabetical ;alphabetical names ;names student ;student grade ;grade average ;average specially ;specially chosen ;chosen piece ;piece information ;information called ;called key ;key scientists ;scientists sorting ;sorting keys ;keys items ;items records ;records integers ;integers sorted ;sorted begin ;begin sorted ;sorted required ;required output ;output task ;task ranking ;ranking internet ;internet results ;results ranking ;ranking students ;students gpa ;gpa scores ;scores sorting ;sorting makes ;makes questions ;questions easier ;easier important ;important searching ;searching dictionaries ;dictionaries books ;books class ;class lists ;lists sorted ;sorted examples ;examples usefulness ;usefulness presorting ;presorting section ;section similar ;similar vein ;vein sorting ;sorting auxiliary ;auxiliary important ;important algorithms ;algorithms areas ;areas geometric ;geometric algorithms ;algorithms data ;data compression ;compression greedy ;greedy approach ;approach important ;important algorithm ;algorithm design ;design technique ;technique discussed ;discussed requires ;requires sorted ;sorted input ;input scientists ;scientists discovered ;discovered dozens ;dozens sorting ;sorting algorithms ;algorithms fact ;fact inventing ;inventing sorting ;sorting algorithm ;algorithm likened ;likened designing ;designing proverbial ;proverbial mousetrap ;mousetrap happy ;happy sorting ;sorting mousetrap ;mousetrap continues ;continues perseverance ;perseverance admirable ;admirable view ;view facts ;facts good ;good sorting ;sorting algorithms ;algorithms sort ;sort arbitrary ;arbitrary array ;array size ;size log ;log comparisons ;comparisons algorithm ;algorithm sorts ;sorts key ;key comparisons ;comparisons opposed ;opposed comparing ;comparing small ;small pieces ;pieces keys ;keys substantially ;substantially reason ;reason embarrassment ;embarrassment algorithmic ;algorithmic riches ;riches sorting ;sorting algorithms ;algorithms algorithm ;algorithm solution ;solution situations ;situations algorithms ;algorithms simple ;simple faster ;faster complex ;complex randomly ;randomly ordered ;ordered inputs ;inputs sorted ;sorted lists ;lists suitable ;suitable lists ;lists residing ;residing fast ;fast memory ;memory adapted ;adapted sorting ;sorting large ;large files ;files stored ;stored disk ;disk properties ;properties sorting ;sorting algorithms ;algorithms special ;special mention ;mention sorting ;sorting algorithm ;algorithm called ;called stable ;stable preserves ;preserves relative ;relative equal ;equal elements ;elements input ;input words ;words input ;input equal ;equal elements ;elements positions ;positions sorted ;sorted positions ;positions property ;property desirable ;desirable students ;students sorted ;sorted alphabetically ;alphabetically sort ;sort student ;student gpa ;gpa stable ;stable algorithm ;algorithm yield ;yield students ;students gpa ;gpa sorted ;sorted alphabetically ;alphabetically generally ;generally speaking ;speaking algorithms ;algorithms exchange ;exchange keys ;keys located ;located stable ;stable faster ;faster general ;general comment ;comment applies ;applies important ;important sorting ;sorting algorithms ;algorithms notable ;notable feature ;feature sorting ;sorting algorithm ;algorithm extra ;extra memory ;memory algorithm ;algorithm requires ;requires algorithm ;algorithm require ;require extra ;extra memory ;memory possibly ;possibly memory ;memory units ;units important ;important sorting ;sorting algorithms ;algorithms searching ;searching problem ;problem deals ;deals finding ;finding called ;called key ;key set ;set multiset ;multiset permits ;permits elements ;elements plenty ;plenty searching ;searching algorithms ;algorithms choose ;choose range ;range straightforward ;straightforward sequential ;sequential spectacularly ;spectacularly efficient ;efficient binary ;binary algorithms ;algorithms based ;based representing ;representing underlying ;underlying set ;set conducive ;conducive searching ;searching algorithms ;algorithms importance ;importance real ;real world ;world applications ;applications indispensable ;indispensable storing ;storing retriev ;retriev ing ;ing information ;information large ;large databases ;databases searching ;searching single ;single algorithm ;algorithm fits ;fits situations ;situations algorithms ;algorithms faster ;faster require ;require memory ;memory fast ;fast applicable ;applicable sorted ;sorted arrays ;arrays sorting ;sorting algorithms ;algorithms stability ;stability problem ;problem issues ;issues arise ;arise specifically ;specifically applications ;applications underlying ;underlying data ;data frequently ;frequently relative ;relative searches ;searches searching ;searching considered ;considered conjunction ;conjunction operations ;operations addition ;addition deletion ;deletion data ;data set ;set item ;item situations ;situations data ;data structures ;structures algorithms ;algorithms chosen ;chosen strike ;strike requirements ;requirements operation ;operation organizing ;organizing large ;large data ;data sets ;sets efficient ;efficient searching ;searching poses ;poses special ;special challenges ;challenges important ;important implications ;implications real ;real world ;world applications ;applications string ;string processing ;processing recent ;recent decades ;decades rapid ;rapid proliferation ;proliferation applications ;applications dealing ;dealing nonnumer ;nonnumer ical ;ical data ;data intensified ;intensified researchers ;researchers computing ;computing practitioners ;practitioners string ;string handling ;handling algorithms ;algorithms string ;string sequence ;sequence characters ;characters alphabet ;alphabet strings ;strings text ;text strings ;strings comprise ;comprise letters ;letters numbers ;numbers special ;special characters ;characters bit ;bit strings ;strings comprise ;comprise zeros ;zeros gene ;gene sequences ;sequences modeled ;modeled strings ;strings characters ;characters character ;character alphabet ;alphabet pointed ;pointed string ;string processing ;processing algorithms ;algorithms important ;important science ;science conjunction ;conjunction languages ;languages compiling ;compiling issues ;issues problem ;problem searching ;searching word ;word text ;text attracted ;attracted special ;special attention ;attention researchers ;researchers string ;string matching ;matching algorithms ;algorithms exploit ;exploit special ;special nature ;nature searching ;searching invented ;invented simple ;simple algorithm ;algorithm chapter ;chapter discuss ;discuss algorithms ;algorithms based ;based remarkable ;remarkable idea ;idea boyer ;boyer moore ;moore chapter ;chapter graph ;graph problems ;problems oldest ;oldest interesting ;interesting areas ;areas algorithmics ;algorithmics graph ;graph algorithms ;algorithms informally ;informally graph ;graph thought ;thought collection ;collection points ;points called ;called vertices ;vertices connected ;connected line ;line segments ;segments called ;called edges ;edges formal ;formal definition ;definition section ;section graphs ;graphs interesting ;interesting subject ;subject study ;study theoretical ;theoretical practical ;practical reasons ;reasons graphs ;graphs modeling ;modeling wide ;wide variety ;variety applications ;applications transportation ;transportation communication ;communication social ;social economic ;economic networks ;networks project ;project scheduling ;scheduling games ;games studying ;studying technical ;technical social ;social aspects ;aspects internet ;internet active ;active areas ;areas current ;current research ;research involving ;involving scientists ;scientists economists ;economists social ;social scientists ;scientists eas ;eas basic ;basic graph ;graph algorithms ;algorithms graph ;graph traversal ;traversal algorithms ;algorithms points ;points network ;network shortest ;shortest path ;path algorithms ;algorithms route ;route cities ;cities topological ;topological sorting ;sorting graphs ;graphs directed ;directed edges ;edges set ;set courses ;courses prerequisites ;prerequisites consistent ;consistent contradictory ;contradictory fortunately ;fortunately algorithms ;algorithms considered ;considered illustrations ;illustrations general ;general design ;design techniques ;techniques chapters ;chapters graph ;graph problems ;problems computationally ;computationally hard ;hard examples ;examples traveling ;traveling salesman ;salesman problem ;problem graph ;graph coloring ;coloring problem ;problem traveling ;traveling salesman ;salesman problem ;problem tsp ;tsp problem ;problem finding ;finding shortest ;shortest cities ;cities visits ;visits city ;city addition ;addition obvious ;obvious applications ;applications involving ;involving route ;route planning ;planning arises ;arises modern ;modern applications ;applications circuit ;circuit board ;board vlsi ;vlsi chip ;chip fabrication ;fabrication ray ;ray crystallography ;crystallography genetic ;genetic engineering ;engineering graph ;graph coloring ;coloring problem ;problem seeks ;seeks assign ;assign smallest ;smallest colors ;colors vertices ;vertices graph ;graph adjacent ;adjacent vertices ;vertices color ;color problem ;problem arises ;arises applications ;applications event ;event scheduling ;scheduling events ;events represented ;represented vertices ;vertices connected ;connected edge ;edge events ;events scheduled ;scheduled solution ;solution graph ;graph coloring ;coloring problem ;problem yields ;yields optimal ;optimal schedule ;schedule combinatorial ;combinatorial problems ;problems abstract ;abstract perspective ;perspective traveling ;traveling salesman ;salesman problem ;problem graphcoloring ;graphcoloring problem ;problem examples ;examples combinatorial ;combinatorial problems ;problems explicitly ;explicitly implicitly ;implicitly combinatorial ;combinatorial permutation ;permutation combination ;combination subset ;subset satisfies ;satisfies constraints ;constraints desired ;desired combinatorial ;combinatorial required ;required additional ;additional property ;property maximum ;maximum minimum ;minimum cost ;cost generally ;generally speaking ;speaking combinatorial ;combinatorial problems ;problems difficult ;difficult problems ;problems computing ;computing theoretical ;theoretical practical ;practical standpoint ;standpoint difficulty ;difficulty stems ;stems facts ;facts combinatorial ;combinatorial objects ;objects typically ;typically grows ;grows extremely ;extremely fast ;fast problem ;problem size ;size reaching ;reaching unimaginable ;unimaginable magnitudes ;magnitudes moderate ;moderate sized ;sized instances ;instances algorithms ;algorithms solving ;solving problems ;problems acceptable ;acceptable scientists ;scientists algorithms ;algorithms conjecture ;conjecture proved ;proved disproved ;disproved remains ;remains important ;important unresolved ;unresolved issue ;issue theoretical ;theoretical science ;science discuss ;discuss topic ;topic section ;section combinatorial ;combinatorial problems ;problems solved ;solved efficient ;efficient algorithms ;algorithms considered ;considered fortunate ;fortunate exceptions ;exceptions shortest ;shortest path ;path problem ;problem mentioned ;mentioned earlier ;earlier exceptions ;exceptions geometric ;geometric problems ;problems geometric ;geometric algorithms ;algorithms deal ;deal geometric ;geometric objects ;objects points ;points lines ;lines poly ;poly gons ;gons ancient ;ancient greeks ;greeks interested ;interested developing ;developing procedures ;procedures algorithms ;algorithms solving ;solving variety ;variety geometric ;geometric problems ;problems constructing ;constructing simple ;simple geometric ;geometric shapes ;shapes triangles ;triangles circles ;circles unmarked ;unmarked ruler ;ruler compass ;compass years ;years intense ;intense geometric ;geometric algorithms ;algorithms disappeared ;disappeared resurrected ;resurrected age ;age computers ;computers rulers ;rulers compasses ;compasses bits ;bits bytes ;bytes good ;good human ;human ingenuity ;ingenuity today ;today people ;people interested ;interested geometric ;geometric algorithms ;algorithms applications ;applications mind ;mind graphics ;graphics robotics ;robotics tomography ;tomography discuss ;discuss algorithms ;algorithms classic ;classic problems ;problems computational ;computational geometry ;geometry closest ;closest pair ;pair problem ;problem convex ;convex hull ;hull problem ;problem closest ;closest pair ;pair problem ;problem explanatory ;explanatory points ;points plane ;plane closest ;closest pair ;pair convex ;convex hull ;hull problem ;problem asks ;asks smallest ;smallest convex ;convex polygon ;polygon points ;points set ;set interested ;interested geometric ;geometric algorithms ;algorithms wealth ;wealth material ;material specialized ;specialized monographs ;monographs deb ;deb oro ;oro pre ;pre numerical ;numerical problems ;problems numerical ;numerical problems ;problems large ;large special ;special area ;area applications ;applications problems ;problems involve ;involve mathematical ;mathematical objects ;objects continuous ;continuous nature ;nature solving ;solving equations ;equations systems ;systems equations ;equations computing ;computing definite ;definite integrals ;integrals evaluating ;evaluating functions ;functions majority ;majority mathematical ;mathematical problems ;problems solved ;solved approximately ;approximately principal ;principal difficulty ;difficulty stems ;stems fact ;fact problems ;problems typically ;typically require ;require manipulating ;manipulating real ;real numbers ;numbers represented ;represented approximately ;approximately large ;large arithmetic ;arithmetic operations ;operations performed ;performed approximately ;approximately represented ;represented numbers ;numbers lead ;lead accumulation ;accumulation error ;error drastically ;drastically distort ;distort output ;output produced ;produced seemingly ;seemingly algorithm ;algorithm sophisticated ;sophisticated algorithms ;algorithms developed ;developed years ;years area ;area critical ;critical role ;role scientific ;scientific engineering ;engineering applications ;applications years ;years computing ;computing industry ;industry shifted ;shifted focus ;focus business ;business applications ;applications require ;require primarily ;primarily algorithms ;algorithms information ;information storage ;storage retrieval ;retrieval transportation ;transportation networks ;networks presentation ;presentation users ;users result ;result revolutionary ;revolutionary numerical ;numerical analysis ;analysis lost ;lost dominating ;dominating position ;position industry ;industry science ;science programs ;programs important ;important literate ;literate person ;person rudimentary ;rudimentary idea ;idea numerical ;numerical algorithms ;algorithms discuss ;discuss classical ;classical numerical ;numerical algorithms ;algorithms sections ;sections exercises ;exercises algorithm ;algorithm sorting ;sorting problem ;problem sorts ;sorts array ;array counting ;counting elements ;elements smaller ;smaller elements ;elements information ;information element ;element position ;position sorted ;sorted array ;array algorithm ;algorithm comparisoncountingsort ;comparisoncountingsort sorts ;sorts array ;array comparison ;comparison counting ;counting input ;input array ;array orderable ;orderable values ;values output ;output array ;array elements ;elements sorted ;sorted nondecreasing ;nondecreasing apply ;apply algorithm ;algorithm sorting ;sorting algorithm ;algorithm stable ;stable algorithms ;algorithms searching ;searching problem ;problem good ;good succinct ;succinct description ;description algorithm ;algorithm english ;english algorithms ;algorithms opportunity ;opportunity design ;design simple ;simple algorithm ;algorithm string ;string matching ;matching problem ;problem nigsberg ;nigsberg bridges ;bridges nigsberg ;nigsberg bridge ;bridge puzzle ;puzzle universally ;universally accepted ;accepted problem ;problem gave ;gave birth ;birth graph ;graph theory ;theory solved ;solved great ;great swiss ;swiss born ;born mathematician ;mathematician leonhard ;leonhard euler ;euler problem ;problem asked ;asked single ;single stroll ;stroll bridges ;bridges city ;city nigsberg ;nigsberg starting ;starting sketch ;sketch river ;river islands ;islands bridges ;bridges state ;state problem ;problem graph ;graph problem ;problem solution ;solution draw ;draw stroll ;stroll smallest ;smallest bridges ;bridges required ;required make ;make stroll ;stroll icosian ;icosian game ;game century ;century euler ;euler discovery ;discovery problem ;problem famous ;famous puzzle ;puzzle invented ;invented renowned ;renowned irish ;irish mathematician ;mathematician sir ;sir william ;william hamilton ;hamilton presented ;presented world ;world icosian ;icosian game ;game board ;board circular ;circular wooden ;wooden board ;board graph ;graph carved ;carved hamiltonian ;hamiltonian circuit ;circuit path ;path visits ;visits graph ;graph vertices ;vertices returning ;returning starting ;starting vertex ;vertex graph ;graph problem ;problem design ;design algorithm ;algorithm determine ;determine route ;route subway ;subway passenger ;passenger designated ;designated station ;station developed ;developed subway ;subway similar ;similar cities ;cities washington ;washington london ;london problem ;problem statement ;statement vague ;vague typical ;typical real ;real life ;life problems ;problems reasonable ;reasonable criterion ;criterion defining ;defining route ;route model ;model problem ;problem graph ;graph rephrase ;rephrase traveling ;traveling salesman ;salesman problem ;problem combinatorial ;combinatorial terms ;terms rephrase ;rephrase graph ;graph coloring ;coloring problem ;problem combinatorial ;combinatorial terms ;terms map ;map graph ;graph coloring ;coloring problem ;problem color ;color map ;map neighboring ;neighboring regions ;regions colored ;colored color ;color map ;map smallest ;smallest colors ;colors design ;design algorithm ;algorithm problem ;problem set ;set points ;points cartesian ;cartesian plane ;plane determine ;determine circumference ;circumference write ;write reads ;reads inputs ;inputs coordinates ;coordinates endpoints ;endpoints line ;line segments ;segments determines ;determines segments ;segments common ;common fundamental ;fundamental data ;data structures ;structures vast ;vast majority ;majority algorithms ;algorithms operate ;operate data ;data ways ;ways organizing ;organizing data ;data critical ;critical role ;role design ;design analysis ;analysis algorithms ;algorithms data ;data structure ;structure defined ;defined scheme ;scheme organizing ;organizing related ;related data ;data items ;items nature ;nature data ;data items ;items dictated ;dictated problem ;problem range ;range elementary ;elementary data ;data types ;types integers ;integers characters ;characters data ;data structures ;structures dimensional ;dimensional array ;array dimensional ;dimensional arrays ;arrays implementing ;implementing matrices ;matrices data ;data structures ;structures proved ;proved important ;important algorithms ;algorithms undoubtedly ;undoubtedly familiar ;familiar quick ;quick review ;review provided ;provided linear ;linear data ;data structures ;structures important ;important elementary ;elementary data ;data structures ;structures array ;array linked ;linked dimensional ;dimensional array ;array sequence ;sequence items ;items data ;data stored ;stored contiguously ;contiguously memory ;memory accessible ;accessible array ;array index ;index figure ;figure majority ;majority cases ;cases index ;index integer ;integer shown ;shown figure ;figure languages ;languages array ;array index ;index range ;range integer ;integer bounds ;bounds low ;low high ;high nonnumerical ;nonnumerical indices ;indices data ;data items ;items months ;months year ;year month ;month names ;names element ;element array ;array accessed ;accessed constant ;constant array ;array element ;element located ;located feature ;feature positively ;positively distinguishes ;distinguishes arrays ;arrays linked ;linked lists ;lists discussed ;discussed arrays ;arrays implementing ;implementing variety ;variety data ;data structures ;structures promi ;promi nent ;nent string ;string sequence ;sequence characters ;characters alphabet ;alphabet termi ;termi nated ;nated special ;special character ;character indicating ;indicating string ;string strings ;strings composed ;composed zeros ;zeros called ;called binary ;binary strings ;strings bit ;bit strings ;strings indispensable ;indispensable pro ;pro cessing ;cessing textual ;textual data ;data defining ;defining languages ;languages compiling ;compiling programs ;programs written ;written studying ;studying abstract ;abstract computational ;computational models ;models operations ;operations strings ;strings differ ;differ typically ;typically arrays ;arrays numbers ;numbers computing ;computing string ;string length ;length comparing ;comparing strings ;strings determine ;determine precedes ;precedes lexicographic ;lexicographic alphabetical ;alphabetical der ;der concatenating ;concatenating strings ;strings forming ;forming string ;string strings ;strings appending ;appending linked ;linked sequence ;sequence elements ;elements called ;called nodes ;nodes kinds ;kinds information ;information data ;data links ;links called ;called pointers ;pointers nodes ;nodes linked ;linked special ;special pointer ;pointer called ;called null ;null absence ;absence node ;node successor ;successor singly ;singly linked ;linked node ;node single ;single pointer ;pointer element ;element figure ;figure access ;access node ;node linked ;linked starts ;starts node ;node traverses ;traverses pointer ;pointer chain ;chain node ;node reached ;reached needed ;needed access ;access element ;element singly ;singly linked ;linked array ;array depends ;depends element ;element located ;located positive ;positive linked ;linked lists ;lists item ;item figure ;figure array ;array elements ;elements item ;item null ;null figure ;figure singly ;singly linked ;linked elements ;elements null ;null item ;item null ;null figure ;figure doubly ;doubly linked ;linked elements ;elements require ;require preliminary ;preliminary reservation ;reservation memory ;memory insertions ;insertions deletions ;deletions efficiently ;efficiently linked ;linked reconnecting ;reconnecting pointers ;pointers exploit ;exploit flexibility ;flexibility linked ;linked structure ;structure variety ;variety ways ;ways convenient ;convenient linked ;linked special ;special node ;node called ;called header ;header node ;node information ;information linked ;linked current ;current length ;length addition ;addition pointer ;pointer element ;element pointer ;pointer linked ;linked element ;element extension ;extension structure ;structure called ;called doubly ;doubly linked ;linked node ;node pointers ;pointers successor ;successor predecessor ;predecessor figure ;figure array ;array linked ;linked principal ;principal choices ;choices representing ;representing abstract ;abstract data ;data structure ;structure called ;called linear ;linear simply ;simply finite ;finite sequence ;sequence data ;data items ;items collection ;collection data ;data items ;items arranged ;arranged linear ;linear basic ;basic operations ;operations performed ;performed data ;data structure ;structure searching ;searching inserting ;inserting deleting ;deleting element ;element special ;special types ;types lists ;lists stacks ;stacks queues ;queues important ;important stack ;stack insertions ;insertions deletions ;deletions called ;called stack ;stack visualized ;visualized horizontally ;horizontally vertically ;vertically akin ;akin stack ;stack plates ;plates operations ;operations mimics ;mimics closely ;closely result ;result elements ;elements added ;added pushed ;pushed stack ;stack deleted ;deleted popped ;popped structure ;structure operates ;operates lifo ;lifo fashion ;fashion stack ;stack plates ;plates plate ;plate stacks ;stacks multitude ;multitude applications ;applications indispensable ;indispensable implementing ;implementing recursive ;recursive algorithms ;algorithms elements ;elements deleted ;deleted structure ;structure called ;called operation ;operation called ;called dequeue ;dequeue elements ;elements added ;added called ;called rear ;rear operation ;operation called ;called enqueue ;enqueue operates ;operates fifo ;fifo fashion ;fashion akin ;akin customers ;customers served ;served single ;single teller ;teller bank ;bank queues ;queues important ;important applications ;applications algorithms ;algorithms graph ;graph problems ;problems important ;important applications ;applications require ;require selection ;selection item ;item highest ;highest priority ;priority dynamically ;dynamically changing ;changing set ;set candidates ;candidates data ;data structure ;structure seeks ;seeks applications ;applications called ;called priority ;priority collection ;collection data ;data items ;items totally ;totally ordered ;ordered universe ;universe integer ;integer real ;real numbers ;numbers principal ;principal operations ;operations priority ;priority ing ;ing largest ;largest element ;element deleting ;deleting largest ;largest element ;element adding ;adding element ;element priority ;priority implemented ;implemented operations ;operations yield ;yield priority ;priority straightforward ;straightforward implementations ;implementations data ;data struc ;struc ture ;ture based ;based array ;array sorted ;sorted array ;array options ;options yields ;yields efficient ;efficient solution ;solution implementation ;implementation priority ;priority based ;based ingenious ;ingenious data ;data structure ;structure called ;called discuss ;discuss heaps ;heaps important ;important sorting ;sorting algorithm ;algorithm based ;based section ;section graphs ;graphs mentioned ;mentioned previous ;previous section ;section graph ;graph informally ;informally thought ;thought collection ;collection points ;points plane ;plane called ;called vertices ;vertices nodes ;nodes connected ;connected line ;line segments ;segments called ;called edges ;edges arcs ;arcs formally ;formally graph ;graph defined ;defined pair ;pair sets ;sets finite ;finite nonempty ;nonempty set ;set items ;items called ;called vertices ;vertices set ;set pairs ;pairs items ;items called ;called edges ;edges pairs ;pairs vertices ;vertices unordered ;unordered pair ;pair vertices ;vertices pair ;pair vertices ;vertices adjacent ;adjacent connected ;connected undirected ;undirected edge ;edge vertices ;vertices endpoints ;endpoints edge ;edge incident ;incident edge ;edge incident ;incident endpoints ;endpoints graph ;graph called ;called undirected ;undirected edge ;edge undirected ;undirected pair ;pair vertices ;vertices pair ;pair edge ;edge directed ;directed vertex ;vertex called ;called edge ;edge tail ;tail vertex ;vertex called ;called edge ;edge leaves ;leaves enters ;enters graph ;graph edge ;edge directed ;directed called ;called directed ;directed graphs ;graphs called ;called digraphs ;digraphs convenient ;convenient vertices ;vertices graph ;graph digraph ;digraph letters ;letters integer ;integer numbers ;numbers application ;application calls ;calls character ;character strings ;strings figure ;figure graph ;graph depicted ;depicted figure ;figure vertices ;vertices undirected ;undirected edges ;edges digraph ;digraph depicted ;depicted figure ;figure vertices ;vertices directed ;directed edges ;edges figure ;figure undirected ;undirected graph ;graph digraph ;digraph definition ;definition graph ;graph forbid ;forbid loops ;loops edges ;edges connecting ;connecting vertices ;vertices explicitly ;explicitly stated ;stated graphs ;graphs loops ;loops definition ;definition disallows ;disallows multiple ;multiple edges ;edges vertices ;vertices undirected ;undirected graph ;graph inequality ;inequality edges ;edges undirected ;undirected graph ;graph vertices ;vertices loops ;loops largest ;largest edges ;edges graph ;graph edge ;edge connecting ;connecting vertices ;vertices product ;product includes ;includes edge ;edge graph ;graph pair ;pair vertices ;vertices connected ;connected edge ;edge called ;called standard ;standard notation ;notation graph ;graph vertices ;vertices graph ;graph edges ;edges missing ;missing called ;called dense ;dense graph ;graph edges ;edges relative ;relative vertices ;vertices called ;called sparse ;sparse dealing ;dealing dense ;dense sparse ;sparse graph ;graph choose ;choose represent ;represent graph ;graph running ;running algorithm ;algorithm designed ;designed graph ;graph representations ;representations graphs ;graphs algorithms ;algorithms represented ;represented ways ;ways adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists adjacency ;adjacency matrix ;matrix graph ;graph vertices ;vertices boolean ;boolean matrix ;matrix row ;row column ;column graph ;graph vertices ;vertices element ;element ith ;ith row ;row column ;column equal ;equal edge ;edge ith ;ith vertex ;vertex equal ;equal edge ;edge adjacency ;adjacency matrix ;matrix graph ;graph figure ;figure adjacency ;adjacency matrix ;matrix undirected ;undirected graph ;graph symmetric ;symmetric adjacency ;adjacency lists ;lists graph ;graph digraph ;digraph collection ;collection linked ;linked lists ;lists vertex ;vertex vertices ;vertices adjacent ;adjacent vertex ;vertex vertices ;vertices connected ;connected edge ;edge lists ;lists header ;header identifying ;identifying vertex ;vertex compiled ;compiled figure ;figure represents ;represents graph ;graph figure ;figure adjacency ;adjacency lists ;lists figure ;figure adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists graph ;graph figure ;figure adjacency ;adjacency lists ;lists columns ;columns adjacency ;adjacency matrix ;matrix vertex ;vertex graph ;graph sparse ;sparse adjacency ;adjacency representation ;representation space ;space adjacency ;adjacency matrix ;matrix extra ;extra storage ;storage consumed ;consumed pointers ;pointers linked ;linked lists ;lists situation ;situation dense ;dense graphs ;graphs general ;general representations ;representations convenient ;convenient depends ;depends nature ;nature problem ;problem algorithm ;algorithm solving ;solving possibly ;possibly input ;input graph ;graph sparse ;sparse dense ;dense weighted ;weighted graphs ;graphs weighted ;weighted graph ;graph weighted ;weighted digraph ;digraph graph ;graph numbers ;numbers assigned ;assigned edges ;edges numbers ;numbers called ;called weights ;weights costs ;costs graphs ;graphs motivated ;motivated numerous ;numerous real ;real world ;world applica ;applica tions ;tions finding ;finding shortest ;shortest path ;path points ;points transportation ;transportation communication ;communication network ;network traveling ;traveling salesman ;salesman problem ;problem mentioned ;mentioned earlier ;earlier principal ;principal representations ;representations graph ;graph easily ;easily adopted ;adopted accommo ;accommo date ;date weighted ;weighted graphs ;graphs weighted ;weighted graph ;graph represented ;represented adjacency ;adjacency matrix ;matrix element ;element simply ;simply weight ;weight edge ;edge ith ;ith vertex ;vertex edge ;edge special ;special symbol ;symbol edge ;edge matrix ;matrix called ;called weight ;weight matrix ;matrix cost ;cost matrix ;matrix approach ;approach illustrated ;illustrated figure ;figure weighted ;weighted graph ;graph figure ;figure plications ;plications convenient ;convenient main ;main diagonal ;diagonal adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists weighted ;weighted graph ;graph nodes ;nodes adjacent ;adjacent vertex ;vertex weight ;weight edge ;edge figure ;figure paths ;paths cycles ;cycles properties ;properties graphs ;graphs important ;important great ;great applications ;applications connectivity ;connectivity acyclicity ;acyclicity based ;based notion ;notion path ;path vertex ;vertex graph ;graph defined ;defined sequence ;sequence adjacent ;adjacent connected ;connected edge ;edge vertices ;vertices starts ;starts ends ;ends vertices ;vertices path ;path distinct ;distinct path ;path simple ;simple length ;length path ;path total ;total vertices ;vertices vertex ;vertex sequence ;sequence defining ;defining path ;path edges ;edges path ;path simple ;simple path ;path length ;length graph ;graph figure ;figure path ;path simple ;simple length ;length figure ;figure weighted ;weighted graph ;graph weight ;weight matrix ;matrix adjacency ;adjacency lists ;lists figure ;figure graph ;graph connected ;connected case ;case directed ;directed graph ;graph interested ;interested directed ;directed paths ;paths directed ;directed path ;path sequence ;sequence vertices ;vertices consecutive ;consecutive pair ;pair vertices ;vertices connected ;connected edge ;edge directed ;directed vertex ;vertex listed ;listed vertex ;vertex listed ;listed directed ;directed path ;path graph ;graph figure ;figure graph ;graph connected ;connected pair ;pair vertices ;vertices path ;path make ;make model ;model connected ;connected graph ;graph connecting ;connecting balls ;balls representing ;representing graph ;graph vertices ;vertices strings ;strings representing ;representing edges ;edges single ;single piece ;piece graph ;graph connected ;connected model ;model connected ;connected pieces ;pieces called ;called connected ;connected components ;components graph ;graph formally ;formally connected ;connected component ;component maximal ;maximal expandable ;expandable vertex ;vertex edge ;edge connected ;connected subgraph ;subgraph graph ;graph graphs ;graphs figures ;figures connected ;connected graph ;graph figure ;figure path ;path graph ;graph figure ;figure connected ;connected components ;components vertices ;vertices graphs ;graphs connected ;connected components ;components real ;real world ;world appli ;appli cations ;cations graph ;graph representing ;representing interstate ;interstate highway ;highway united ;united states ;states important ;important applications ;applications graph ;graph consideration ;consideration cycles ;cycles path ;path positive ;positive length ;length starts ;starts ends ;ends vertex ;vertex traverse ;traverse edge ;edge graph ;graph figure ;figure graph ;graph cycles ;cycles acyclic ;acyclic discuss ;discuss acyclic ;acyclic graphs ;graphs subsection ;subsection trees ;trees tree ;tree accurately ;accurately free ;free tree ;tree connected ;connected acyclic ;acyclic graph ;graph figure ;figure graph ;graph cycles ;cycles necessarily ;necessarily connected ;connected called ;called forest ;forest connected ;connected components ;components tree ;tree figure ;figure subgraph ;subgraph graph ;graph figure ;figure tree ;tree forest ;forest figure ;figure free ;free tree ;tree transformation ;transformation rooted ;rooted tree ;tree trees ;trees important ;important properties ;properties graphs ;graphs par ;par ticular ;ticular edges ;edges tree ;tree vertices ;vertices graph ;graph figure ;figure demonstrates ;demonstrates property ;property suffi ;suffi cient ;cient graph ;graph tree ;tree connected ;connected graphs ;graphs sufficient ;sufficient convenient ;convenient checking ;checking connected ;connected graph ;graph rooted ;rooted trees ;trees important ;important property ;property trees ;trees fact ;fact vertices ;vertices tree ;tree exists ;exists simple ;simple path ;path vertices ;vertices property ;property makes ;makes select ;select arbitrary ;arbitrary vertex ;vertex free ;free tree ;tree root ;root called ;called rooted ;rooted tree ;tree rooted ;rooted tree ;tree depicted ;depicted placing ;placing root ;root tree ;tree vertices ;vertices adjacent ;adjacent root ;root vertices ;vertices edges ;edges root ;root figure ;figure presents ;presents transformation ;transformation free ;free tree ;tree rooted ;rooted tree ;tree rooted ;rooted trees ;trees important ;important role ;role science ;science important ;important free ;free trees ;trees fact ;fact sake ;sake brevity ;brevity referred ;referred simply ;simply trees ;trees obvious ;obvious application ;application trees ;trees describing ;describing hierarchies ;hierarchies directories ;directories organizational ;organizational charts ;charts enterprises ;enterprises obvious ;obvious applications ;applications implementing ;implementing dictionaries ;dictionaries efficient ;efficient access ;access large ;large data ;data sets ;sets section ;section data ;data encoding ;encoding section ;section discuss ;discuss chapter ;chapter trees ;trees helpful ;helpful analysis ;analysis recursive ;recursive algorithms ;algorithms finish ;finish tree ;tree applications ;applications mention ;mention called ;called state ;state space ;space trees ;trees underline ;underline important ;important algorithm ;algorithm design ;design techniques ;techniques backtracking ;backtracking bound ;bound sections ;sections vertex ;vertex tree ;tree vertices ;vertices simple ;simple path ;path root ;root vertex ;vertex called ;called ancestors ;ancestors vertex ;vertex considered ;considered ancestor ;ancestor set ;set ancestors ;ancestors excludes ;excludes vertex ;vertex referred ;referred set ;set proper ;proper ancestors ;ancestors edge ;edge simple ;simple path ;path root ;root vertex ;vertex parent ;parent called ;called child ;child vertices ;vertices parent ;parent siblings ;siblings vertex ;vertex children ;children called ;called leaf ;leaf vertex ;vertex child ;child called ;called parental ;parental vertices ;vertices vertex ;vertex ancestor ;ancestor descendants ;descendants proper ;proper descendants ;descendants exclude ;exclude vertex ;vertex descendants ;descendants vertex ;vertex edges ;edges connecting ;connecting subtree ;subtree rooted ;rooted vertex ;vertex tree ;tree figure ;figure root ;root tree ;tree vertices ;vertices leaves ;leaves vertices ;vertices parental ;parental parent ;parent children ;children siblings ;siblings vertices ;vertices subtree ;subtree rooted ;rooted depth ;depth vertex ;vertex length ;length simple ;simple path ;path root ;root height ;height tree ;tree length ;length longest ;longest simple ;simple path ;path root ;root leaf ;leaf depth ;depth vertex ;vertex tree ;tree figure ;figure height ;height tree ;tree levels ;levels starting ;starting root ;root depth ;depth vertex ;vertex simply ;simply tree ;tree height ;height maximum ;maximum vertices ;vertices fact ;fact authors ;authors define ;define height ;height tree ;tree levels ;levels makes ;makes height ;height tree ;tree larger ;larger height ;height defined ;defined length ;length longest ;longest simple ;simple path ;path root ;root leaf ;leaf ordered ;ordered trees ;trees ordered ;ordered tree ;tree rooted ;rooted tree ;tree children ;children vertex ;vertex ordered ;ordered convenient ;convenient assume ;assume tree ;tree diagram ;diagram children ;children ordered ;ordered left ;left binary ;binary tree ;tree defined ;defined ordered ;ordered tree ;tree vertex ;vertex children ;children child ;child designated ;designated left ;left child ;child parent ;parent binary ;binary tree ;tree binary ;binary tree ;tree figure ;figure binary ;binary tree ;tree root ;root left ;left child ;child vertex ;vertex binary ;binary tree ;tree called ;called left ;left subtree ;subtree vertex ;vertex left ;left subtrees ;subtrees binary ;binary trees ;trees binary ;binary tree ;tree defined ;defined recursively ;recursively makes ;makes solve ;solve problems ;problems involving ;involving binary ;binary trees ;trees recursive ;recursive algorithms ;algorithms figure ;figure binary ;binary tree ;tree binary ;binary tree ;tree null ;null figure ;figure standard ;standard implementation ;implementation binary ;binary tree ;tree figure ;figure numbers ;numbers assigned ;assigned vertices ;vertices binary ;binary tree ;tree figure ;figure assigned ;assigned parental ;parental vertex ;vertex larger ;larger numbers ;numbers left ;left subtree ;subtree smaller ;smaller numbers ;numbers subtree ;subtree trees ;trees called ;called binary ;binary trees ;trees binary ;binary trees ;trees binary ;binary trees ;trees wide ;wide variety ;variety applications ;applications science ;science encounter ;encounter binary ;binary trees ;trees generalized ;generalized general ;general types ;types trees ;trees called ;called multiway ;multiway trees ;trees indispensable ;indispensable efficient ;efficient access ;access large ;large data ;data sets ;sets efficiency ;efficiency important ;important algorithms ;algorithms binary ;binary trees ;trees extensions ;extensions depends ;depends tree ;tree height ;height fore ;fore inequalities ;inequalities height ;height binary ;binary tree ;tree nodes ;nodes important ;important analysis ;analysis algorithms ;algorithms log ;log binary ;binary tree ;tree implemented ;implemented computing ;computing purposes ;purposes collection ;collection nodes ;nodes vertices ;vertices tree ;tree node ;node informa ;informa tion ;tion vertex ;vertex assigned ;assigned pointers ;pointers nodes ;nodes representing ;representing left ;left child ;child vertex ;vertex spectively ;spectively figure ;figure illustrates ;illustrates implementation ;implementation binary ;binary tree ;tree figure ;figure representation ;representation arbitrary ;arbitrary ordered ;ordered tree ;tree simply ;simply providing ;providing parental ;parental vertex ;vertex pointers ;pointers equal ;equal children ;children representation ;representation prove ;prove inconvenient ;inconvenient children ;children varies ;varies widely ;widely nodes ;nodes inconvenience ;inconvenience nodes ;nodes pointers ;pointers binary ;binary trees ;trees left ;left pointer ;pointer child ;child vertex ;vertex pointer ;pointer sibling ;sibling representation ;representation called ;called child ;child sibling ;sibling representation ;representation siblings ;siblings vertex ;vertex linked ;linked nodes ;nodes pointers ;pointers singly ;singly linked ;linked element ;element pointed ;pointed left ;left pointer ;pointer parent ;parent figure ;figure illustrates ;illustrates representation ;representation tree ;tree figure ;figure difficult ;difficult representation ;representation effectively ;effectively transforms ;transforms ordered ;ordered tree ;tree binary ;binary tree ;tree ordered ;ordered tree ;tree representation ;representation rotating ;rotating pointers ;pointers degrees ;degrees clockwise ;clockwise figure ;figure sets ;sets dictionaries ;dictionaries notion ;notion set ;set plays ;plays central ;central role ;role mathematics ;mathematics set ;set unordered ;unordered collection ;collection possibly ;possibly distinct ;distinct items ;items called ;called elements ;elements null ;null figure ;figure child ;child sibling ;sibling representation ;representation tree ;tree figure ;figure binary ;binary tree ;tree representation ;representation set ;set specific ;specific set ;set defined ;defined explicit ;explicit listing ;listing elements ;elements property ;property set ;set elements ;elements prime ;prime smaller ;smaller important ;important set ;set operations ;operations checking ;checking membership ;membership item ;item set ;set finding ;finding union ;union sets ;sets comprises ;comprises elements ;elements finding ;finding intersection ;intersection sets ;sets comprises ;comprises common ;common elements ;elements sets ;sets implemented ;implemented applications ;applications ways ;ways considers ;considers sets ;sets subsets ;subsets large ;large set ;set called ;called universal ;universal set ;set elements ;elements subset ;subset represented ;represented bit ;bit string ;string size ;size called ;called bit ;bit vector ;vector ith ;ith element ;element ith ;ith element ;element included ;included set ;set represented ;represented bit ;bit string ;string representing ;representing sets ;sets makes ;makes implement ;implement standard ;standard set ;set operations ;operations fast ;fast expense ;expense potentially ;potentially large ;large storage ;storage common ;common represent ;represent set ;set computing ;computing purposes ;purposes structure ;structure set ;set elements ;elements option ;option feasible ;feasible finite ;finite sets ;sets fortunately ;fortunately mathematics ;mathematics kind ;kind sets ;sets applications ;applications principal ;principal points ;points distinction ;distinction sets ;sets lists ;lists set ;set identical ;identical elements ;elements requirement ;requirement uniqueness ;uniqueness circumvented ;circumvented introduction ;introduction multiset ;multiset bag ;bag unordered ;unordered collection ;collection items ;items necessarily ;necessarily distinct ;distinct set ;set unordered ;unordered collection ;collection items ;items changing ;changing elements ;elements set ;set defined ;defined ordered ;ordered collection ;collection items ;items important ;important theoretical ;theoretical distinction ;distinction fortunately ;fortunately important ;important applications ;applications mentioning ;mentioning set ;set represented ;represented depending ;depending application ;application maintaining ;maintaining sorted ;sorted computing ;computing operations ;operations set ;set multiset ;multiset searching ;searching item ;item adding ;adding item ;item deleting ;deleting item ;item collection ;collection data ;data structure ;structure implements ;implements operations ;operations called ;called dictionary ;dictionary relationship ;relationship data ;data structure ;structure problem ;problem searching ;searching mentioned ;mentioned section ;section dealing ;dealing searching ;searching dynamic ;dynamic context ;context efficient ;efficient implementation ;implementation dictionary ;dictionary strike ;strike compromise ;compromise efficiency ;efficiency searching ;searching efficiencies ;efficiencies operations ;operations ways ;ways dictionary ;dictionary implemented ;implemented range ;range unsophisticated ;unsophisticated arrays ;arrays sorted ;sorted sophisticated ;sophisticated techniques ;techniques hashing ;hashing balanced ;balanced trees ;trees discuss ;discuss applications ;applications computing ;computing require ;require dynamic ;dynamic partition ;partition element ;element set ;set collection ;collection disjoint ;disjoint subsets ;subsets initialized ;initialized collection ;collection element ;element subsets ;subsets collection ;collection subjected ;subjected sequence ;sequence intermixed ;intermixed union ;union operations ;operations problem ;problem called ;called set ;set union ;union problem ;problem discuss ;discuss efficient ;efficient algorithmic ;algorithmic solutions ;solutions problem ;problem section ;section conjunction ;conjunction important ;important applications ;applications noticed ;noticed review ;review basic ;basic data ;data structures ;structures mentioned ;mentioned specific ;specific operations ;operations typically ;typically performed ;performed structure ;structure intimate ;intimate relationship ;relationship data ;data operations ;operations recognized ;recognized scientists ;scientists led ;led idea ;idea abstract ;abstract data ;data adt ;adt set ;set abstract ;abstract objects ;objects representing ;representing data ;data items ;items collection ;collection operations ;operations performed ;performed illustrations ;illustrations notion ;notion reread ;reread definitions ;definitions priority ;priority dictionary ;dictionary abstract ;abstract data ;data types ;types implemented ;implemented older ;older procedural ;procedural languages ;languages pascal ;pascal aho ;aho convenient ;convenient oriented ;oriented languages ;languages java ;java abstract ;abstract data ;data types ;types means ;means classes ;classes exercises ;exercises implement ;implement operations ;operations array ;array takes ;takes array ;array size ;size delete ;delete ith ;ith element ;element array ;array delete ;delete ith ;ith element ;element sorted ;sorted array ;array remaining ;remaining array ;array sorted ;sorted solve ;solve searching ;searching problem ;problem numbers ;numbers advantage ;advantage fact ;fact sorted ;sorted answers ;answers lists ;lists represented ;represented arrays ;arrays lists ;lists represented ;represented linked ;linked lists ;lists stack ;stack operation ;operation sequence ;sequence starts ;starts stack ;stack operation ;operation sequence ;sequence starts ;starts enqueue ;enqueue dequeue ;dequeue enqueue ;enqueue dequeue ;dequeue adjacency ;adjacency matrix ;matrix undirected ;undirected graph ;graph prop ;prop erty ;erty matrix ;matrix graph ;graph loop ;loop edge ;edge connecting ;connecting vertex ;vertex iii ;iii graph ;graph isolated ;isolated vertex ;vertex edges ;edges incident ;incident questions ;questions adjacency ;adjacency representation ;representation detailed ;detailed description ;description algorithm ;algorithm transforming ;transforming free ;free tree ;tree rooted ;rooted vertex ;vertex free ;free tree ;tree prove ;prove inequalities ;inequalities bracket ;bracket height ;height binary ;binary tree ;tree vertices ;vertices log ;log adt ;adt priority ;priority implemented ;implemented unsorted ;unsorted array ;array sorted ;sorted array ;array binary ;binary tree ;tree implement ;implement dictionary ;dictionary small ;small size ;size knew ;knew elements ;elements distinct ;distinct names ;names states ;states united ;united states ;states implementation ;implementation dictionary ;dictionary operation ;operation applications ;applications data ;data structure ;structure answering ;answering calls ;calls priorities ;priorities sending ;sending backlog ;backlog orders ;orders customers ;customers received ;received implementing ;implementing calculator ;calculator computing ;computing simple ;simple arithmetical ;arithmetical expressions ;expressions anagram ;anagram checking ;checking design ;design algorithm ;algorithm checking ;checking words ;words anagrams ;anagrams word ;word obtained ;obtained permuting ;permuting letters ;letters words ;words tea ;tea eat ;eat anagrams ;anagrams summary ;summary algorithm ;algorithm sequence ;sequence nonambiguous ;nonambiguous instructions ;instructions solving ;solving problem ;problem finite ;finite input ;input algorithm ;algorithm specifies ;specifies instance ;instance problem ;problem algorithm ;algorithm solves ;solves algorithms ;algorithms natural ;natural language ;language pseudocode ;pseudocode implemented ;implemented programs ;programs ways ;ways classify ;classify algorithms ;algorithms principal ;principal alternatives ;alternatives group ;group algorithms ;algorithms types ;types problems ;problems solve ;solve group ;group algorithms ;algorithms underlying ;underlying design ;design techniques ;techniques based ;based important ;important problem ;problem types ;types sorting ;sorting searching ;searching string ;string processing ;processing graph ;graph problems ;problems combinatorial ;combinatorial problems ;problems geometric ;geometric problems ;problems numerical ;numerical problems ;problems algorithm ;algorithm design ;design techniques ;techniques strategies ;strategies paradigms ;paradigms general ;general approaches ;approaches solving ;solving problems ;problems algorithmically ;algorithmically applicable ;applicable variety ;variety problems ;problems areas ;areas computing ;computing designing ;designing algorithm ;algorithm undoubtedly ;undoubtedly creative ;creative activity ;activity sequence ;sequence interrelated ;interrelated actions ;actions involved ;involved process ;process summarized ;summarized figure ;figure good ;good algorithm ;algorithm result ;result repeated ;repeated efforts ;efforts rework ;rework problem ;problem solved ;solved algorithms ;algorithms computing ;computing greatest ;greatest common ;common divisor ;divisor integers ;integers euclid ;euclid algorithm ;algorithm consecutive ;consecutive integer ;integer checking ;checking algorithm ;algorithm middle ;middle school ;school method ;method enhanced ;enhanced sieve ;sieve eratosthenes ;eratosthenes generating ;generating primes ;primes algorithms ;algorithms operate ;operate data ;data makes ;makes issue ;issue data ;data structuring ;structuring critical ;critical efficient ;efficient algorithmic ;algorithmic problem ;problem solving ;solving important ;important elementary ;elementary data ;data structures ;structures array ;array linked ;linked representing ;representing abstract ;abstract data ;data structures ;structures stack ;stack graph ;graph adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists binary ;binary tree ;tree set ;set abstract ;abstract collection ;collection objects ;objects operations ;operations performed ;performed called ;called abstract ;abstract data ;data adt ;adt stack ;stack priority ;priority dictionary ;dictionary important ;important examples ;examples abstract ;abstract data ;data types ;types modern ;modern oriented ;oriented languages ;languages implementation ;implementation adts ;adts means ;means classes ;greed lack ;lack word ;word good ;good greed ;greed works ;works michael ;michael douglas ;douglas actor ;actor role ;role gordon ;gordon gecko ;gecko wall ;wall street ;street revisit ;revisit making ;making problem ;problem faced ;faced subconsciously ;subconsciously millions ;millions cashiers ;cashiers world ;world specific ;specific coins ;coins denominations ;denominations locale ;locale section ;section assume ;assume denominations ;denominations ordered ;ordered decreasing ;decreasing widely ;widely coin ;coin denominations ;denominations united ;united states ;states quarter ;quarter dime ;dime nickel ;nickel penny ;penny coins ;coins denominations ;denominations cents ;cents quarter ;quarter dimes ;dimes pennies ;pennies consciously ;consciously logical ;logical strategy ;strategy making ;making sequence ;sequence choices ;choices alternatives ;alternatives coin ;coin denominations ;denominations greedy ;greedy thinking ;thinking leads ;leads giving ;giving quarter ;quarter reduces ;reduces remaining ;remaining cents ;cents coins ;coins disposal ;disposal quarter ;quarter violated ;violated problem ;problem constraints ;constraints selection ;selection dime ;dime reducing ;reducing remaining ;remaining cents ;cents giving ;giving dime ;dime left ;left cents ;cents pennies ;pennies solution ;solution instance ;instance making ;making problem ;problem optimal ;optimal fact ;fact prove ;prove greedy ;greedy algorithm ;algorithm yields ;yields optimal ;optimal solution ;solution positive ;positive integer ;integer coin ;coin denominations ;denominations easy ;easy coin ;coin denominations ;denominations yield ;yield optimal ;optimal solution ;solution amounts ;amounts approach ;approach applied ;applied opening ;opening paragraph ;paragraph making ;making prob ;prob lem ;lem called ;called greedy ;greedy scientists ;scientists general ;general design ;design technique ;technique fact ;fact applicable ;applicable optimization ;optimization problems ;problems greedy ;greedy approach ;approach suggests ;suggests constructing ;constructing solution ;solution sequence ;sequence steps ;steps panding ;panding partially ;partially constructed ;constructed solution ;solution obtained ;obtained solution ;solution problem ;problem reached ;reached central ;central technique ;technique choice ;choice feasible ;feasible problem ;problem constraints ;constraints locally ;locally optimal ;optimal local ;local choice ;choice feasible ;feasible choices ;choices irrevocable ;irrevocable changed ;changed subsequent ;subsequent steps ;steps algorithm ;algorithm requirements ;requirements technique ;technique suggests ;suggests greedy ;greedy alternative ;alternative sequence ;sequence locally ;locally optimal ;optimal choices ;choices yield ;yield globally ;globally optimal ;optimal solution ;solution entire ;entire problem ;problem refrain ;refrain philosophical ;philosophical discussion ;discussion greed ;greed good ;good bad ;bad movie ;movie chapter ;chapter epigraph ;epigraph hero ;hero algorithmic ;algorithmic perspective ;perspective greedy ;greedy strategy ;strategy works ;works problems ;problems sequence ;sequence locally ;locally optimal ;optimal choices ;choices yield ;yield optimal ;optimal solution ;solution instance ;instance problem ;problem case ;case problems ;problems greedy ;greedy algorithm ;algorithm interested ;interested satisfied ;satisfied approximate ;approximate solution ;solution sections ;sections chapter ;chapter discuss ;discuss classic ;classic algorithms ;algorithms minimum ;minimum spanning ;spanning tree ;tree problem ;problem prim ;prim algorithm ;algorithm kruskal ;kruskal algorithm ;algorithm remarkable ;remarkable algorithms ;algorithms fact ;fact solve ;solve problem ;problem applying ;applying greedy ;greedy approach ;approach ways ;ways yield ;yield optimal ;optimal solution ;solution section ;section classic ;classic algorithm ;algorithm dijkstra ;dijkstra algorithm ;algorithm shortest ;shortest path ;path problem ;problem weighted ;weighted graph ;graph section ;section devoted ;devoted huffman ;huffman trees ;trees principal ;principal application ;application huffman ;huffman codes ;codes important ;important data ;data compression ;compression method ;method interpreted ;interpreted application ;application greedy ;greedy technique ;technique finally ;finally examples ;examples approximation ;approximation algorithms ;algorithms based ;based greedy ;greedy approach ;approach discussed ;discussed section ;section greedy ;greedy algorithms ;algorithms intuitively ;intuitively appealing ;appealing simple ;simple optimization ;optimization problem ;problem easy ;easy figure ;figure proceed ;proceed greedy ;greedy manner ;manner possibly ;possibly small ;small instances ;instances problem ;problem difficult ;difficult prove ;prove greedy ;greedy algorithm ;algorithm yields ;yields optimal ;optimal solution ;solution common ;common ways ;ways illustrated ;illustrated proof ;proof section ;section mathematical ;mathematical induction ;induction partially ;partially constructed ;constructed solution ;solution obtained ;obtained greedy ;greedy algorithm ;algorithm iteration ;iteration extended ;extended optimal ;optimal solution ;solution problem ;problem prove ;prove optimality ;optimality greedy ;greedy algorithm ;algorithm advancing ;advancing problem ;problem goal ;goal problem ;problem minimum ;minimum moves ;moves needed ;needed chess ;chess knight ;knight corner ;corner board ;board diagonally ;diagonally corner ;corner knight ;knight moves ;moves shaped ;shaped jumps ;jumps squares ;squares horizontally ;horizontally vertically ;vertically square ;square perpendicular ;perpendicular direction ;direction greedy ;greedy solution ;solution goal ;goal finish ;finish squares ;squares sequence ;sequence moves ;moves solves ;solves problem ;problem advances ;advances obtained ;obtained equation ;equation minimum ;minimum solution ;solution distance ;distance goal ;goal manhattan ;manhattan distance ;distance sum ;sum difference ;difference row ;row numbers ;numbers difference ;difference column ;column numbers ;numbers squares ;squares greedy ;greedy algorithm ;algorithm decreases ;decreases knight ;knight simply ;simply final ;final result ;result obtained ;obtained greedy ;greedy algorithm ;algorithm optimal ;optimal based ;based algorithm ;algorithm output ;output operates ;operates problem ;problem placing ;placing maximum ;maximum chips ;chips board ;board chips ;chips adjacent ;adjacent vertically ;vertically horizontally ;horizontally diagonally ;diagonally squares ;squares prescription ;prescription greedy ;greedy strategy ;strategy chip ;chip leave ;leave squares ;squares chips ;chips starting ;starting upper ;upper left ;left corner ;corner board ;board chips ;chips shown ;shown figure ;figure solution ;solution optimal ;optimal partition ;partition board ;board squares ;squares shown ;shown figure ;figure impossible ;impossible chip ;chip squares ;squares implies ;implies total ;total nonadjacent ;nonadjacent chips ;chips board ;board exceed ;exceed final ;final comment ;comment mention ;mention sophisticated ;sophisticated theory ;theory developed ;developed greedy ;greedy technique ;technique based ;based abstract ;abstract combinatorial ;combinatorial structure ;structure called ;called matroid ;matroid interested ;interested reader ;reader books ;books cor ;cor variety ;variety internet ;internet resources ;resources subject ;subject figure ;figure placement ;placement chips ;chips adjacent ;adjacent squares ;squares partition ;partition board ;board proving ;proving impossibility ;impossibility placing ;placing chips ;chips graph ;graph figure ;figure graph ;graph spanning ;spanning trees ;trees minimum ;minimum spanning ;spanning tree ;tree prim ;prim algorithm ;algorithm problem ;problem arises ;arises naturally ;naturally practical ;practical situations ;situations points ;points cheapest ;cheapest path ;path ery ;ery pair ;pair points ;points direct ;direct applications ;applications design ;design kinds ;kinds networks ;networks communication ;communication transportation ;transportation electrical ;electrical providing ;providing cheapest ;cheapest achieve ;achieve connectivity ;connectivity identifies ;identifies clusters ;clusters points ;points data ;data sets ;sets classification ;classification purposes ;purposes archeology ;archeology biology ;biology sociology ;sociology sciences ;sciences helpful ;helpful constructing ;constructing approximate ;approximate solutions ;solutions difficult ;difficult problems ;problems traveling ;traveling salesman ;salesman problem ;problem section ;section represent ;represent points ;points vertices ;vertices graph ;graph connections ;connections graph ;graph edges ;edges connection ;connection costs ;costs edge ;edge weights ;weights posed ;posed minimum ;minimum spanning ;spanning tree ;tree problem ;problem defined ;defined formally ;formally definition ;definition spanning ;spanning tree ;tree undirected ;undirected connected ;connected graph ;graph connected ;connected acyclic ;acyclic subgraph ;subgraph tree ;tree vertices ;vertices graph ;graph weights ;weights assigned ;assigned edges ;edges minimum ;minimum spanning ;spanning tree ;tree spanning ;spanning tree ;tree smallest ;smallest weight ;weight tree ;tree defined ;defined sum ;sum weights ;weights edges ;edges minimum ;minimum spanning ;spanning tree ;tree problem ;problem finding ;finding minimum ;minimum spanning ;spanning tree ;tree weighted ;weighted connected ;connected graph ;graph figure ;figure presents ;presents simple ;simple illustrating ;illustrating notions ;notions constructing ;constructing minimum ;minimum spanning ;spanning tree ;tree exhaustive ;exhaustive obstacles ;obstacles spanning ;spanning trees ;trees grows ;grows exponentially ;exponentially graph ;graph size ;size dense ;dense graphs ;graphs generating ;generating spanning ;spanning trees ;trees graph ;graph easy ;easy fact ;fact difficult ;difficult finding ;finding minimum ;minimum spanning ;spanning tree ;tree weighted ;weighted graph ;graph efficient ;efficient algorithms ;algorithms problem ;problem section ;section outline ;outline prim ;prim algorithm ;algorithm pri ;pri robert ;robert prim ;prim rediscovered ;rediscovered algorithm ;algorithm published ;published years ;years earlier ;earlier czech ;czech mathematician ;mathematician vojte ;vojte jarni ;jarni czech ;czech journal ;journal prim ;prim algorithm ;algorithm constructs ;constructs minimum ;minimum spanning ;spanning tree ;tree sequence ;sequence expanding ;expanding subtrees ;subtrees initial ;initial subtree ;subtree sequence ;sequence consists ;consists single ;single vertex ;vertex selected ;selected arbitrarily ;arbitrarily set ;set graph ;graph vertices ;vertices iteration ;iteration algorithm ;algorithm expands ;expands current ;current tree ;tree greedy ;greedy manner ;manner simply ;simply attaching ;attaching nearest ;nearest vertex ;vertex tree ;tree nearest ;nearest vertex ;vertex tree ;tree connected ;connected vertex ;vertex tree ;tree edge ;edge smallest ;smallest weight ;weight ties ;ties broken ;broken arbitrarily ;arbitrarily algorithm ;algorithm stops ;stops graph ;graph vertices ;vertices included ;included tree ;tree constructed ;constructed algorithm ;algorithm expands ;expands tree ;tree vertex ;vertex iterations ;iterations total ;total iterations ;iterations vertices ;vertices graph ;graph tree ;tree generated ;generated algorithm ;algorithm obtained ;obtained set ;set edges ;edges tree ;tree expansions ;expansions pseudocode ;pseudocode algorithm ;algorithm prim ;prim algorithm ;algorithm constructing ;constructing minimum ;minimum spanning ;spanning tree ;tree input ;input weighted ;weighted connected ;connected graph ;graph output ;output set ;set edges ;edges composing ;composing minimum ;minimum spanning ;spanning tree ;tree set ;set tree ;tree vertices ;vertices initialized ;initialized vertex ;vertex minimum ;minimum weight ;weight edge ;edge edges ;edges nature ;nature prim ;prim algorithm ;algorithm makes ;makes vertex ;vertex current ;current tree ;tree information ;information shortest ;shortest edge ;edge connecting ;connecting vertex ;vertex tree ;tree vertex ;vertex information ;information attaching ;attaching labels ;labels vertex ;vertex nearest ;nearest tree ;tree vertex ;vertex length ;length weight ;weight edge ;edge vertices ;vertices adjacent ;adjacent tree ;tree vertices ;vertices indicating ;indicating infinite ;infinite distance ;distance tree ;tree vertices ;vertices null ;null nearest ;nearest tree ;tree vertex ;vertex alternatively ;alternatively split ;split vertices ;vertices tree ;tree sets ;sets fringe ;fringe unseen ;unseen fringe ;fringe vertices ;vertices tree ;tree adjacent ;adjacent tree ;tree vertex ;vertex candidates ;candidates tree ;tree vertex ;vertex selected ;selected unseen ;unseen vertices ;vertices graph ;graph called ;called unseen ;unseen affected ;affected algorithm ;algorithm labels ;labels finding ;finding vertex ;vertex added ;added current ;current tree ;tree simple ;simple task ;task finding ;finding vertex ;vertex smallest ;smallest distance ;distance set ;set ties ;ties broken ;broken arbitrarily ;arbitrarily identified ;identified vertex ;vertex added ;added tree ;tree operations ;operations set ;set tree ;tree vertices ;vertices remaining ;remaining vertex ;vertex connected ;connected shorter ;shorter edge ;edge current ;current distance ;distance update ;update labels ;labels weight ;weight edge ;edge figure ;figure demonstrates ;demonstrates application ;application prim ;prim algorithm ;algorithm specific ;specific graph ;graph prim ;prim algorithm ;algorithm yield ;yield minimum ;minimum spanning ;spanning tree ;tree prove ;prove induction ;induction subtrees ;subtrees generated ;generated prim ;prim algorithm ;algorithm subgraph ;subgraph minimum ;minimum spanning ;spanning tree ;tree immediately ;immediately implies ;implies tree ;tree sequence ;sequence minimum ;minimum spanning ;spanning tree ;tree vertices ;vertices graph ;graph basis ;basis induction ;induction trivial ;trivial consists ;consists single ;single vertex ;vertex minimum ;minimum spanning ;spanning tree ;tree inductive ;inductive assume ;assume minimum ;minimum spanning ;spanning tree ;tree prove ;prove generated ;generated prim ;prim algorithm ;algorithm minimum ;minimum spanning ;spanning tree ;tree prove ;prove contradiction ;contradiction assuming ;assuming minimum ;minimum spanning ;spanning tree ;tree graph ;graph minimum ;minimum weight ;weight edge ;edge vertex ;vertex prim ;prim algorithm ;algorithm assumption ;assumption minimum ;minimum spanning ;spanning tree ;tree formed ;formed figure ;figure addition ;addition edge ;edge connecting ;connecting vertex ;vertex coincides ;coincides delete ;delete edge ;edge spanning ;spanning tree ;tree entire ;entire graph ;graph weight ;weight equal ;equal weight ;weight equal ;equal weight ;weight spanning ;spanning tree ;tree minimum ;minimum spanning ;spanning tree ;tree contradicts ;contradicts assumption ;assumption minimum ;minimum spanning ;spanning tree ;tree completes ;completes correctness ;correctness proof ;proof prim ;prim algorithm ;algorithm efficient ;efficient prim ;prim algorithm ;algorithm depends ;depends data ;data structures ;structures chosen ;chosen graph ;graph priority ;priority set ;set vertex ;vertex priorities ;priorities distances ;distances nearest ;nearest tree ;tree vertices ;vertices figure ;figure set ;set operates ;operates priority ;priority graph ;graph represented ;represented weight ;weight matrix ;matrix priority ;priority implemented ;implemented unordered ;unordered array ;array algorithm ;algorithm running ;running iterations ;iterations array ;array implementing ;implementing priority ;priority traversed ;traversed delete ;delete minimum ;minimum update ;update priorities ;priorities remaining ;remaining vertices ;vertices implement ;implement priority ;priority min ;min mirror ;mirror image ;image structure ;structure discussed ;discussed section ;section fact ;fact plemented ;plemented constructing ;constructing negating ;negating key ;key values ;values min ;min binary ;binary tree ;tree element ;element equal ;equal implementation ;implementation fringe ;fringe unseen ;unseen split ;split pursued ;pursued unseen ;unseen vertices ;vertices adjacent ;adjacent moved ;moved fringe ;fringe tree ;tree vertices ;vertices remaining ;remaining vertices ;vertices illustration ;illustration figure ;figure application ;application prim ;prim algorithm ;algorithm parenthesized ;parenthesized labels ;labels vertex ;vertex middle ;middle column ;column nearest ;nearest tree ;tree vertex ;vertex edge ;edge weight ;weight selected ;selected vertices ;vertices edges ;edges shown ;shown bold ;bold figure ;figure correctness ;correctness proof ;proof prim ;prim algorithm ;algorithm children ;children principal ;principal properties ;properties heaps ;heaps valid ;valid min ;min heaps ;heaps obvious ;obvious modifications ;modifications root ;root min ;min smallest ;smallest largest ;largest element ;element deletion ;deletion smallest ;smallest element ;element insertion ;insertion element ;element min ;min size ;size log ;log operations ;operations operation ;operation changing ;changing element ;element priority ;priority problem ;problem section ;section exercises ;exercises graph ;graph represented ;represented adjacency ;adjacency lists ;lists priority ;priority plemented ;plemented min ;min running ;running algorithm ;algorithm log ;log algorithm ;algorithm performs ;performs deletions ;deletions smallest ;smallest element ;element makes ;makes verifications ;verifications possibly ;possibly element ;element priority ;priority min ;min size ;size exceeding ;exceeding operations ;operations noted ;noted earlier ;earlier log ;log operation ;operation running ;running implementation ;implementation prim ;prim algorithm ;algorithm log ;log connected ;connected graph ;graph section ;section greedy ;greedy algorithm ;algorithm minimum ;minimum spanning ;spanning tree ;tree problem ;problem greedy ;greedy manner ;manner prim ;prim algorithm ;algorithm exercises ;exercises write ;write pseudocode ;pseudocode greedy ;greedy algorithm ;algorithm making ;making problem ;problem coin ;coin denominations ;denominations input ;input efficiency ;efficiency class ;class algorithm ;algorithm design ;design greedy ;greedy algorithm ;algorithm assignment ;assignment problem ;problem section ;section greedy ;greedy algorithm ;algorithm yield ;yield optimal ;optimal solution ;solution job ;job scheduling ;scheduling problem ;problem scheduling ;scheduling jobs ;jobs dura ;dura tions ;tions execution ;execution single ;single processor ;processor jobs ;jobs executed ;executed job ;job schedule ;schedule minimizes ;minimizes total ;total spent ;spent jobs ;jobs spent ;spent job ;job sum ;sum spent ;spent job ;job waiting ;waiting spent ;spent execution ;execution design ;design greedy ;greedy algorithm ;algorithm problem ;problem greedy ;greedy algorithm ;algorithm yield ;yield optimal ;optimal solution ;solution compatible ;compatible intervals ;intervals real ;real line ;line representing ;representing times ;times activity ;activity requiring ;requiring resource ;resource task ;task largest ;largest intervals ;intervals overlap ;overlap investigate ;investigate greedy ;greedy algorithms ;algorithms based ;based earliest ;earliest shortest ;shortest duration ;duration earliest ;earliest finish ;finish algorithms ;algorithms prove ;prove algorithm ;algorithm yields ;yields optimal ;optimal solution ;solution counterexample ;counterexample showing ;showing case ;case bridge ;bridge crossing ;crossing revisited ;revisited generalization ;generalization bridge ;bridge crossing ;crossing puzzle ;puzzle problem ;problem exercises ;exercises people ;people bridge ;bridge crossing ;crossing times ;times conditions ;conditions problem ;problem people ;people bridge ;bridge speed ;speed slower ;slower flashlight ;flashlight group ;group design ;design greedy ;greedy algorithm ;algorithm problem ;problem bridge ;bridge algorithm ;algorithm yield ;yield minimum ;minimum crossing ;crossing instance ;instance problem ;problem prove ;prove instance ;instance smallest ;smallest people ;people averaging ;averaging identical ;identical vessels ;vessels pints ;pints allowed ;allowed operation ;operation vessels ;vessels split ;split total ;total equally ;equally achieve ;achieve minimum ;minimum vessel ;vessel initial ;initial set ;set sequence ;sequence operations ;operations rumor ;rumor spreading ;spreading people ;people possession ;possession rumor ;rumor rumors ;rumors sending ;sending electronic ;electronic messages ;messages assume ;assume sender ;sender includes ;includes rumors ;rumors message ;message addressee ;addressee design ;design greedy ;greedy algorithm ;algorithm yields ;yields minimum ;minimum messages ;messages send ;send rumors ;rumors bachet ;bachet problem ;problem weights ;weights optimal ;optimal set ;set weights ;weights scale ;scale integer ;integer largest ;largest range ;range provided ;provided weights ;weights free ;free cup ;cup scale ;scale weights ;weights cups ;cups scale ;scale apply ;apply prim ;prim algorithm ;algorithm graph ;graph priority ;priority vertices ;vertices tree ;tree apply ;apply prim ;prim algorithm ;algorithm graph ;graph priority ;priority fringe ;fringe vertices ;vertices current ;current tree ;tree adjacent ;adjacent tree ;tree vertex ;vertex notion ;notion minimum ;minimum spanning ;spanning tree ;tree applicable ;applicable connected ;connected weighted ;weighted graph ;graph connectivity ;connectivity applying ;applying prim ;prim algorithm ;algorithm prim ;prim algorithm ;algorithm correctly ;correctly graphs ;graphs negative ;negative edge ;edge weights ;weights minimum ;minimum spanning ;spanning tree ;tree graph ;graph obtained ;obtained prim ;prim algorithm ;algorithm gnew ;gnew graph ;graph obtained ;obtained adding ;adding vertex ;vertex edges ;edges weights ;weights connecting ;connecting vertex ;vertex vertices ;vertices struct ;struct minimum ;minimum spanning ;spanning tree ;tree gnew ;gnew adding ;adding edges ;edges prim ;prim algorithm ;algorithm spanning ;spanning tree ;tree connected ;connected graph ;graph weights ;weights edges ;edges good ;good algorithm ;algorithm problem ;problem prove ;prove weighted ;weighted connected ;connected graph ;graph distinct ;distinct weights ;weights minimum ;minimum spanning ;spanning tree ;tree outline ;outline efficient ;efficient algorithm ;algorithm changing ;changing element ;element min ;min efficiency ;efficiency algorithm ;algorithm kruskal ;kruskal algorithm ;algorithm previous ;previous section ;section considered ;considered greedy ;greedy algorithm ;algorithm grows ;grows mini ;mini mum ;mum spanning ;spanning tree ;tree greedy ;greedy inclusion ;inclusion nearest ;nearest vertex ;vertex vertices ;vertices tree ;tree remarkably ;remarkably greedy ;greedy algorithm ;algorithm mini ;mini mum ;mum spanning ;spanning tree ;tree problem ;problem yields ;yields optimal ;optimal solution ;solution named ;named kruskal ;kruskal algorithm ;algorithm joseph ;joseph kruskal ;kruskal discovered ;discovered algorithm ;algorithm year ;year graduate ;graduate student ;student kru ;kru kruskal ;kruskal algorithm ;algorithm minimum ;minimum spanning ;spanning tree ;tree weighted ;weighted connected ;connected graph ;graph acyclic ;acyclic subgraph ;subgraph edges ;edges sum ;sum edge ;edge weights ;weights smallest ;smallest difficult ;difficult prove ;prove subgraph ;subgraph tree ;tree algorithm ;algorithm constructs ;constructs minimum ;minimum spanning ;spanning tree ;tree expanding ;expanding sequence ;sequence subgraphs ;subgraphs acyclic ;acyclic necessarily ;necessarily connected ;connected inter ;inter mediate ;mediate stages ;stages algorithm ;algorithm begins ;begins sorting ;sorting graph ;graph edges ;edges nondecreasing ;nondecreasing weights ;weights starting ;starting subgraph ;subgraph scans ;scans sorted ;sorted adding ;adding edge ;edge current ;current subgraph ;subgraph inclusion ;inclusion create ;create simply ;simply skipping ;skipping edge ;edge algorithm ;algorithm kruskal ;kruskal algorithm ;algorithm constructing ;constructing minimum ;minimum spanning ;spanning tree ;tree input ;input weighted ;weighted connected ;connected graph ;graph output ;output set ;set edges ;edges composing ;composing minimum ;minimum spanning ;spanning tree ;tree sort ;sort nondecreasing ;nondecreasing edge ;edge weights ;weights ecounter ;ecounter initialize ;initialize set ;set tree ;tree edges ;edges size ;size initialize ;initialize processed ;processed edges ;edges ecounter ;ecounter eik ;eik acyclic ;acyclic eik ;eik ecounter ;ecounter correctness ;correctness kruskal ;kruskal algorithm ;algorithm proved ;proved repeating ;repeating essen ;essen tial ;tial steps ;steps proof ;proof prim ;prim algorithm ;algorithm previous ;previous section ;section fact ;fact tree ;tree prim ;prim algorithm ;algorithm generally ;generally acyclic ;acyclic subgraph ;subgraph kruskal ;kruskal algorithm ;algorithm turns ;turns obstacle ;obstacle overcome ;overcome figure ;figure demonstrates ;demonstrates application ;application kruskal ;kruskal algorithm ;algorithm graph ;graph illustrating ;illustrating prim ;prim algorithm ;algorithm section ;section algorithm ;algorithm operations ;operations disconnectedness ;disconnectedness intermediate ;intermediate subgraphs ;subgraphs applying ;applying prim ;prim kruskal ;kruskal algorithms ;algorithms small ;small graph ;graph create ;create impression ;impression simpler ;simpler impres ;impres sion ;sion wrong ;wrong iterations ;iterations kruskal ;kruskal algorithm ;algorithm addition ;addition edge ;edge edges ;edges selected ;selected create ;create tree ;tree edges ;edges sorted ;sorted edges ;edges illustration ;illustration figure ;figure application ;application kruskal ;kruskal algorithm ;algorithm selected ;selected edges ;edges shown ;shown bold ;bold figure ;figure edge ;edge connecting ;connecting vertices ;vertices create ;create difficult ;difficult created ;created edge ;edge connects ;connects vertices ;vertices connected ;connected path ;path vertices ;vertices connected ;connected component ;component figure ;figure connected ;connected component ;component subgraph ;subgraph generated ;generated kruskal ;kruskal algorithm ;algorithm tree ;tree cycles ;cycles view ;view observations ;observations convenient ;convenient slightly ;slightly interpretation ;interpretation kruskal ;kruskal algorithm ;algorithm operations ;operations progression ;progression series ;series forests ;forests vertices ;vertices graph ;graph edges ;edges initial ;initial forest ;forest consists ;consists trivial ;trivial trees ;trees comprising ;comprising single ;single vertex ;vertex graph ;graph final ;final forest ;forest consists ;consists single ;single tree ;tree minimum ;minimum spanning ;spanning tree ;tree graph ;graph iteration ;iteration algorithm ;algorithm takes ;takes edge ;edge sorted ;sorted graph ;graph edges ;edges finds ;finds trees ;trees vertices ;vertices trees ;trees unites ;unites larger ;larger tree ;tree adding ;adding edge ;edge fortunately ;fortunately efficient ;efficient algorithms ;algorithms crucial ;crucial vertices ;vertices tree ;tree called ;called unionfind ;unionfind algorithms ;algorithms discuss ;discuss subsection ;subsection efficient ;efficient union ;union algorithm ;algorithm running ;running kruskal ;kruskal algorithm ;algorithm dominated ;dominated needed ;needed sorting ;sorting edge ;edge weights ;weights graph ;graph efficient ;efficient sorting ;sorting algorithm ;algorithm efficiency ;efficiency kruskal ;kruskal algorithm ;algorithm log ;log disjoint ;disjoint subsets ;subsets union ;union algorithms ;algorithms kruskal ;kruskal algorithm ;algorithm applications ;applications require ;require dynamic ;dynamic partition ;partition element ;element set ;set collection ;collection disjoint ;disjoint subsets ;subsets initialized ;initialized collection ;collection element ;element subsets ;subsets element ;element collection ;collection subjected ;subjected sequence ;sequence intermixed ;intermixed union ;union operations ;operations union ;union operations ;operations sequence ;sequence bounded ;bounded union ;union increases ;increases subset ;subset size ;size elements ;elements entire ;entire set ;set dealing ;dealing abstract ;abstract data ;data collection ;collection disjoint ;disjoint subsets ;subsets finite ;finite set ;set operations ;operations makeset ;makeset creates ;creates element ;element set ;set assumed ;assumed operation ;operation applied ;applied elements ;elements set ;set returns ;returns subset ;subset union ;union constructs ;constructs union ;union disjoint ;disjoint subsets ;subsets adds ;adds collection ;collection deleted ;deleted makeset ;makeset creates ;creates set ;set applying ;applying operation ;operation times ;times initializes ;initializes structure ;structure collection ;collection singleton ;singleton sets ;sets performing ;performing union ;union yields ;yields union ;union disjoint ;disjoint subsets ;subsets implementations ;implementations abstract ;abstract data ;data element ;element disjoint ;disjoint subsets ;subsets collection ;collection subset ;subset representative ;representative implemen ;implemen tations ;tations impose ;impose specific ;specific constraints ;constraints representative ;representative requiring ;requiring smallest ;smallest element ;element subset ;subset representative ;representative assumed ;assumed set ;set elements ;elements mapped ;mapped integers ;integers principal ;principal alternatives ;alternatives implementing ;implementing data ;data structure ;structure called ;called quick ;quick optimizes ;optimizes efficiency ;efficiency operation ;operation called ;called quick ;quick union ;union optimizes ;optimizes union ;union operation ;operation quick ;quick array ;array indexed ;indexed elements ;elements underlying ;underlying set ;set array ;array values ;values representatives ;representatives subsets ;subsets elements ;elements subset ;subset implemented ;implemented linked ;linked header ;header pointers ;pointers elements ;elements figure ;figure scheme ;scheme implementation ;implementation makeset ;makeset requires ;requires assigning ;assigning element ;element representative ;representative array ;array initializing ;initializing corre ;corre sponding ;sponding linked ;linked single ;single node ;node efficiency ;efficiency operation ;operation initialization ;initialization singleton ;singleton subsets ;subsets efficiency ;efficiency retrieve ;retrieve representative ;representative array ;array executing ;executing union ;union takes ;takes longer ;longer straightforward ;straightforward solution ;solution simply ;simply append ;append update ;update information ;information representative ;representative elements ;elements subset ;subset representatives ;representatives element ;element index ;index representative ;representative size ;size null ;null figure ;figure linked ;linked representation ;representation subsets ;subsets obtained ;obtained quick ;quick performing ;performing union ;union lists ;lists size ;size considered ;considered deleted ;deleted collection ;collection delete ;delete collection ;collection easy ;easy verify ;verify algorithm ;algorithm sequence ;sequence union ;union operations ;operations union ;union runs ;runs compared ;compared alternatives ;alternatives simple ;simple efficiency ;efficiency sequence ;sequence union ;union operations ;operations append ;append shorter ;shorter lists ;lists longer ;longer ties ;ties broken ;broken arbitrarily ;arbitrarily size ;size assumed ;assumed storing ;storing elements ;elements header ;header modification ;modification called ;called figure ;figure forest ;forest representation ;representation subsets ;subsets quick ;quick union ;union result ;result union ;union size ;size worst ;worst case ;case efficiency ;efficiency single ;single plication ;plication union ;union operation ;operation worst ;worst case ;case running ;running legitimate ;legitimate sequence ;sequence union ;union size ;size operations ;operations turns ;turns log ;log proof ;proof assertion ;assertion element ;element set ;set disjoint ;disjoint subsets ;subsets manipulate ;manipulate times ;times representative ;representative updated ;updated sequence ;sequence union ;union size ;size operations ;operations large ;large set ;set elements ;elements representative ;representative updated ;updated smaller ;smaller subset ;subset involved ;involved computing ;computing union ;union size ;size large ;large size ;size subset ;subset representative ;representative updated ;updated resulting ;resulting set ;set elements ;elements updated ;updated resulting ;resulting set ;set elements ;elements general ;general updated ;updated times ;times resulting ;resulting set ;set elements ;elements entire ;entire set ;set elements ;elements log ;log total ;total updates ;updates representatives ;representatives elements ;elements exceed ;exceed log ;log union ;union size ;size efficiency ;efficiency sequence ;sequence unions ;unions finds ;finds log ;log quick ;quick union ;union principal ;principal alternative ;alternative implementing ;implementing disjoint ;disjoint subsets ;subsets represents ;represents subset ;subset rooted ;rooted tree ;tree nodes ;nodes tree ;tree subset ;subset elements ;elements node ;node root ;root element ;element considered ;considered subset ;subset representative ;representative tree ;tree edges ;edges directed ;directed children ;children parents ;parents figure ;figure addition ;addition mapping ;mapping set ;set elements ;elements tree ;tree nodes ;nodes implemented ;implemented array ;array pointers ;pointers maintained ;maintained mapping ;mapping shown ;shown figure ;figure sake ;sake simplicity ;simplicity implementation ;implementation makeset ;makeset requires ;requires creation ;creation single ;single node ;node tree ;tree operation ;operation initialization ;initialization singleton ;singleton subsets ;subsets union ;union implemented ;implemented attaching ;attaching root ;root tree ;tree root ;root tree ;tree deleting ;deleting tree ;tree collection ;collection making ;making pointer ;pointer root ;root null ;null efficiency ;efficiency operation ;operation specific ;specific usefulness ;usefulness amortized ;amortized efficiency ;efficiency mentioned ;mentioned chapter ;chapter figure ;figure path ;path compression ;compression performed ;performed pointer ;pointer chain ;chain node ;node tree ;tree root ;root element ;element returned ;returned subset ;subset representative ;representative efficiency ;efficiency single ;single operation ;operation tree ;tree representing ;representing subset ;subset degenerate ;degenerate linked ;linked nodes ;nodes bound ;bound improved ;improved straightforward ;straightforward union ;union operation ;operation attaching ;attaching smaller ;smaller tree ;tree root ;root larger ;larger ties ;ties broken ;broken arbitrarily ;arbitrarily size ;size tree ;tree measured ;measured nodes ;nodes version ;version called ;called union ;union size ;size height ;height version ;version called ;called union ;union rank ;rank options ;options require ;require storing ;storing node ;node tree ;tree node ;node descendants ;descendants height ;height subtree ;subtree rooted ;rooted node ;node easily ;easily prove ;prove case ;case height ;height tree ;tree logarithmic ;logarithmic making ;making execute ;execute log ;log quick ;quick union ;union efficiency ;efficiency sequence ;sequence unions ;unions finds ;finds log ;log fact ;fact efficiency ;efficiency obtained ;obtained combining ;combining variety ;variety quick ;quick union ;union path ;path compression ;compression modification ;modification makes ;makes node ;node encountered ;encountered execution ;execution operation ;operation tree ;tree root ;root figure ;figure sophisticated ;sophisticated analysis ;analysis tar ;tar similar ;similar techniques ;techniques efficiency ;efficiency sequence ;sequence unions ;unions finds ;finds slightly ;slightly worse ;worse linear ;linear exercises ;exercises apply ;apply kruskal ;kruskal algorithm ;algorithm minimum ;minimum spanning ;spanning tree ;tree graphs ;graphs statements ;statements true ;true false ;false minimum ;minimum weight ;weight edge ;edge connected ;connected weighted ;weighted graph ;graph edges ;edges minimum ;minimum spanning ;spanning tree ;tree graph ;graph minimum ;minimum weight ;weight edge ;edge connected ;connected weighted ;weighted graph ;graph edges ;edges minimum ;minimum spanning ;spanning tree ;tree graph ;graph edge ;edge weights ;weights connected ;connected weighted ;weighted graph ;graph distinct ;distinct graph ;graph minimum ;minimum spanning ;spanning tree ;tree edge ;edge weights ;weights connected ;connected weighted ;weighted graph ;graph distinct ;distinct graph ;graph minimum ;minimum spanning ;spanning tree ;tree algorithm ;algorithm kruskal ;kruskal make ;make minimum ;minimum spanning ;spanning forest ;forest arbitrary ;arbitrary graph ;graph minimum ;minimum spanning ;spanning forest ;forest trees ;trees minimum ;minimum spanning ;spanning trees ;trees graph ;graph connected ;connected components ;components kruskal ;kruskal algorithm ;algorithm correctly ;correctly graphs ;graphs negative ;negative edge ;edge weights ;weights design ;design algorithm ;algorithm finding ;finding maximum ;maximum spanning ;spanning tree ;tree spanning ;spanning tree ;tree largest ;largest edge ;edge weight ;weight weighted ;weighted connected ;connected graph ;graph rewrite ;rewrite pseudocode ;pseudocode kruskal ;kruskal algorithm ;algorithm terms ;terms operations ;operations disjoint ;disjoint subsets ;subsets adt ;adt prove ;prove correctness ;correctness kruskal ;kruskal algorithm ;algorithm prove ;prove efficiency ;efficiency log ;log union ;union size ;size version ;version quick ;quick union ;union web ;web sites ;sites animations ;animations kruskal ;kruskal prim ;prim algorithms ;algorithms discuss ;discuss merits ;merits demerits ;demerits design ;design conduct ;conduct experiment ;experiment empirically ;empirically efficiencies ;efficiencies prim ;prim kruskal ;kruskal algorithms ;algorithms random ;random graphs ;graphs sizes ;sizes densities ;densities steiner ;steiner tree ;tree villages ;villages located ;located vertices ;vertices unit ;unit square ;square euclidean ;euclidean plane ;plane asked ;asked shortest ;shortest network ;network roads ;roads path ;path pair ;pair villages ;villages roads ;roads network ;network write ;write generating ;generating random ;random maze ;maze based ;based prim ;prim algorithm ;algorithm kruskal ;kruskal algorithm ;algorithm dijkstra ;dijkstra algorithm ;algorithm section ;section single ;single source ;source shortest ;shortest paths ;paths problem ;problem vertex ;vertex called ;called source ;source weighted ;weighted connected ;connected graph ;graph shortest ;shortest paths ;paths vertices ;vertices important ;important stress ;stress interested ;interested single ;single shortest ;shortest path ;path starts ;starts source ;source visits ;visits vertices ;vertices difficult ;difficult problem ;problem version ;version traveling ;traveling salesman ;salesman problem ;problem introduced ;introduced section ;section discussed ;discussed single ;single source ;source shortest ;shortest paths ;paths problem ;problem asks ;asks family ;family paths ;paths leading ;leading source ;source vertex ;vertex graph ;graph paths ;paths edges ;edges common ;common variety ;variety practical ;practical applications ;applications shortest ;shortest paths ;paths problem ;problem popular ;popular study ;study obvious ;obvious widely ;widely applications ;applications transportation ;transportation planning ;planning packet ;packet routing ;routing communi ;communi cation ;cation networks ;networks internet ;internet multitudes ;multitudes obvious ;obvious applications ;applications finding ;finding shortest ;shortest paths ;paths social ;social networks ;networks speech ;speech recognition ;recognition document ;document formatting ;formatting robotics ;robotics compilers ;compilers airline ;airline crew ;crew scheduling ;scheduling world ;world tainment ;tainment mention ;mention pathfinding ;pathfinding video ;video games ;games finding ;finding solutions ;solutions puzzles ;puzzles state ;state space ;space graphs ;graphs section ;section simple ;simple algorithms ;algorithms finding ;finding shortest ;shortest paths ;paths floyd ;floyd algorithm ;algorithm general ;general pairs ;pairs shortest ;shortest paths ;paths problem ;problem discussed ;discussed chapter ;chapter algorithm ;algorithm single ;single source ;source shortest ;shortest paths ;paths problem ;problem called ;called dijkstra ;dijkstra algorithm ;algorithm applicable ;applicable undirected ;undirected directed ;directed graphs ;graphs nonnegative ;nonnegative weights ;weights plications ;plications condition ;condition satisfied ;satisfied limitation ;limitation impaired ;impaired popularity ;popularity dijkstra ;dijkstra algorithm ;algorithm dijkstra ;dijkstra algorithm ;algorithm finds ;finds shortest ;shortest paths ;paths graph ;graph vertices ;vertices distance ;distance source ;source finds ;finds shortest ;shortest path ;path source ;source edsger ;edsger dijkstra ;dijkstra noted ;noted dutch ;dutch pioneer ;pioneer science ;science industry ;industry computing ;computing discovered ;discovered algorithm ;algorithm mid ;mid dijkstra ;dijkstra algorithm ;algorithm graph ;graph problem ;problem posed ;posed solved ;solved amazing ;amazing thing ;thing publish ;publish amazing ;amazing algorithms ;algorithms considered ;considered scientific ;scientific topic ;topic figure ;figure idea ;idea dijkstra ;dijkstra algorithm ;algorithm subtree ;subtree shortest ;shortest paths ;paths shown ;shown bold ;bold nearest ;nearest source ;source vertex ;vertex selected ;selected comparing ;comparing lengths ;lengths subtree ;subtree paths ;paths increased ;increased distances ;distances vertices ;vertices adjacent ;adjacent subtree ;subtree vertices ;vertices vertex ;vertex nearest ;nearest general ;general ith ;ith iteration ;iteration commences ;commences algorithm ;algorithm identified ;identified shortest ;shortest paths ;paths vertices ;vertices nearest ;nearest source ;source vertices ;vertices source ;source edges ;edges shortest ;shortest paths ;paths leading ;leading source ;source subtree ;subtree graph ;graph figure ;figure edge ;edge weights ;weights nonnegative ;nonnegative vertex ;vertex nearest ;nearest source ;source vertices ;vertices adjacent ;adjacent vertices ;vertices set ;set vertices ;vertices adjacent ;adjacent vertices ;vertices referred ;referred fringe ;fringe vertices ;vertices candidates ;candidates dijkstra ;dijkstra algorithm ;algorithm selects ;selects vertex ;vertex nearest ;nearest source ;source vertices ;vertices treated ;treated fringe ;fringe vertices ;vertices connected ;connected tree ;tree vertices ;vertices edges ;edges infinitely ;infinitely large ;large weights ;weights ith ;ith nearest ;nearest vertex ;vertex algorithm ;algorithm computes ;computes fringe ;fringe vertex ;vertex sum ;sum distance ;distance nearest ;nearest tree ;tree vertex ;vertex weight ;weight edge ;edge length ;length shortest ;shortest path ;path source ;source previously ;previously determined ;determined algorithm ;algorithm selects ;selects vertex ;vertex smallest ;smallest sum ;sum fact ;fact suffices ;suffices lengths ;lengths special ;special paths ;paths central ;central insight ;insight dijkstra ;dijkstra algorithm ;algorithm facilitate ;facilitate algorithm ;algorithm operations ;operations vertex ;vertex labels ;labels numeric ;numeric length ;length shortest ;shortest path ;path source ;source vertex ;vertex algorithm ;algorithm vertex ;vertex added ;added tree ;tree length ;length shortest ;shortest path ;path source ;source vertex ;vertex path ;path parent ;parent vertex ;vertex tree ;tree constructed ;constructed left ;left unspecified ;unspecified source ;source vertices ;vertices adjacent ;adjacent current ;current tree ;tree vertices ;vertices labeling ;labeling finding ;finding nearest ;nearest vertex ;vertex simple ;simple task ;task finding ;finding fringe ;fringe vertex ;vertex smallest ;smallest ties ;ties broken ;broken arbitrarily ;arbitrarily identified ;identified vertex ;vertex added ;added tree ;tree operations ;operations fringe ;fringe set ;set tree ;tree vertices ;vertices remaining ;remaining fringe ;fringe vertex ;vertex connected ;connected edge ;edge weight ;weight update ;update labels ;labels figure ;figure demonstrates ;demonstrates application ;application dijkstra ;dijkstra algorithm ;algorithm specific ;specific graph ;graph labeling ;labeling mechanics ;mechanics dijkstra ;dijkstra algorithm ;algorithm similar ;similar prim ;prim algorithm ;algorithm section ;section construct ;construct expanding ;expanding subtree ;subtree vertices ;vertices selecting ;selecting vertex ;vertex priority ;priority remaining ;remaining vertices ;vertices important ;important solve ;solve problems ;problems operate ;operate priorities ;priorities computed ;computed manner ;manner dijkstra ;dijkstra algorithm ;algorithm compares ;compares path ;path lengths ;lengths edge ;edge weights ;weights prim ;prim algorithm ;algorithm compares ;compares edge ;edge weights ;weights pseudocode ;pseudocode dijkstra ;dijkstra algorithm ;algorithm spelled ;spelled prim ;prim algorithm ;algorithm section ;section terms ;terms explicit ;explicit operations ;operations sets ;sets labeled ;labeled vertices ;vertices set ;set vertices ;vertices shortest ;shortest path ;path priority ;priority fringe ;fringe vertices ;vertices pseudocode ;pseudocode source ;source vertex ;vertex fringe ;fringe vertices ;vertices adjacent ;adjacent iteration ;iteration completed ;completed algorithm ;algorithm dijkstra ;dijkstra algorithm ;algorithm single ;single source ;source shortest ;shortest paths ;paths input ;input weighted ;weighted connected ;connected graph ;graph nonnegative ;nonnegative weights ;weights vertex ;vertex output ;output length ;length shortest ;shortest path ;path penultimate ;penultimate vertex ;vertex initialize ;initialize priority ;priority vertex ;vertex null ;null insert ;insert initialize ;initialize vertex ;vertex priority ;priority decrease ;decrease update ;update priority ;priority deletemin ;deletemin delete ;delete minimum ;minimum priority ;priority element ;element vertex ;vertex adjacent ;adjacent decrease ;decrease efficiency ;efficiency dijkstra ;dijkstra algorithm ;algorithm depends ;depends data ;data structures ;structures implementing ;implementing priority ;priority representing ;representing input ;input graph ;graph reasons ;reasons explained ;explained analysis ;analysis prim ;prim algorithm ;algorithm section ;section tree ;tree vertices ;vertices remaining ;remaining vertices ;vertices illustration ;illustration shortest ;shortest paths ;paths identified ;identified nonnumeric ;nonnumeric labels ;labels backward ;backward destination ;destination vertex ;vertex left ;left column ;column source ;source lengths ;lengths numeric ;numeric labels ;labels tree ;tree vertices ;vertices length ;length figure ;figure application ;application dijkstra ;dijkstra algorithm ;algorithm closest ;closest vertex ;vertex shown ;shown bold ;bold graphs ;graphs represented ;represented weight ;weight matrix ;matrix priority ;priority implemented ;implemented unordered ;unordered array ;array graphs ;graphs represented ;represented adjacency ;adjacency lists ;lists priority ;priority implemented ;implemented min ;min log ;log upper ;upper bound ;bound achieved ;achieved prim ;prim dijkstra ;dijkstra algorithms ;algorithms priority ;priority implemented ;implemented sophisticated ;sophisticated data ;data structure ;structure called ;called fibonacci ;fibonacci cor ;cor complexity ;complexity considerable ;considerable overhead ;overhead make ;make improvement ;improvement primarily ;primarily theoretical ;theoretical exercises ;exercises adjustments ;adjustments dijkstra ;dijkstra algorithm ;algorithm underlying ;underlying graph ;graph solve ;solve problems ;problems solve ;solve single ;single source ;source shortest ;shortest paths ;paths problem ;problem directed ;directed weighted ;weighted graphs ;graphs shortest ;shortest path ;path vertices ;vertices weighted ;weighted graph ;graph digraph ;digraph variation ;variation called ;called single ;single pair ;pair shortest ;shortest path ;path problem ;problem shortest ;shortest paths ;paths vertex ;vertex weighted ;weighted graph ;graph digraph ;digraph variation ;variation called ;called single ;single destination ;destination shortest ;shortest paths ;paths problem ;problem solve ;solve single ;single source ;source shortest ;shortest paths ;paths problem ;problem graph ;graph nonnegative ;nonnegative numbers ;numbers assigned ;assigned vertices ;vertices length ;length path ;path defined ;defined sum ;sum vertex ;vertex numbers ;numbers path ;path solve ;solve instances ;instances single ;single source ;source shortest ;shortest paths ;paths problem ;problem vertex ;vertex source ;source counterexample ;counterexample shows ;shows dijkstra ;dijkstra algorithm ;algorithm weighted ;weighted connected ;connected graph ;graph negative ;negative weights ;weights tree ;tree constructed ;constructed dijkstra ;dijkstra algorithm ;algorithm process ;process solving ;solving single ;single source ;source shortest ;shortest paths ;paths problem ;problem weighted ;weighted connected ;connected graph ;graph true ;true false ;false spanning ;spanning tree ;tree true ;true false ;false minimum ;minimum spanning ;spanning tree ;tree write ;write pseudocode ;pseudocode simpler ;simpler version ;version dijkstra ;dijkstra algorithm ;algorithm finds ;finds distances ;distances lengths ;lengths shortest ;shortest paths ;paths shortest ;shortest paths ;paths vertex ;vertex vertices ;vertices graph ;graph represented ;represented weight ;weight matrix ;matrix prove ;prove correctness ;correctness dijkstra ;dijkstra algorithm ;algorithm graphs ;graphs positive ;positive weights ;weights design ;design linear ;linear algorithm ;algorithm solving ;solving single ;single source ;source shortest ;shortest paths ;paths problem ;problem dags ;dags directed ;directed acyclic ;acyclic graphs ;graphs represented ;represented adjacency ;adjacency lists ;lists minimum ;minimum sum ;sum descent ;descent problem ;problem exercises ;exercises solved ;solved dijkstra ;dijkstra algorithm ;algorithm shortest ;shortest path ;path modeling ;modeling assume ;assume model ;model weighted ;weighted connected ;connected graph ;graph balls ;balls representing ;representing vertices ;vertices connected ;connected strings ;strings appro ;appro priate ;priate lengths ;lengths representing ;representing edges ;edges solve ;solve single ;single pair ;pair shortest ;shortest path ;path problem ;problem model ;model solve ;solve single ;single source ;source shortest ;shortest paths ;paths problem ;problem model ;model revisit ;revisit section ;section determining ;determining route ;route subway ;subway passenger ;passenger designated ;designated station ;station developed ;developed subway ;subway washington ;washington london ;london write ;write task ;task huffman ;huffman trees ;trees codes ;codes encode ;encode text ;text comprises ;comprises symbols ;symbols symbol ;symbol alphabet ;alphabet assigning ;assigning text ;text symbols ;symbols sequence ;sequence bits ;bits called ;called codeword ;codeword fixed ;fixed length ;length encoding ;encoding assigns ;assigns symbol ;symbol bit ;bit string ;string length ;length log ;log standard ;standard ascii ;ascii code ;code coding ;coding scheme ;scheme yields ;yields shorter ;shorter bit ;bit string ;string average ;average based ;based idea ;idea assigning ;assigning shorter ;shorter code ;code words ;words frequent ;frequent symbols ;symbols longer ;longer codewords ;codewords frequent ;frequent symbols ;symbols idea ;idea telegraph ;telegraph code ;code invented ;invented mid ;mid century ;century samuel ;samuel morse ;morse code ;code frequent ;frequent letters ;letters assigned ;assigned short ;short sequences ;sequences dots ;dots dashes ;dashes infrequent ;infrequent letters ;letters longer ;longer variable ;variable length ;length encoding ;encoding assigns ;assigns codewords ;codewords lengths ;lengths symbols ;symbols introduces ;introduces problem ;problem fixed ;fixed length ;length encoding ;encoding bits ;bits encoded ;encoded text ;text represent ;represent generally ;generally ith ;ith symbol ;symbol complication ;complication limit ;limit called ;called prefix ;prefix free ;free simply ;simply prefix ;prefix codes ;codes prefix ;prefix code ;code codeword ;codeword prefix ;prefix codeword ;codeword symbol ;symbol encoding ;encoding simply ;simply scan ;scan bit ;bit string ;string group ;group bits ;bits codeword ;codeword symbol ;symbol bits ;bits symbol ;symbol operation ;operation bit ;bit string ;string reached ;reached create ;create binary ;binary prefix ;prefix code ;code alphabet ;alphabet natural ;natural associate ;associate alphabet ;alphabet symbols ;symbols leaves ;leaves binary ;binary tree ;tree left ;left edges ;edges labeled ;labeled edges ;edges labeled ;labeled codeword ;codeword symbol ;symbol obtained ;obtained recording ;recording labels ;labels simple ;simple path ;path root ;root symbol ;symbol leaf ;leaf simple ;simple path ;path leaf ;leaf continues ;continues leaf ;leaf codeword ;codeword prefix ;prefix codeword ;codeword tree ;tree yields ;yields prefix ;prefix code ;code trees ;trees constructed ;constructed manner ;manner alphabet ;alphabet frequencies ;frequencies symbol ;symbol occurrences ;occurrences construct ;construct tree ;tree assign ;assign shorter ;shorter bit ;bit strings ;strings high ;high frequency ;frequency symbols ;symbols longer ;longer low ;low frequency ;frequency symbols ;symbols greedy ;greedy algorithm ;algorithm invented ;invented david ;david huffman ;huffman graduate ;graduate student ;student mit ;mit huf ;huf huffman ;huffman algorithm ;algorithm initialize ;initialize node ;node trees ;trees symbols ;symbols alphabet ;alphabet frequency ;frequency symbol ;symbol tree ;tree root ;root tree ;tree weight ;weight generally ;generally weight ;weight tree ;tree equal ;equal sum ;sum frequencies ;frequencies tree ;tree leaves ;leaves operation ;operation single ;single tree ;tree obtained ;obtained trees ;trees smallest ;smallest weight ;weight ties ;ties broken ;broken arbitrarily ;arbitrarily problem ;problem section ;section exercises ;exercises make ;make left ;left subtree ;subtree tree ;tree sum ;sum weights ;weights root ;root tree ;tree weight ;weight tree ;tree constructed ;constructed algorithm ;algorithm called ;called huffman ;huffman tree ;tree defines ;defines manner ;manner huffman ;huffman code ;code symbol ;symbol alphabet ;alphabet occurrence ;occurrence frequencies ;frequencies text ;text symbols ;symbols symbol ;symbol frequency ;frequency huffman ;huffman tree ;tree construction ;construction input ;input shown ;shown figure ;figure constructing ;constructing huffman ;huffman coding ;coding tree ;tree resulting ;resulting codewords ;codewords symbol ;symbol frequency ;frequency codeword ;codeword dad ;dad encoded ;encoded decoded ;decoded bad ;bad occurrence ;occurrence frequencies ;frequencies codeword ;codeword lengths ;lengths obtained ;obtained average ;average bits ;bits symbol ;symbol code ;code fixed ;fixed length ;length encoding ;encoding alphabet ;alphabet bits ;bits symbol ;symbol toy ;toy huffman ;huffman code ;code achieves ;achieves compression ;compression ratio ;ratio standard ;standard compression ;compression algorithm ;algorithm effectiveness ;effectiveness words ;words huffman ;huffman encoding ;encoding text ;text memory ;memory fixed ;fixed length ;length encoding ;encoding extensive ;extensive experiments ;experiments huffman ;huffman codes ;codes shown ;shown compression ;compression ratio ;ratio scheme ;scheme typically ;typically falls ;falls depending ;depending characteristics ;characteristics text ;text compressed ;compressed huffman ;huffman encoding ;encoding important ;important compression ;compression methods ;methods addition ;addition simplicity ;simplicity versatility ;versatility yields ;yields optimal ;optimal minimal ;minimal length ;length encoding ;encoding provided ;provided frequencies ;frequencies symbol ;symbol occurrences ;occurrences independent ;independent advance ;advance simplest ;simplest version ;version huffman ;huffman compression ;compression calls ;calls fact ;fact preliminary ;preliminary scanning ;scanning text ;text frequencies ;frequencies symbol ;symbol occurrences ;occurrences frequencies ;frequencies construct ;construct huffman ;huffman coding ;coding tree ;tree encode ;encode text ;text scheme ;scheme makes ;makes coding ;coding table ;table encoded ;encoded text ;text make ;make decoding ;decoding drawback ;drawback overcome ;overcome dynamic ;dynamic huffman ;huffman encoding ;encoding coding ;coding tree ;tree updated ;updated symbol ;symbol read ;read source ;source text ;text modern ;modern alternatives ;alternatives lempel ;lempel ziv ;ziv algorithms ;algorithms assign ;assign codewords ;codewords individual ;individual symbols ;symbols strings ;strings symbols ;symbols allowing ;allowing achieve ;achieve robust ;robust compressions ;compressions applications ;applications important ;important applications ;applications huffman ;huffman algorithm ;algorithm data ;data compression ;compression positive ;positive numbers ;numbers assigned ;assigned leaves ;leaves binary ;binary tree ;tree node ;node define ;define weighted ;weighted path ;path length ;length sum ;sum length ;length simple ;simple path ;path root ;root ith ;ith leaf ;leaf construct ;construct binary ;binary tree ;tree minimum ;minimum weighted ;weighted path ;path length ;length general ;general problem ;problem huffman ;huffman algorithm ;algorithm solves ;solves coding ;coding application ;application length ;length codeword ;codeword frequency ;frequency ith ;ith symbol ;symbol problem ;problem arises ;arises situations ;situations involving ;involving decision ;decision making ;making game ;game guessing ;guessing chosen ;chosen possibilities ;possibilities integer ;integer questions ;questions answerable ;answerable strategies ;strategies playing ;playing game ;game modeled ;modeled decision ;decision trees ;trees depicted ;depicted figure ;figure length ;length simple ;simple path ;path root ;root leaf ;leaf tree ;tree equal ;equal questions ;questions needed ;needed chosen ;chosen represented ;represented leaf ;leaf chosen ;chosen probability ;probability sum ;sum decision ;decision trees ;trees discussed ;discussed section ;section figure ;figure decision ;decision trees ;trees guessing ;guessing integer ;integer length ;length path ;path root ;root ith ;ith leaf ;leaf average ;average questions ;questions needed ;needed chosen ;chosen game ;game strategy ;strategy represented ;represented decision ;decision tree ;tree numbers ;numbers chosen ;chosen probability ;probability strategy ;strategy successively ;successively eliminate ;eliminate half ;half candidates ;candidates binary ;binary case ;case arbitrary ;arbitrary minimum ;minimum weighted ;weighted path ;path tree ;tree rightmost ;rightmost figure ;figure huffman ;huffman algorithm ;algorithm solve ;solve problem ;problem general ;general case ;case encountering ;encountering problem ;problem structing ;structing optimal ;optimal binary ;binary tree ;tree section ;section discussed ;discussed problem ;problem constructing ;constructing optimal ;optimal binary ;binary tree ;tree positive ;positive numbers ;numbers prob ;prob abilities ;abilities assigned ;assigned node ;node tree ;tree section ;section numbers ;numbers assigned ;assigned leaves ;leaves problem ;problem turns ;turns easier ;easier solved ;solved greedy ;greedy algorithm ;algorithm solved ;solved complicated ;complicated dynamic ;dynamic programming ;programming algorithm ;algorithm exercises ;exercises construct ;construct huffman ;huffman code ;code data ;data symbol ;symbol frequency ;frequency encode ;encode abacabad ;abacabad code ;code decode ;decode code ;code data ;data transmission ;transmission purposes ;purposes desirable ;desirable code ;code minimum ;minimum variance ;variance codeword ;codeword lengths ;lengths codes ;codes average ;average length ;length compute ;compute average ;average variance ;variance codeword ;codeword length ;length huffman ;huffman codes ;codes result ;result breaking ;breaking huffman ;huffman code ;code construction ;construction data ;data symbol ;symbol probability ;probability properties ;properties true ;true huffman ;huffman code ;code codewords ;codewords frequent ;frequent symbols ;symbols length ;length codeword ;codeword length ;length frequent ;frequent symbol ;symbol smaller ;smaller equal ;equal codeword ;codeword length ;length frequent ;frequent maximal ;maximal length ;length codeword ;codeword huffman ;huffman encoding ;encoding alphabet ;alphabet symbols ;symbols write ;write pseudocode ;pseudocode huffman ;huffman tree ;tree construction ;construction algorithm ;algorithm efficiency ;efficiency class ;class algorithm ;algorithm constructing ;constructing huff ;huff tree ;tree function ;function alphabet ;alphabet size ;size huffman ;huffman tree ;tree constructed ;constructed linear ;linear alphabet ;alphabet symbols ;symbols sorted ;sorted frequencies ;frequencies huffman ;huffman coding ;coding tree ;tree algorithm ;algorithm codewords ;codewords symbols ;symbols efficiency ;efficiency class ;class function ;function alphabet ;alphabet size ;size generate ;generate huffman ;huffman code ;code explicit ;explicit generation ;generation huffman ;huffman coding ;coding tree ;tree write ;write constructs ;constructs huffman ;huffman code ;code english ;english text ;text encode ;encode write ;write decoding ;decoding english ;english text ;text encoded ;encoded huffman ;huffman code ;code experiment ;experiment encoding ;encoding range ;range typical ;typical compres ;compres sion ;sion ratios ;ratios huffman ;huffman encoding ;encoding english ;english texts ;texts words ;words experiment ;experiment encoding ;encoding sensitive ;sensitive compression ;compression ratios ;ratios standard ;standard estimates ;estimates frequencies ;frequencies actual ;actual frequencies ;frequencies symbol ;symbol occurrences ;occurrences english ;english texts ;texts card ;card guessing ;guessing design ;design strategy ;strategy minimizes ;minimizes expected ;expected questions ;questions asked ;asked game ;game gar ;gar deck ;deck cards ;cards consists ;consists ace ;ace spades ;spades deuces ;deuces spades ;spades threes ;threes nines ;nines making ;making cards ;cards draws ;draws card ;card shuffled ;shuffled deck ;deck questions ;questions answerable ;answerable summary ;summary greedy ;greedy technique ;technique suggests ;suggests constructing ;constructing solution ;solution optimization ;optimization problem ;problem sequence ;sequence steps ;steps expanding ;expanding partially ;partially constructed ;constructed solution ;solution obtained ;obtained solution ;solution problem ;problem reached ;reached choice ;choice feasible ;feasible locally ;locally optimal ;optimal irrevocable ;irrevocable prim ;prim algorithm ;algorithm greedy ;greedy algorithm ;algorithm constructing ;constructing minimum ;minimum spanning ;spanning tree ;tree weighted ;weighted connected ;connected graph ;graph works ;works attaching ;attaching previously ;previously constructed ;constructed subtree ;subtree vertex ;vertex closest ;closest vertices ;vertices tree ;tree kruskal ;kruskal algorithm ;algorithm greedy ;greedy algorithm ;algorithm minimum ;minimum spanning ;spanning tree ;tree problem ;problem constructs ;constructs minimum ;minimum spanning ;spanning tree ;tree selecting ;selecting edges ;edges nondecreasing ;nondecreasing weights ;weights provided ;provided inclusion ;inclusion create ;create checking ;checking condition ;condition efficiently ;efficiently requires ;requires application ;application called ;called union ;union algorithms ;algorithms dijkstra ;dijkstra algorithm ;algorithm solves ;solves single ;single source ;source shortest ;shortest path ;path problem ;problem finding ;finding shortest ;shortest paths ;paths vertex ;vertex source ;source vertices ;vertices weighted ;weighted graph ;graph digraph ;digraph works ;works prim ;prim algorithm ;algorithm compares ;compares path ;path lengths ;lengths edge ;edge lengths ;lengths dijkstra ;dijkstra algorithm ;algorithm yields ;yields solution ;solution graph ;graph nonnegative ;nonnegative weights ;weights huffman ;huffman tree ;tree binary ;binary tree ;tree minimizes ;minimizes weighted ;weighted path ;path length ;length root ;root leaves ;leaves predefined ;predefined weights ;weights important ;important application ;application huffman ;huffman trees ;trees huffman ;huffman codes ;codes huffman ;huffman code ;code optimal ;optimal prefix ;prefix free ;free variable ;variable length ;length encoding ;encoding scheme ;scheme assigns ;assigns bit ;bit strings ;strings symbols ;symbols based ;based frequencies ;frequencies text ;text accomplished ;accomplished greedy ;greedy construction ;construction binary ;binary tree ;tree leaves ;leaves represent ;represent alphabet ;alphabet symbols ;symbols edges ;edges labeled ;speaking express ;express numbers ;numbers express ;express numbers ;numbers knowledge ;knowledge meagre ;meagre unsatisfactory ;unsatisfactory kind ;kind beginning ;beginning knowledge ;knowledge scarcely ;scarcely thoughts ;thoughts advanced ;advanced stage ;stage science ;science lord ;lord kelvin ;kelvin counted ;counted counts ;counts counted ;counted albert ;albert einstein ;einstein chapter ;chapter devoted ;devoted analysis ;analysis algorithms ;algorithms american ;american heritage ;heritage dic ;dic tionary ;tionary defines ;defines analysis ;analysis separation ;separation intellectual ;intellectual substantial ;substantial constituent ;constituent parts ;parts individual ;individual study ;study prin ;prin cipal ;cipal dimensions ;dimensions algorithm ;algorithm pointed ;pointed section ;section legitimate ;legitimate desirable ;desirable subject ;subject study ;study term ;term analysis ;analysis algorithms ;algorithms narrower ;narrower technical ;technical sense ;sense investigation ;investigation algorithm ;algorithm efficiency ;efficiency respect ;respect resources ;resources running ;running memory ;memory space ;space emphasis ;emphasis efficiency ;efficiency easy ;easy dimensions ;dimensions simplicity ;simplicity gen ;gen erality ;erality efficiency ;efficiency studied ;studied precise ;precise quantitative ;quantitative terms ;terms case ;case speed ;speed memory ;memory today ;today computers ;computers efficiency ;efficiency considerations ;considerations primary ;primary importance ;importance practical ;practical view ;view chapter ;chapter limit ;limit discussion ;discussion algorithm ;algorithm efficiency ;efficiency general ;general framework ;framework analyzing ;analyzing algorithm ;algorithm efficiency ;efficiency sec ;sec tion ;tion section ;section arguably ;arguably important ;important chapter ;chapter funda ;funda mental ;mental nature ;nature topic ;topic makes ;makes important ;important sections ;sections entire ;entire section ;section notations ;notations big ;big omega ;omega big ;big theta ;theta borrowed ;borrowed mathematics ;mathematics notations ;notations language ;language discussing ;discussing efficiency ;efficiency algorithms ;algorithms section ;section general ;general framework ;framework outlined ;outlined section ;section systematically ;systematically applied ;applied analyzing ;analyzing efficiency ;efficiency nonrecursive ;nonrecursive algorithms ;algorithms main ;main tool ;tool analysis ;analysis setting ;setting sum ;sum representing ;representing algorithm ;algorithm running ;running simplifying ;simplifying sum ;sum standard ;standard sum ;sum manipulation ;manipulation techniques ;techniques section ;section general ;general framework ;framework outlined ;outlined section ;section systematically ;systematically applied ;applied analyzing ;analyzing efficiency ;efficiency recursive ;recursive algorithms ;algorithms main ;main tool ;tool summation ;summation special ;special kind ;kind equation ;equation called ;called recurrence ;recurrence relation ;relation recurrence ;recurrence relations ;relations set ;set method ;method solving ;solving illustrate ;illustrate analysis ;analysis framework ;framework methods ;methods appli ;appli cations ;cations variety ;variety examples ;examples sections ;sections chapter ;chapter section ;section devoted ;devoted fibonacci ;fibonacci numbers ;numbers discov ;discov ered ;ered years ;years ago ;ago remarkable ;remarkable sequence ;sequence appears ;appears variety ;variety applications ;applications science ;science discussion ;discussion fibonacci ;fibonacci sequence ;sequence serves ;serves natural ;natural vehicle ;vehicle introducing ;introducing important ;important class ;class recurrence ;recurrence rela ;rela tions ;tions solvable ;solvable method ;method section ;section discuss ;discuss algorithms ;algorithms computing ;computing fibonacci ;fibonacci numbers ;numbers sake ;sake general ;general obser ;obser vations ;vations efficiency ;efficiency algorithms ;algorithms methods ;methods analyzing ;analyzing methods ;methods sections ;sections powerful ;powerful technique ;technique analyz ;analyz ing ;ing efficiency ;efficiency algorithms ;algorithms mathematical ;mathematical clarity ;clarity precision ;precision methods ;methods foolproof ;foolproof sections ;sections chapter ;chapter deal ;deal approaches ;approaches empirical ;empirical analysis ;analysis algorithm ;algorithm visualization ;visualization complement ;complement pure ;pure mathematical ;mathematical techniques ;techniques sections ;sections newer ;newer developed ;developed mathematical ;mathematical counterparts ;counterparts proaches ;proaches important ;important role ;role tools ;tools analysis ;analysis algorithm ;algorithm efficiency ;efficiency analysis ;analysis framework ;framework section ;section outline ;outline general ;general framework ;framework analyzing ;analyzing efficiency ;efficiency algo ;algo rithms ;rithms mentioned ;mentioned section ;section kinds ;kinds efficiency ;efficiency space ;space efficiency ;efficiency called ;called complexity ;complexity fast ;fast algorithm ;algorithm runs ;runs space ;space efficiency ;efficiency called ;called space ;space complexity ;complexity refers ;refers memory ;memory units ;units required ;required algorithm ;algorithm dition ;dition space ;space needed ;needed input ;input output ;output early ;early days ;days electronic ;electronic computing ;computing resources ;resources space ;space premium ;premium half ;half century ;century relentless ;relentless technological ;technological innovations ;innovations improved ;improved speed ;speed memory ;memory size ;size orders ;orders magnitude ;magnitude extra ;extra space ;space quired ;quired algorithm ;algorithm typically ;typically caveat ;caveat difference ;difference fast ;fast main ;main memory ;memory slower ;slower secondary ;secondary memory ;memory cache ;cache issue ;issue diminished ;diminished extent ;extent addition ;addition research ;research experience ;experience shown ;shown problems ;problems achieve ;achieve spectacular ;spectacular progress ;progress speed ;speed space ;space established ;established tradition ;tradition algorithm ;algorithm textbooks ;textbooks primarily ;primarily efficiency ;efficiency analytical ;analytical framework ;framework introduced ;introduced applicable ;applicable analyzing ;analyzing space ;space efficiency ;efficiency measuring ;measuring input ;input size ;size obvious ;obvious observation ;observation algorithms ;algorithms run ;run longer ;longer larger ;larger inputs ;inputs takes ;takes longer ;longer sort ;sort larger ;larger arrays ;arrays larger ;larger matrices ;matrices logical ;logical investigate ;investigate algorithm ;algorithm efficiency ;efficiency function ;function parameter ;parameter indicating ;indicating algorithm ;algorithm input ;input size ;size cases ;cases selecting ;selecting parameter ;parameter straightforward ;straightforward size ;size problems ;problems sorting ;sorting searching ;searching finding ;finding smallest ;smallest element ;element problems ;problems dealing ;dealing lists ;lists problem ;problem evaluating ;evaluating polynomial ;polynomial anxn ;anxn degree ;degree polynomial ;polynomial degree ;degree coefficients ;coefficients larger ;larger degree ;degree discussion ;discussion minor ;minor difference ;difference inconsequential ;inconsequential efficiency ;efficiency analysis ;analysis situations ;situations choice ;choice parameter ;parameter indicating ;indicating input ;input size ;size computing ;computing product ;product matrices ;matrices natural ;natural measures ;measures size ;size problem ;problem frequently ;frequently matrix ;matrix natural ;natural contender ;contender total ;total elements ;elements matrices ;matrices multiplied ;multiplied general ;general applicable ;applicable matrices ;matrices necessarily ;necessarily square ;square simple ;simple formula ;formula relating ;relating measures ;measures easily ;easily algorithm ;algorithm efficiency ;efficiency qualitatively ;qualitatively depending ;depending measures ;measures problem ;problem section ;section exercises ;exercises choice ;choice size ;size metric ;metric influenced ;influenced operations ;operations algorithm ;algorithm input ;input size ;size checking ;checking algorithm ;algorithm examines ;examines individual ;individual characters ;characters input ;input size ;size characters ;characters works ;works processing ;processing words ;words input ;input make ;make special ;special measuring ;measuring input ;input size ;size algorithms ;algorithms solving ;solving problems ;problems checking ;checking primality ;primality positive ;positive integer ;integer input ;input magnitude ;magnitude determines ;determines input ;input algorithms ;algorithms require ;require parameter ;parameter size ;size inputs ;inputs vertices ;vertices edges ;edges algorithms ;algorithms graphs ;graphs represented ;represented adjacency ;adjacency lists ;lists size ;size situations ;situations preferable ;preferable size ;size bits ;bits binary ;binary representation ;representation log ;log metric ;metric idea ;idea efficiency ;efficiency algorithms ;algorithms ques ;ques tion ;tion units ;units measuring ;measuring running ;running issue ;issue concerns ;concerns units ;units measuring ;measuring algorithm ;algorithm running ;running simply ;simply standard ;standard unit ;unit measurement ;measurement millisecond ;millisecond running ;running implement ;implement ing ;ing algorithm ;algorithm obvious ;obvious drawbacks ;drawbacks approach ;approach dependence ;dependence speed ;speed dependence ;dependence quality ;quality implementing ;implementing algorithm ;algorithm compiler ;compiler generating ;generating machine ;machine code ;code difficulty ;difficulty clocking ;clocking actual ;actual running ;running pro ;pro gram ;gram algorithm ;algorithm efficiency ;efficiency metric ;metric extraneous ;extraneous factors ;factors approach ;approach times ;times algorithm ;algorithm operations ;operations executed ;executed approach ;approach excessively ;excessively difficult ;difficult unnecessary ;unnecessary thing ;thing important ;important operation ;operation algorithm ;algorithm called ;called basic ;basic operation ;operation contributing ;contributing total ;total running ;running compute ;compute times ;times basic ;basic operation ;operation executed ;executed difficult ;difficult basic ;basic operation ;operation algorithm ;algorithm consuming ;consuming operation ;operation algorithm ;algorithm innermost ;innermost loop ;loop sorting ;sorting algorithms ;algorithms comparing ;comparing elements ;elements keys ;keys sorted ;sorted algorithms ;algorithms basic ;basic operation ;operation key ;key comparison ;comparison algorithms ;algorithms mathematical ;mathematical problems ;problems typically ;typically involve ;involve arithmetical ;arithmetical operations ;operations addition ;addition subtraction ;subtraction multiplication ;multiplication division ;division consuming ;consuming operation ;operation division ;division multiplication ;multiplication addition ;addition subtraction ;subtraction considered ;considered established ;established framework ;framework analysis ;analysis algorithm ;algorithm ficiency ;ficiency suggests ;suggests measuring ;measuring counting ;counting times ;times algorithm ;algorithm basic ;basic operation ;operation executed ;executed inputs ;inputs size ;size compute ;compute nonrecursive ;nonrecursive recursive ;recursive algorithms ;algorithms sections ;sections important ;important application ;application cop ;cop execution ;execution algo ;algo rithm ;rithm basic ;basic operation ;operation times ;times operation ;operation executed ;executed algorithm ;algorithm estimate ;estimate computers ;computers multiplication ;multiplication longer ;longer addition ;addition subtraction ;subtraction timing ;timing data ;data provided ;provided kernighan ;kernighan pike ;pike ker ;ker running ;running implementing ;implementing algorithm ;algorithm formula ;formula copc ;copc formula ;formula caution ;caution information ;information operations ;operations basic ;basic fact ;fact computed ;computed approximately ;approximately constant ;constant cop ;cop approximation ;approximation reliability ;reliability easy ;easy assess ;assess extremely ;extremely large ;large small ;small formula ;formula reasonable ;reasonable estimate ;estimate algorithm ;algorithm running ;running makes ;makes questions ;questions faster ;faster algorithm ;algorithm run ;run machine ;machine times ;times faster ;faster times ;times assuming ;assuming longer ;longer algorithm ;algorithm run ;run input ;input size ;size times ;times longer ;longer small ;small values ;values copc ;copc knowing ;knowing cop ;cop neatly ;neatly cancelled ;cancelled ratio ;ratio multiplicative ;multiplicative constant ;constant formula ;formula cancelled ;cancelled reasons ;reasons efficiency ;efficiency analysis ;analysis framework ;framework ignores ;ignores multiplicative ;multiplicative constants ;constants concentrates ;concentrates growth ;growth constant ;constant multiple ;multiple large ;large size ;size inputs ;inputs orders ;orders growth ;growth emphasis ;emphasis growth ;growth large ;large input ;input sizes ;sizes difference ;difference running ;running times ;times small ;small inputs ;inputs distinguishes ;distinguishes efficient ;efficient algorithms ;algorithms inefficient ;inefficient compute ;compute greatest ;greatest common ;common divisor ;divisor small ;small numbers ;numbers immediately ;immediately efficient ;efficient euclid ;euclid algorithm ;algorithm compared ;compared algorithms ;algorithms discussed ;discussed section ;section faster ;faster greatest ;greatest common ;common divisor ;divisor large ;large numbers ;numbers difference ;difference algorithm ;algorithm efficiencies ;efficiencies important ;important large ;large values ;values function ;function growth ;growth counts ;counts table ;table values ;values functions ;functions important ;important analysis ;analysis algorithms ;algorithms magnitude ;magnitude numbers ;numbers table ;table profound ;profound significance ;significance analysis ;analysis algorithms ;algorithms function ;function growing ;growing slowest ;slowest logarithmic ;logarithmic function ;function grows ;grows slowly ;slowly fact ;fact table ;table values ;values approximate ;approximate functions ;functions important ;important analysis ;analysis algorithms ;algorithms log ;log implementing ;implementing algorithm ;algorithm logarithmic ;logarithmic basic ;basic operation ;operation run ;run practi ;practi cally ;cally instantaneously ;instantaneously inputs ;inputs realistic ;realistic sizes ;sizes specific ;specific values ;values logarithm ;logarithm base ;base formula ;formula loga ;loga logb ;logb makes ;makes base ;base leaving ;leaving logarithmic ;logarithmic multiplicative ;multiplicative constant ;constant omit ;omit logarithm ;logarithm base ;base write ;write simply ;simply log ;log situations ;situations interested ;interested function ;function growth ;growth multiplicative ;multiplicative constant ;constant spectrum ;spectrum exponential ;exponential function ;function factorial ;factorial function ;function functions ;functions grow ;grow fast ;fast values ;values astronomically ;astronomically large ;large small ;small values ;values reason ;reason values ;values table ;table years ;years making ;making operations ;operations execute ;execute operations ;operations incomparably ;incomparably faster ;faster execute ;execute operations ;operations longer ;longer years ;years estimated ;estimated age ;age planet ;planet earth ;earth tremendous ;tremendous difference ;difference orders ;orders growth ;growth functions ;functions referred ;referred exponential ;exponential growth ;growth functions ;functions simply ;simply exponential ;exponential fact ;fact strictly ;strictly speaking ;speaking referred ;referred line ;line important ;important algorithms ;algorithms require ;require exponential ;exponential operations ;operations practical ;practical solving ;solving problems ;problems small ;small sizes ;sizes qualitative ;qualitative difference ;difference orders ;orders growth ;growth functions ;functions table ;table react ;react twofold ;twofold argument ;argument function ;function log ;log increases ;increases log ;log linear ;linear function ;function increases ;increases twofold ;twofold linearithmic ;linearithmic function ;function log ;log increases ;increases slightly ;slightly twofold ;twofold quadratic ;quadratic function ;function cubic ;cubic function ;function fourfold ;fourfold eightfold ;eightfold squared ;squared increases ;increases mathematics ;mathematics refuses ;refuses cooperate ;cooperate neat ;neat worst ;worst case ;case average ;average case ;case efficiencies ;efficiencies beginning ;beginning section ;section established ;established reasonable ;reasonable algorithm ;algorithm efficiency ;efficiency function ;function parameter ;parameter indicating ;indicating size ;size algorithm ;algorithm input ;input algorithms ;algorithms running ;running depends ;depends input ;input size ;size specifics ;specifics input ;input sequential ;sequential straightforward ;straightforward algorithm ;algorithm searches ;searches item ;item key ;key elements ;elements checking ;checking successive ;successive elements ;elements key ;key exhausted ;exhausted algorithm ;algorithm pseudocode ;pseudocode simplicity ;simplicity implemented ;implemented array ;array assumes ;assumes condition ;condition checked ;checked checks ;checks array ;array index ;index exceed ;exceed upper ;upper bound ;bound fails ;fails algorithm ;algorithm sequentialsearch ;sequentialsearch searches ;searches array ;array sequential ;sequential input ;input array ;array key ;key output ;output index ;index element ;element matches ;matches matching ;matching elements ;elements running ;running algorithm ;algorithm size ;size worst ;worst case ;case matching ;matching elements ;elements matching ;matching element ;element algorithm ;algorithm makes ;makes largest ;largest key ;key comparisons ;comparisons inputs ;inputs size ;size cworst ;cworst worst ;worst case ;case efficiency ;efficiency algorithm ;algorithm efficiency ;efficiency worst ;worst case ;case input ;input size ;size input ;input inputs ;inputs size ;size algorithm ;algorithm runs ;runs longest ;longest inputs ;inputs size ;size determine ;determine worst ;worst case ;case efficiency ;efficiency algorithm ;algorithm principle ;principle straightforward ;straightforward analyze ;analyze algorithm ;algorithm kind ;kind inputs ;inputs yield ;yield largest ;largest basic ;basic operation ;operation inputs ;inputs size ;size compute ;compute worst ;worst case ;case cworst ;cworst sequential ;sequential obvious ;obvious methods ;methods handling ;handling trivial ;trivial situations ;situations explained ;explained subsequent ;subsequent sections ;sections chapter ;chapter worst ;worst case ;case analysis ;analysis important ;important information ;information algorithm ;algorithm efficiency ;efficiency bounding ;bounding running ;running words ;words guarantees ;guarantees instance ;instance size ;size running ;running exceed ;exceed cworst ;cworst running ;running worst ;worst case ;case inputs ;inputs case ;case efficiency ;efficiency algorithm ;algorithm efficiency ;efficiency case ;case input ;input size ;size input ;input inputs ;inputs size ;size algorithm ;algorithm runs ;runs fastest ;fastest inputs ;inputs size ;size analyze ;analyze case ;case efficiency ;efficiency determine ;determine kind ;kind inputs ;inputs smallest ;smallest inputs ;inputs size ;size case ;case smallest ;smallest input ;input means ;means input ;input size ;size algorithm ;algorithm runs ;runs fastest ;fastest ascertain ;ascertain convenient ;convenient inputs ;inputs case ;case inputs ;inputs sequential ;sequential lists ;lists size ;size element ;element equal ;equal key ;key cbest ;cbest algorithm ;algorithm analysis ;analysis case ;case efficiency ;efficiency important ;important worst ;worst case ;case efficiency ;efficiency completely ;completely useless ;useless case ;case inputs ;inputs advantage ;advantage fact ;fact algorithms ;algorithms good ;good case ;case performance ;performance extends ;extends types ;types inputs ;inputs case ;case sorting ;sorting algorithm ;algorithm insertion ;insertion sort ;sort case ;case inputs ;inputs sorted ;sorted arrays ;arrays algorithm ;algorithm works ;works fast ;fast case ;case efficiency ;efficiency deteriorates ;deteriorates slightly ;slightly sorted ;sorted arrays ;arrays algorithm ;algorithm method ;method choice ;choice applications ;applications dealing ;dealing sorted ;sorted arrays ;arrays case ;case efficiency ;efficiency algorithm ;algorithm unsatisfactory ;unsatisfactory immediately ;immediately discard ;discard analysis ;analysis discussion ;discussion worst ;worst case ;case analysis ;analysis case ;case counterpart ;counterpart yields ;yields information ;information algorithm ;algorithm behavior ;behavior typical ;typical random ;random input ;input information ;information average ;average case ;case efficiency ;efficiency seeks ;seeks analyze ;analyze algorithm ;algorithm average ;average case ;case efficiency ;efficiency make ;make assumptions ;assumptions inputs ;inputs size ;size sequential ;sequential standard ;standard assumptions ;assumptions probability ;probability successful ;successful equal ;equal probability ;probability occurring ;occurring ith ;ith position ;position assumptions ;assumptions validity ;validity difficult ;difficult verify ;verify reasonableness ;reasonableness average ;average key ;key comparisons ;comparisons cavg ;cavg case ;case successful ;successful probability ;probability occurring ;occurring ith ;ith position ;position comparisons ;comparisons algorithm ;algorithm situation ;situation case ;case unsuccessful ;unsuccessful comparisons ;comparisons probability ;probability cavg ;cavg general ;general formula ;formula yields ;yields reasonable ;reasonable answers ;answers successful ;successful average ;average key ;key comparisons ;comparisons sequential ;sequential algorithm ;algorithm inspect ;inspect average ;average half ;half elements ;elements unsuccessful ;unsuccessful average ;average key ;key comparisons ;comparisons algorithm ;algorithm inspect ;inspect elements ;elements inputs ;inputs elementary ;elementary investigation ;investigation average ;average case ;case efficiency ;efficiency considerably ;considerably difficult ;difficult investigation ;investigation worst ;worst case ;case efficiencies ;efficiencies direct ;direct approach ;approach involves ;involves dividing ;dividing instances ;instances size ;size classes ;classes instance ;instance class ;class times ;times algorithm ;algorithm basic ;basic operation ;operation executed ;executed classes ;classes sequential ;sequential probability ;probability distribution ;distribution inputs ;inputs obtained ;obtained assumed ;assumed expected ;expected basic ;basic operation ;operation technical ;technical implementation ;implementation rarely ;rarely easy ;easy probabilistic ;probabilistic assumptions ;assumptions underlying ;underlying case ;case difficult ;difficult verify ;verify quest ;quest simplicity ;simplicity quote ;quote results ;results average ;average case ;case efficiency ;efficiency algorithms ;algorithms discussion ;discussion interested ;interested derivations ;derivations results ;results consult ;consult books ;books baa ;baa sed ;sed knui ;knui knuii ;knuii knuiii ;knuiii preceding ;preceding discussion ;discussion average ;average case ;case efficiency ;efficiency obtained ;obtained taking ;taking average ;average worst ;worst case ;case efficiencies ;efficiencies average ;average occasionally ;occasionally coincide ;coincide average ;average case ;case cost ;cost legitimate ;legitimate performing ;performing average ;average case ;case analysis ;analysis average ;average case ;case efficiency ;efficiency information ;information unequivocally ;unequivocally important ;important algorithms ;algorithms averagecase ;averagecase efficiency ;efficiency overly ;overly pessimistic ;pessimistic worst ;worst case ;case efficiency ;efficiency lead ;lead average ;average case ;case analysis ;analysis scientists ;scientists missed ;missed important ;important algorithms ;algorithms efficiency ;efficiency called ;called amortized ;amortized efficiency ;efficiency applies ;applies single ;single run ;run algorithm ;algorithm sequence ;sequence operations ;operations performed ;performed data ;data structure ;structure turns ;turns situations ;situations single ;single operation ;operation expensive ;expensive total ;total entire ;entire sequence ;sequence operations ;operations significantly ;significantly worst ;worst case ;case efficiency ;efficiency single ;single operation ;operation multiplied ;multiplied amortize ;amortize high ;high cost ;cost worst ;worst case ;case occurrence ;occurrence entire ;entire sequence ;sequence manner ;manner similar ;similar business ;business amortize ;amortize cost ;cost expensive ;expensive item ;item years ;years item ;item productive ;productive life ;life sophisticated ;sophisticated approach ;approach discovered ;discovered american ;american scientist ;scientist robert ;robert tarjan ;tarjan applications ;applications developing ;developing interesting ;interesting variation ;variation classic ;classic binary ;binary tree ;tree tar ;tar readable ;readable nontechnical ;nontechnical discussion ;discussion tar ;tar technical ;technical account ;account usefulness ;usefulness amortized ;amortized efficiency ;efficiency section ;section algorithms ;algorithms finding ;finding unions ;unions disjoint ;disjoint sets ;sets recapitulation ;recapitulation analysis ;analysis framework ;framework leave ;leave section ;section summarize ;summarize main ;main points ;points framework ;framework outlined ;outlined space ;space efficiencies ;efficiencies measured ;measured functions ;functions algorithm ;algorithm input ;input size ;size efficiency ;efficiency measured ;measured counting ;counting times ;times algorithm ;algorithm basic ;basic operation ;operation executed ;executed space ;space efficiency ;efficiency measured ;measured counting ;counting extra ;extra memory ;memory units ;units consumed ;consumed algorithm ;algorithm efficiencies ;efficiencies algorithms ;algorithms differ ;differ significantly ;significantly inputs ;inputs size ;size algorithms ;algorithms distinguish ;distinguish worst ;worst case ;case average ;average case ;case efficiencies ;efficiencies framework ;framework primary ;primary lies ;lies growth ;growth algorithm ;algorithm running ;running extra ;extra memory ;memory units ;units consumed ;consumed input ;input size ;size infinity ;infinity section ;section formal ;formal means ;means investigate ;investigate orders ;orders growth ;growth sections ;sections discuss ;discuss methods ;methods investigating ;investigating nonrecursive ;nonrecursive recursive ;recursive algorithms ;algorithms analysis ;analysis framework ;framework outlined ;outlined applied ;applied investigating ;investigating efficiency ;efficiency specific ;specific algorithms ;algorithms encounter ;encounter examples ;examples rest ;rest exercises ;exercises algorithms ;algorithms natural ;natural size ;size metric ;metric inputs ;inputs basic ;basic operation ;operation iii ;iii basic ;basic operation ;operation inputs ;inputs size ;size computing ;computing sum ;sum numbers ;numbers computing ;computing finding ;finding largest ;largest element ;element numbers ;numbers euclid ;euclid algorithm ;algorithm sieve ;sieve eratosthenes ;eratosthenes pen ;pen pencil ;pencil algorithm ;algorithm multiplying ;multiplying digit ;digit decimal ;decimal integers ;integers definition ;definition based ;based algorithm ;algorithm adding ;adding matrices ;matrices basic ;basic operation ;operation times ;times performed ;performed function ;function matrix ;matrix function ;function total ;total elements ;elements input ;input matrices ;matrices questions ;questions definition ;definition based ;based algorithm ;algorithm matrix ;matrix multiplication ;multiplication variation ;variation sequential ;sequential scans ;scans occurrences ;occurrences key ;key efficiency ;efficiency differ ;differ efficiency ;efficiency classic ;classic sequential ;sequential glove ;glove selection ;selection gloves ;gloves drawer ;drawer pairs ;pairs red ;red gloves ;gloves pairs ;pairs yellow ;yellow pairs ;pairs green ;green select ;select gloves ;gloves dark ;dark selection ;selection smallest ;smallest gloves ;gloves select ;select matching ;matching pair ;pair case ;case worst ;worst case ;case missing ;missing socks ;socks washing ;washing distinct ;distinct pairs ;pairs socks ;socks missing ;missing largest ;largest pairs ;pairs remaining ;remaining left ;left pairs ;pairs case ;case scenario ;scenario pairs ;pairs worst ;worst case ;case assuming ;assuming probability ;probability disappearance ;disappearance socks ;socks probability ;probability case ;case scenario ;scenario probability ;probability worst ;worst case ;case scenario ;scenario pairs ;pairs average ;average case ;case prove ;prove formula ;formula bits ;bits binary ;binary representation ;representation positive ;positive decimal ;decimal integer ;integer prove ;prove alternative ;alternative formula ;formula bits ;bits binary ;binary repre ;repre sentation ;sentation positive ;positive integer ;integer log ;log analogous ;analogous formulas ;formulas decimal ;decimal digits ;digits accepted ;accepted analysis ;analysis framework ;framework binary ;binary decimal ;decimal digits ;digits measuring ;measuring size ;size sorting ;sorting algorithm ;algorithm augmented ;augmented make ;make case ;case key ;key comparisons ;comparisons equal ;equal size ;size worthwhile ;worthwhile addition ;addition sorting ;sorting algorithm ;algorithm gaussian ;gaussian elimination ;elimination classic ;classic algorithm ;algorithm solving ;solving systems ;systems linear ;linear equations ;equations unknowns ;unknowns requires ;requires multiplications ;multiplications algorithm ;algorithm basic ;basic operation ;operation longer ;longer gaussian ;gaussian elimination ;elimination equations ;equations buying ;buying times ;times faster ;faster factor ;factor faster ;faster sizes ;sizes systems ;systems solvable ;solvable functions ;functions function ;function argument ;argument increased ;increased fourfold ;fourfold log ;log pairs ;pairs functions ;functions function ;function pairs ;pairs lower ;lower higher ;higher growth ;growth constant ;constant multiple ;multiple function ;function log ;log invention ;invention chess ;chess legend ;legend game ;game chess ;chess invented ;invented centuries ;centuries ago ;ago northwestern ;northwestern india ;india sage ;sage invention ;invention king ;king game ;game offered ;offered inventor ;inventor reward ;reward wanted ;wanted inventor ;inventor asked ;asked grain ;grain obtained ;obtained single ;single grain ;grain wheat ;wheat square ;square chessboard ;chessboard fourth ;fourth squares ;squares filled ;filled grain ;grain doubling ;doubling grains ;grains square ;square chessboard ;chessboard inventor ;inventor asked ;asked adding ;adding grains ;grains asymptotic ;asymptotic notations ;notations basic ;basic efficiency ;efficiency classes ;classes pointed ;pointed previous ;previous section ;section efficiency ;efficiency analysis ;analysis framework ;framework centrates ;centrates growth ;growth algorithm ;algorithm basic ;basic operation ;operation principal ;principal indicator ;indicator algorithm ;algorithm efficiency ;efficiency rank ;rank orders ;orders growth ;growth scientists ;scientists notations ;notations big ;big omega ;omega big ;big theta ;theta notations ;notations informally ;informally sev ;sev eral ;eral examples ;examples formal ;formal definitions ;definitions discussion ;discussion nonnegative ;nonnegative functions ;functions defined ;defined set ;set natural ;natural numbers ;numbers context ;context interested ;interested algorithm ;algorithm running ;running basic ;basic operation ;operation simple ;simple function ;function informal ;informal introduction ;introduction informally ;informally set ;set functions ;functions lower ;lower growth ;growth constant ;constant multiple ;multiple infinity ;infinity examples ;examples assertions ;assertions true ;true functions ;functions linear ;linear lower ;lower growth ;growth quadratic ;quadratic growth ;growth functions ;functions cubic ;cubic higher ;higher growth ;growth fourth ;fourth degree ;degree polynomial ;polynomial notation ;notation stands ;stands set ;set functions ;functions higher ;higher growth ;growth constant ;constant multiple ;multiple infinity ;infinity finally ;finally set ;set functions ;functions growth ;growth constant ;constant multiple ;multiple infinity ;infinity quadratic ;quadratic function ;function infinitely ;infinitely log ;log informal ;informal introduction ;introduction comfortable ;comfortable idea ;idea asymptotic ;asymptotic notations ;notations formal ;formal definitions ;definitions notation ;notation definition ;definition function ;function denoted ;denoted bounded ;bounded constant ;constant multiple ;multiple large ;large positive ;positive constant ;constant nonnegative ;nonnegative integer ;integer definition ;definition illustrated ;illustrated figure ;figure sake ;sake visual ;visual clarity ;clarity extended ;extended real ;real formally ;formally prove ;prove assertions ;assertions introduction ;introduction values ;values constants ;constants required ;required definition ;definition lot ;lot freedom ;freedom choosing ;choosing specific ;specific values ;values constants ;constants reason ;reason proof ;proof figure ;figure big ;big notation ;notation figure ;figure big ;big omega ;omega notation ;notation definition ;definition function ;function denoted ;denoted bounded ;bounded positive ;positive constant ;constant multiple ;multiple large ;large positive ;positive constant ;constant nonnegative ;nonnegative integer ;integer definition ;definition illustrated ;illustrated figure ;figure formal ;formal proof ;proof select ;select figure ;figure big ;big theta ;theta notation ;notation definition ;definition function ;function denoted ;denoted bounded ;bounded positive ;positive constant ;constant multiples ;multiples large ;large positive ;positive constants ;constants nonnegative ;nonnegative integer ;integer definition ;definition illustrated ;illustrated figure ;figure prove ;prove inequality ;inequality upper ;upper bound ;bound prove ;prove left ;left inequality ;inequality lower ;lower bound ;bound select ;select property ;property involving ;involving asymptotic ;asymptotic notations ;notations formal ;formal definitions ;definitions asymptotic ;asymptotic notations ;notations prove ;prove general ;general properties ;properties problem ;problem section ;section exercises ;exercises simple ;simple examples ;examples property ;property analyzing ;analyzing algorithms ;algorithms comprise ;comprise consecutively ;consecutively executed ;executed parts ;parts theorem ;theorem max ;max analogous ;analogous assertions ;assertions true ;true notations ;notations proof ;proof extends ;extends orders ;orders growth ;growth simple ;simple fact ;fact arbitrary ;arbitrary real ;real numbers ;numbers max ;max positive ;positive constant ;constant negative ;negative integer ;integer similarly ;similarly denote ;denote max ;max inequalities ;inequalities adding ;adding yields ;yields max ;max constants ;constants required ;required definition ;definition max ;max property ;property imply ;imply algorithm ;algorithm comprises ;comprises consec ;consec utively ;utively executed ;executed parts ;parts implies ;implies algorithm ;algorithm efficiency ;efficiency deter ;deter mined ;mined higher ;higher growth ;growth efficient ;efficient max ;max array ;array equal ;equal elements ;elements algorithm ;algorithm sort ;sort array ;array applying ;applying sorting ;sorting algorithm ;algorithm scan ;scan sorted ;sorted array ;array consecutive ;consecutive elements ;elements equality ;equality sorting ;sorting algorithm ;algorithm makes ;makes comparisons ;comparisons makes ;makes comparisons ;comparisons efficiency ;efficiency entire ;entire algorithm ;algorithm max ;max limits ;limits comparing ;comparing orders ;orders growth ;growth formal ;formal definitions ;definitions indispensable ;indispensable proving ;proving abstract ;abstract properties ;properties rarely ;rarely comparing ;comparing orders ;orders growth ;growth specific ;specific functions ;functions convenient ;convenient method ;method based ;based computing ;computing limit ;limit ratio ;ratio functions ;functions principal ;principal cases ;cases arise ;arise implies ;implies smaller ;smaller growth ;growth lim ;lim implies ;implies growth ;growth implies ;implies larger ;larger growth ;growth cases ;cases case ;case means ;means limit ;limit based ;based approach ;approach convenient ;convenient based ;based definitions ;definitions advantage ;advantage powerful ;powerful calculus ;calculus techniques ;techniques developed ;developed computing ;computing limits ;limits pital ;pital lim ;lim stirling ;stirling formula ;formula large ;large values ;values examples ;examples limit ;limit based ;based approach ;approach comparing ;comparing orders ;orders growth ;growth functions ;functions orders ;orders growth ;growth examples ;examples beginning ;beginning section ;section illustrate ;illustrate definitions ;definitions lim ;lim limit ;limit equal ;equal positive ;positive constant ;constant functions ;functions growth ;growth symbolically ;symbolically orders ;orders growth ;growth log ;log exam ;exam ple ;ple immediately ;immediately obvious ;obvious log ;log lim ;lim log ;log lim ;lim limit ;limit equal ;equal log ;log smaller ;smaller growth ;growth limn ;limn log ;log called ;called notation ;notation log ;log big ;big notation ;notation rarely ;rarely analysis ;analysis algorithms ;algorithms fourth ;fourth case ;case limit ;limit rarely ;rarely actual ;actual practice ;practice analyzing ;analyzing algorithms ;algorithms possibility ;possibility makes ;makes limit ;limit based ;based approach ;approach comparing ;comparing orders ;orders growth ;growth general ;general based ;based definitions ;definitions orders ;orders growth ;growth discussed ;discussed informally ;informally section ;section taking ;taking advantage ;advantage stirling ;stirling formula ;formula lim ;lim nen ;nen grows ;grows fast ;fast grows ;grows faster ;faster write ;write symbolically ;symbolically big ;big omega ;omega notation ;notation preclude ;preclude possibility ;possibility growth ;growth limit ;limit computed ;computed basic ;basic efficiency ;efficiency classes ;classes efficiency ;efficiency analysis ;analysis framework ;framework puts ;puts functions ;functions orders ;orders growth ;growth differ ;differ constant ;constant multiple ;multiple infinitely ;infinitely classes ;classes exponential ;exponential functions ;functions orders ;orders growth ;growth values ;values base ;base efficiencies ;efficiencies large ;large algorithms ;algorithms fall ;fall classes ;classes listed ;listed table ;table increasing ;increasing orders ;orders growth ;growth names ;names comments ;comments classifying ;classifying algorithms ;algorithms asymptotic ;asymptotic effi ;effi ciency ;ciency practical ;practical values ;values multiplicative ;multiplicative constants ;constants left ;left unspecified ;unspecified leaves ;leaves possibility ;possibility algorithm ;algorithm worse ;worse efficiency ;efficiency class ;class running ;running faster ;faster algorithm ;algorithm efficiency ;efficiency class ;class inputs ;inputs realistic ;realistic sizes ;sizes running ;running algorithm ;algorithm running ;running cubic ;cubic algorithm ;algorithm outperform ;outperform quadratic ;quadratic algorithm ;algorithm exceeds ;exceeds anomalies ;anomalies fortunately ;fortunately multiplicative ;multiplicative constants ;constants differ ;differ drastically ;drastically algorithm ;algorithm asymptotic ;asymptotic efficiency ;efficiency class ;class outperform ;outperform algorithm ;algorithm worse ;worse class ;class moderately ;moderately sized ;sized inputs ;inputs observation ;observation true ;true algorithm ;algorithm exponential ;exponential running ;running exponential ;exponential worse ;worse algorithm ;algorithm exercises ;exercises notation ;notation efficiency ;efficiency class ;class sequential ;sequential section ;section worst ;worst case ;case average ;average case ;case informal ;informal definitions ;definitions determine ;determine ing ;ing assertions ;assertions true ;true false ;false table ;table basic ;basic asymptotic ;asymptotic efficiency ;efficiency classes ;classes class ;class comments ;comments constant ;constant short ;short case ;case efficiencies ;efficiencies reasonable ;reasonable examples ;examples algorithm ;algorithm running ;running typically ;typically infinity ;infinity input ;input size ;size grows ;grows infinitely ;infinitely large ;large log ;log logarithmic ;logarithmic typically ;typically result ;result cutting ;cutting problem ;problem size ;size constant ;constant factor ;factor iteration ;iteration algorithm ;algorithm section ;section logarithmic ;logarithmic algorithm ;algorithm account ;account input ;input fixed ;fixed fraction ;fraction algorithm ;algorithm linear ;linear running ;running linear ;linear algorithms ;algorithms scan ;scan size ;size sequential ;sequential class ;class log ;log linearithmic ;linearithmic conquer ;conquer algorithms ;algorithms chapter ;chapter mergesort ;mergesort quicksort ;quicksort average ;average case ;case fall ;fall category ;category quadratic ;quadratic typically ;typically characterizes ;characterizes efficiency ;efficiency algorithms ;algorithms embedded ;embedded loops ;loops section ;section elemen ;elemen tary ;tary sorting ;sorting algorithms ;algorithms operations ;operations matrices ;matrices standard ;standard examples ;examples cubic ;cubic typically ;typically characterizes ;characterizes efficiency ;efficiency algorithms ;algorithms embedded ;embedded loops ;loops section ;section nontrivial ;nontrivial algorithms ;algorithms linear ;linear algebra ;algebra fall ;fall class ;class exponential ;exponential typical ;typical algorithms ;algorithms generate ;generate subsets ;subsets element ;element set ;set term ;term exponential ;exponential broader ;broader sense ;sense larger ;larger orders ;orders growth ;growth factorial ;factorial typical ;typical algorithms ;algorithms generate ;generate permutations ;permutations element ;element set ;set functions ;functions class ;class function ;function belongs ;belongs simplest ;simplest answers ;answers prove ;prove assertions ;assertions log ;log table ;table values ;values functions ;functions arise ;arise analysis ;analysis algorithms ;algorithms values ;values functions ;functions log ;log listed ;listed increasing ;increasing growth ;growth values ;values prove ;prove fact ;fact mathematical ;mathematical certainty ;certainty prove ;prove functions ;functions listed ;listed increasing ;increasing growth ;growth functions ;functions growth ;growth lowest ;lowest highest ;highest prove ;prove polynomial ;polynomial degree ;degree aknk ;aknk belongs ;belongs prove ;prove exponential ;exponential functions ;functions orders ;orders growth ;growth values ;values base ;base prove ;prove assertions ;assertions definitions ;definitions notations ;notations volved ;volved disprove ;disprove giving ;giving specific ;specific counterexample ;counterexample nonnegative ;nonnegative functions ;functions defined ;defined set ;set nonnegative ;nonnegative integers ;integers prove ;prove section ;section theorem ;theorem notation ;notation mentioned ;mentioned section ;section elements ;elements array ;array distinct ;distinct algorithm ;algorithm based ;based array ;array presorting ;presorting algorithm ;algorithm efficiency ;efficiency log ;log efficiency ;efficiency class ;class entire ;entire algorithm ;algorithm sorting ;sorting algorithm ;algorithm presorting ;presorting extra ;extra array ;array size ;size space ;space efficiency ;efficiency class ;class entire ;entire algorithm ;algorithm range ;range finite ;finite nonempty ;nonempty set ;set real ;real numbers ;numbers defined ;defined differ ;differ ence ;ence largest ;largest smallest ;smallest elements ;elements representation ;representation english ;english algorithm ;algorithm compute ;compute range ;range indi ;indi cate ;cate efficiency ;efficiency classes ;classes algorithms ;algorithms notation ;notation unsorted ;unsorted array ;array sorted ;sorted array ;array sorted ;sorted singly ;singly linked ;linked binary ;binary tree ;tree lighter ;lighter heavier ;heavier identical ;identical coins ;coins pan ;pan scale ;scale weights ;weights coins ;coins fake ;fake lighter ;lighter heavier ;heavier genuine ;genuine coins ;coins design ;design algorithm ;algorithm determine ;determine fake ;fake coin ;coin lighter ;lighter heavier ;heavier door ;door wall ;wall facing ;facing wall ;wall stretches ;stretches infinitely ;infinitely direc ;direc tions ;tions door ;door wall ;wall direction ;direction door ;door algorithm ;algorithm enables ;enables door ;door walking ;walking steps ;steps unknown ;unknown steps ;steps initial ;initial position ;position door ;door par ;par mathematical ;mathematical analysis ;analysis nonrecursive ;nonrecursive algorithms ;algorithms section ;section systematically ;systematically apply ;apply general ;general framework ;framework outlined ;outlined section ;section analyzing ;analyzing efficiency ;efficiency nonrecursive ;nonrecursive algorithms ;algorithms simple ;simple demonstrates ;demonstrates principal ;principal steps ;steps typically ;typically analyzing ;analyzing algorithms ;algorithms problem ;problem finding ;finding largest ;largest element ;element numbers ;numbers simplicity ;simplicity assume ;assume implemented ;implemented array ;array pseudocode ;pseudocode standard ;standard algorithm ;algorithm solving ;solving problem ;problem algorithm ;algorithm maxelement ;maxelement determines ;determines largest ;largest element ;element array ;array input ;input array ;array real ;real numbers ;numbers output ;output largest ;largest element ;element maxval ;maxval obvious ;obvious input ;input size ;size elements ;elements array ;array operations ;operations executed ;executed algorithm ;algorithm loop ;loop operations ;operations loop ;loop body ;body comparison ;comparison maxval ;maxval assignment ;assignment maxval ;maxval operations ;operations basic ;basic comparison ;comparison executed ;executed repetition ;repetition loop ;loop assignment ;assignment comparison ;comparison algorithm ;algorithm basic ;basic operation ;operation comparisons ;comparisons arrays ;arrays size ;size terms ;terms metric ;metric distinguish ;distinguish worst ;worst average ;average cases ;cases denote ;denote times ;times comparison ;comparison executed ;executed formula ;formula expressing ;expressing function ;function size ;size algorithm ;algorithm makes ;makes comparison ;comparison execution ;execution loop ;loop repeated ;repeated loop ;loop variable ;variable bounds ;bounds inclusive ;inclusive sum ;sum easy ;easy sum ;sum compute ;compute repeated ;repeated times ;times general ;general analyzing ;analyzing nonrecursive ;nonrecursive algorithms ;algorithms general ;general analyzing ;analyzing efficiency ;efficiency nonrecursive ;nonrecursive algorithms ;algorithms parameter ;parameter parameters ;parameters indicating ;indicating input ;input size ;size algorithm ;algorithm basic ;basic operation ;operation located ;located loop ;loop times ;times basic ;basic operation ;operation executed ;executed depends ;depends size ;size input ;input depends ;depends additional ;additional property ;property worst ;worst case ;case average ;average case ;case efficiencies ;efficiencies investigated ;investigated separately ;separately set ;set sum ;sum expressing ;expressing times ;times algorithm ;algorithm basic ;basic operation ;operation executed ;executed standard ;standard formulas ;formulas rules ;rules sum ;sum manipulation ;manipulation closed ;closed formula ;formula establish ;establish growth ;growth proceeding ;proceeding examples ;examples review ;review appen ;appen dix ;dix summation ;summation formulas ;formulas rules ;rules analysis ;analysis algorithms ;algorithms frequently ;frequently basic ;basic rules ;rules sum ;sum manipulation ;manipulation cai ;cai analysis ;analysis nonrecursive ;nonrecursive algorithm ;algorithm requires ;requires setting ;setting sum ;sum recurrence ;recurrence relation ;relation times ;times basic ;basic operation ;operation executed ;executed recurrence ;recurrence relations ;relations typical ;typical analyzing ;analyzing recursive ;recursive algorithms ;algorithms section ;section summation ;summation formulas ;formulas lower ;lower upper ;upper integer ;integer limits ;limits formula ;formula special ;special case ;case formula ;formula element ;element uniqueness ;uniqueness problem ;problem elements ;elements array ;array elements ;elements distinct ;distinct problem ;problem solved ;solved straightforward ;straightforward algorithm ;algorithm uniqueelements ;uniqueelements determines ;determines elements ;elements array ;array distinct ;distinct input ;input array ;array output ;output returns ;returns true ;true elements ;elements distinct ;distinct false ;false true ;true natural ;natural input ;input size ;size elements ;elements array ;array innermost ;innermost loop ;loop single ;single operation ;operation comparison ;comparison elements ;elements algorithm ;algorithm basic ;basic operation ;operation element ;element comparisons ;comparisons depends ;depends equal ;equal elements ;elements array ;array positions ;positions occupy ;occupy limit ;limit investigation ;investigation worst ;worst case ;case definition ;definition worst ;worst case ;case input ;input array ;array element ;element comparisons ;comparisons cworst ;cworst largest ;largest arrays ;arrays size ;size inspection ;inspection innermost ;innermost loop ;loop reveals ;reveals kinds ;kinds worst ;worst case ;case inputs ;inputs algorithm ;algorithm exit ;exit loop ;loop prematurely ;prematurely arrays ;arrays equal ;equal elements ;elements arrays ;arrays elements ;elements pair ;pair equal ;equal elements ;elements inputs ;inputs comparison ;comparison repetition ;repetition innermost ;innermost loop ;loop variable ;variable limits ;limits repeated ;repeated outer ;outer loop ;loop variable ;variable limits ;limits cworst ;cworst computed ;computed sum ;sum faster ;faster equality ;equality obtained ;obtained applying ;applying summation ;summation formula ;formula result ;result perfectly ;perfectly predictable ;predictable worst ;worst case ;case algorithm ;algorithm distinct ;distinct pairs ;pairs elements ;elements matrices ;matrices efficiency ;efficiency definition ;definition based ;based algorithm ;algorithm computing ;computing product ;product definition ;definition matrix ;matrix elements ;elements computed ;computed scalar ;scalar dot ;dot products ;products rows ;rows matrix ;matrix columns ;columns matrix ;matrix row ;row col ;col pair ;pair indices ;indices algorithm ;algorithm matrixmultiplication ;matrixmultiplication multiplies ;multiplies square ;square matrices ;matrices definition ;definition based ;based algorithm ;algorithm input ;input matrices ;matrices output ;output matrix ;matrix input ;input size ;size matrix ;matrix arithmetical ;arithmetical operations ;operations innermost ;innermost loop ;loop multiplication ;multiplication addition ;addition principle ;principle designation ;designation algorithm ;algorithm basic ;basic operation ;operation choose ;choose repetition ;repetition innermost ;innermost loop ;loop executed ;executed counting ;counting automatically ;automatically established ;established tradition ;tradition multiplication ;multiplication basic ;basic operation ;operation section ;section set ;set sum ;sum total ;total multiplications ;multiplications executed ;executed algorithm ;algorithm depends ;depends size ;size input ;input matrices ;matrices investigate ;investigate worst ;worst case ;case average ;average case ;case efficiencies ;efficiencies separately ;separately multiplication ;multiplication executed ;executed repetition ;repetition algorithm ;algorithm innermost ;innermost loop ;loop governed ;governed variable ;variable ranging ;ranging lower ;lower bound ;bound upper ;upper bound ;bound multiplications ;multiplications pair ;pair specific ;specific values ;values variables ;variables total ;total multiplications ;multiplications expressed ;expressed triple ;triple sum ;sum compute ;compute sum ;sum formula ;formula starting ;starting innermost ;innermost sum ;sum equal ;equal simple ;simple result ;result summation ;summation machinations ;machinations algorithm ;algorithm computes ;computes elements ;elements product ;product matrix ;matrix product ;product elements ;elements computed ;computed scalar ;scalar dot ;dot product ;product element ;element row ;row matrix ;matrix element ;element column ;column matrix ;matrix takes ;takes multiplications ;multiplications total ;total multiplications ;multiplications kind ;kind reasoning ;reasoning expected ;expected answering ;answering problem ;problem exercises ;exercises estimate ;estimate running ;running algorithm ;algorithm machine ;machine product ;product cmm ;cmm cmn ;cmn multiplication ;multiplication machine ;machine accurate ;accurate estimate ;estimate account ;account spent ;spent additions ;additions cmm ;cmm caa ;caa cmn ;cmn addition ;addition estimates ;estimates differ ;differ multiplicative ;multiplicative constants ;constants growth ;growth erroneous ;erroneous impression ;impression outlined ;outlined succeeds ;succeeds analyzing ;analyzing nonrecursive ;nonrecursive algorithm ;algorithm irregular ;irregular loop ;loop variable ;variable sum ;sum complicated ;complicated analyze ;analyze difficulties ;difficulties intrinsic ;intrinsic average ;average case ;case analysis ;analysis obstacles ;obstacles prove ;prove insur ;insur mountable ;mountable caveats ;caveats simple ;simple nonrecursive ;nonrecursive algorithms ;algorithms subsequent ;subsequent chapters ;chapters algorithm ;algorithm loop ;loop variable ;variable manner ;manner previous ;previous examples ;examples algorithm ;algorithm finds ;finds binary ;binary digits ;digits binary ;binary representation ;representation positive ;positive decimal ;decimal integer ;integer algorithm ;algorithm binary ;binary input ;input positive ;positive decimal ;decimal integer ;integer output ;output binary ;binary digits ;digits binary ;binary representation ;representation frequently ;frequently executed ;executed operation ;operation loop ;loop comparison ;comparison determines ;determines loop ;loop body ;body executed ;executed times ;times comparison ;comparison executed ;executed larger ;larger repetitions ;repetitions loop ;loop body ;body choice ;choice important ;important significant ;significant feature ;feature fact ;fact loop ;loop variable ;variable takes ;takes values ;values lower ;lower upper ;upper limits ;limits alternative ;alternative computing ;computing times ;times loop ;loop executed ;executed halved ;halved repetition ;repetition loop ;loop log ;log exact ;exact formula ;formula times ;times comparison ;comparison executed ;executed log ;log bits ;bits binary ;binary representation ;representation formula ;formula applying ;applying analysis ;analysis technique ;technique based ;based recurrence ;recurrence relations ;relations discuss ;discuss technique ;technique section ;section pertinent ;pertinent analysis ;analysis recursive ;recursive algorithms ;algorithms exercises ;exercises compute ;compute sums ;sums growth ;growth sums ;sums notation ;notation simplest ;simplest function ;function sample ;sample variance ;variance measurements ;measurements computed ;computed divisions ;divisions multiplications ;multiplications additions ;additions subtractions ;subtractions additions ;additions subtractions ;subtractions bunched ;bunched required ;required computing ;computing variance ;variance formulas ;formulas algorithm ;algorithm mystery ;mystery input ;input nonnegative ;nonnegative integer ;integer algorithm ;algorithm compute ;compute basic ;basic operation ;operation times ;times basic ;basic operation ;operation executed ;executed efficiency ;efficiency class ;class algorithm ;algorithm improvement ;improvement algorithm ;algorithm altogether ;altogether efficiency ;efficiency class ;class prove ;prove fact ;fact algorithm ;algorithm secret ;secret input ;input array ;array real ;real numbers ;numbers minval ;minval maxval ;maxval minval ;minval maxval ;maxval minval ;minval questions ;questions problem ;problem algorithm ;algorithm enigma ;enigma input ;input matrix ;matrix real ;real numbers ;numbers false ;false true ;true questions ;questions problem ;problem algorithm ;algorithm implementation ;implementation matrix ;matrix multiplication ;multiplication algorithm ;algorithm ample ;ample reducing ;reducing additions ;additions algorithm ;algorithm effect ;effect algorithm ;algorithm efficiency ;efficiency determine ;determine asymptotic ;asymptotic growth ;growth total ;total times ;times doors ;doors toggled ;toggled locker ;locker doors ;doors puzzle ;puzzle problem ;problem exercises ;exercises prove ;prove formula ;formula mathematical ;mathematical induction ;induction insight ;insight year ;year school ;school boy ;boy named ;named carl ;carl friedrich ;friedrich gauss ;gauss grew ;grew greatest ;greatest mathematicians ;mathematicians times ;times mental ;mental arithmetic ;arithmetic table ;table filled ;filled repeating ;repeating numbers ;numbers diagonals ;diagonals shown ;shown total ;total sum ;sum table ;table numbers ;numbers cra ;cra version ;version important ;important algorithm ;algorithm study ;study algorithm ;algorithm input ;input matrix ;matrix real ;real numbers ;numbers efficiency ;efficiency class ;class algorithm ;algorithm glaring ;glaring inefficiency ;inefficiency pseudocode ;pseudocode eliminated ;eliminated speed ;speed algorithm ;algorithm von ;von neumann ;neumann neighborhood ;neighborhood algorithm ;algorithm starts ;starts single ;single square ;square iterations ;iterations adds ;adds squares ;squares iterations ;iterations gar ;gar parlance ;parlance cellular ;cellular automata ;automata theory ;theory cells ;cells von ;von neumann ;neumann neighborhood ;neighborhood range ;range results ;results illustrated ;illustrated page ;page numbering ;numbering total ;total decimal ;decimal digits ;digits needed ;needed num ;num bering ;bering pages ;pages assume ;assume pages ;pages numbered ;numbered consecutively ;consecutively starting ;starting mathematical ;mathematical analysis ;analysis recursive ;recursive algorithms ;algorithms section ;section apply ;apply general ;general framework ;framework analysis ;analysis algorithms ;algorithms recursive ;recursive algorithms ;algorithms novices ;novices idea ;idea recursive ;recursive algorithm ;algorithm compute ;compute factorial ;factorial function ;function arbitrary ;arbitrary nonneg ;nonneg ative ;ative integer ;integer definition ;definition compute ;compute recursive ;recursive algorithm ;algorithm computes ;computes recursively ;recursively input ;input nonnegative ;nonnegative integer ;integer output ;output simplicity ;simplicity indicator ;indicator algorithm ;algorithm input ;input size ;size bits ;bits binary ;binary expansion ;expansion basic ;basic operation ;operation algorithm ;algorithm multiplication ;multiplication executions ;executions denote ;denote function ;function computed ;computed formula ;formula alternatively ;alternatively times ;times comparison ;comparison executed ;executed counting ;counting total ;total calls ;calls algorithm ;algorithm problem ;problem section ;section exercises ;exercises multiplications ;multiplications needed ;needed compute ;compute equality ;equality compute ;compute multiplications ;multiplications spent ;spent compute ;compute multiplication ;multiplication needed ;needed result ;result equation ;equation defines ;defines sequence ;sequence equation ;equation defines ;defines explicitly ;explicitly function ;function implicitly ;implicitly function ;function equations ;equations called ;called recurrence ;recurrence relations ;relations brevity ;brevity recurrences ;recurrences recurrence ;recurrence relations ;relations important ;important role ;role analysis ;analysis algorithms ;algorithms areas ;areas applied ;applied mathematics ;mathematics studied ;studied courses ;courses discrete ;discrete mathematics ;mathematics discrete ;discrete structures ;structures tutorial ;tutorial provided ;provided appendix ;appendix goal ;goal solve ;solve recurrence ;recurrence relation ;relation explicit ;explicit formula ;formula terms ;terms infinitely ;infinitely sequences ;sequences recurrence ;recurrence examples ;examples determine ;determine solution ;solution uniquely ;uniquely initial ;initial condition ;condition tells ;tells sequence ;sequence starts ;starts inspecting ;inspecting condition ;condition makes ;makes algorithm ;algorithm recursive ;recursive calls ;calls tells ;tells things ;things calls ;calls smallest ;smallest algorithm ;algorithm executed ;executed defined ;defined inspecting ;inspecting pseudocode ;pseudocode exiting ;exiting line ;line algorithm ;algorithm performs ;performs multiplications ;multiplications initial ;initial condition ;condition calls ;calls multiplications ;multiplications succeeded ;succeeded setting ;setting recurrence ;recurrence relation ;relation initial ;initial condition ;condition algorithm ;algorithm multiplications ;multiplications embark ;embark discussion ;discussion solve ;solve recurrence ;recurrence reiterate ;reiterate important ;important dealing ;dealing recursively ;recursively defined ;defined functions ;functions factorial ;factorial function ;function defined ;defined recurrence ;recurrence multiplications ;multiplications needed ;needed compute ;compute recursive ;recursive algorithm ;algorithm pseudocode ;pseudocode beginning ;beginning section ;section showed ;showed defined ;defined recurrence ;recurrence solve ;solve difficult ;difficult solution ;solution sequence ;sequence starts ;starts increases ;increases systematic ;systematic fashion ;fashion techniques ;techniques solving ;solving recurrence ;recurrence relations ;relations called ;called method ;method backward ;backward substitutions ;substitutions method ;method idea ;idea reason ;reason immediately ;immediately applies ;applies solving ;solving recurrence ;recurrence substitute ;substitute inspecting ;inspecting lines ;lines emerging ;emerging pattern ;pattern makes ;makes predict ;predict line ;line general ;general formula ;formula pattern ;pattern strictly ;strictly speaking ;speaking correctness ;correctness formula ;formula proved ;proved mathematical ;mathematical induction ;induction easier ;easier solution ;solution verify ;verify correctness ;correctness remains ;remains advantage ;advantage initial ;initial condition ;condition substitute ;substitute pattern ;pattern formula ;formula ultimate ;ultimate result ;result backward ;backward substitutions ;substitutions disappointed ;disappointed exerting ;exerting effort ;effort obvious ;obvious benefits ;benefits method ;method illustrated ;illustrated simple ;simple solve ;solve difficult ;difficult recurrences ;recurrences simple ;simple iterative ;iterative algorithm ;algorithm accumulates ;accumulates product ;product consecutive ;consecutive integers ;integers requires ;requires multiplications ;multiplications overhead ;overhead space ;space maintaining ;maintaining recursion ;recursion stack ;stack issue ;issue efficiency ;efficiency important ;important problem ;problem computing ;computing section ;section function ;function values ;values large ;large fast ;fast realistically ;realistically compute ;compute exact ;exact values ;values small ;small simple ;simple convenient ;convenient vehicle ;vehicle standard ;standard approach ;approach analyzing ;analyzing recursive ;recursive algorithms ;algorithms generalizing ;generalizing experience ;experience investigating ;investigating recursive ;recursive algorithm ;algorithm computing ;computing outline ;outline general ;general investigating ;investigating recursive ;recursive algo ;algo rithms ;rithms general ;general analyzing ;analyzing efficiency ;efficiency recursive ;recursive algorithms ;algorithms parameter ;parameter parameters ;parameters indicating ;indicating input ;input size ;size algorithm ;algorithm basic ;basic operation ;operation times ;times basic ;basic operation ;operation executed ;executed vary ;vary inputs ;inputs size ;size worst ;worst case ;case average ;average case ;case efficiencies ;efficiencies investigated ;investigated separately ;separately set ;set recurrence ;recurrence relation ;relation initial ;initial condition ;condition times ;times basic ;basic operation ;operation executed ;executed solve ;solve recurrence ;recurrence ascertain ;ascertain growth ;growth solution ;solution educational ;educational workhorse ;workhorse recursive ;recursive algorithms ;algorithms tower ;tower hanoi ;hanoi puzzle ;puzzle mythical ;mythical monks ;monks disks ;disks sizes ;sizes slide ;slide pegs ;pegs initially ;initially disks ;disks peg ;peg size ;size largest ;largest smallest ;smallest goal ;goal disks ;disks peg ;peg auxiliary ;auxiliary disk ;disk forbidden ;forbidden larger ;larger disk ;disk smaller ;smaller problem ;problem elegant ;elegant recursive ;recursive solution ;solution illustrated ;illustrated figure ;figure disks ;disks peg ;peg auxiliary ;auxiliary recursively ;recursively disks ;disks peg ;peg auxiliary ;auxiliary largest ;largest disk ;disk directly ;directly peg ;peg finally ;finally recursively ;recursively disks ;disks peg ;peg auxiliary ;auxiliary simply ;simply single ;single disk ;disk directly ;directly source ;source peg ;peg destination ;destination peg ;peg figure ;figure recursive ;recursive solution ;solution tower ;tower hanoi ;hanoi puzzle ;puzzle apply ;apply general ;general outlined ;outlined tower ;tower hanoi ;hanoi problem ;problem disks ;disks obvious ;obvious choice ;choice input ;input size ;size indicator ;indicator moving ;moving disk ;disk algorithm ;algorithm basic ;basic operation ;operation moves ;moves depends ;depends recurrence ;recurrence equation ;equation obvious ;obvious initial ;initial condition ;condition recurrence ;recurrence relation ;relation moves ;moves solve ;solve recurrence ;recurrence method ;method backward ;backward substitutions ;substitutions pattern ;pattern sums ;sums left ;left suggests ;suggests generally ;generally substitutions ;substitutions initial ;initial condition ;condition achieved ;achieved formula ;formula solution ;solution recurrence ;recurrence exponential ;exponential algorithm ;algorithm run ;run unimaginably ;unimaginably moderate ;moderate values ;values problem ;problem section ;section exercises ;exercises fact ;fact algorithm ;algorithm poor ;poor fact ;fact difficult ;difficult prove ;prove efficient ;efficient algorithm ;algorithm problem ;problem intrinsic ;intrinsic difficulty ;difficulty makes ;makes computationally ;computationally hard ;hard makes ;makes important ;important general ;general careful ;careful recursive ;recursive algorithms ;algorithms succinctness ;succinctness mask ;mask inefficiency ;inefficiency recursive ;recursive algorithm ;algorithm makes ;makes single ;single analysis ;analysis purposes ;purposes construct ;construct tree ;tree recursive ;recursive calls ;calls tree ;tree nodes ;nodes correspond ;correspond recursive ;recursive calls ;calls parameter ;parameter generally ;generally parameters ;parameters calls ;calls tower ;tower hanoi ;hanoi tree ;tree figure ;figure counting ;counting nodes ;nodes tree ;tree total ;total calls ;calls tower ;tower hanoi ;hanoi algorithm ;algorithm tree ;tree figure ;figure tree ;tree recursive ;recursive calls ;calls recursive ;recursive algorithm ;algorithm tower ;tower hanoi ;hanoi puzzle ;puzzle agrees ;agrees obtained ;obtained earlier ;earlier investigate ;investigate recursive ;recursive version ;version algorithm ;algorithm discussed ;discussed section ;section algorithm ;algorithm binrec ;binrec input ;input positive ;positive decimal ;decimal integer ;integer output ;output binary ;binary digits ;digits binary ;binary representation ;representation binrec ;binrec set ;set recurrence ;recurrence initial ;initial condition ;condition additions ;additions algorithm ;algorithm additions ;additions computing ;computing binrec ;binrec addition ;addition algorithm ;algorithm returned ;returned leads ;leads recurrence ;recurrence recursive ;recursive calls ;calls equal ;equal additions ;additions initial ;initial condition ;condition presence ;presence function ;function argument ;argument makes ;makes method ;method backward ;backward substitutions ;substitutions stumble ;stumble values ;values powers ;powers standard ;standard approach ;approach solving ;solving recurrence ;recurrence solve ;solve advantage ;advantage theorem ;theorem called ;called smoothness ;smoothness appendix ;appendix claims ;claims broad ;broad assumptions ;assumptions growth ;growth observed ;observed growth ;growth values ;values alternatively ;alternatively solution ;solution powers ;powers fine ;fine tune ;tune solution ;solution formula ;formula valid ;valid arbitrary ;arbitrary apply ;apply recipe ;recipe recurrence ;recurrence takes ;takes backward ;backward substitutions ;substitutions encounter ;encounter problems ;problems substitute ;substitute returning ;returning original ;original variable ;variable log ;log fact ;fact prove ;prove problem ;problem section ;section exercises ;exercises exact ;exact solution ;solution arbitrary ;arbitrary slightly ;slightly refined ;refined formula ;formula log ;log section ;section introduction ;introduction analysis ;analysis recursive ;recursive algorithms ;algorithms techniques ;techniques expanded ;expanded section ;section discuss ;discuss fibonacci ;fibonacci numbers ;numbers analysis ;analysis involves ;involves difficult ;difficult recurrence ;recurrence relations ;relations solved ;solved method ;method backward ;backward substitutions ;substitutions exercises ;exercises solve ;solve recurrence ;recurrence relations ;relations solve ;solve set ;set solve ;solve recurrence ;recurrence relation ;relation calls ;calls recursive ;recursive algorithm ;algorithm computing ;computing recursive ;recursive algorithm ;algorithm computing ;computing sum ;sum cubes ;cubes algorithm ;algorithm input ;input positive ;positive integer ;integer output ;output sum ;sum cubes ;cubes set ;set solve ;solve recurrence ;recurrence relation ;relation times ;times algo ;algo rithm ;rithm basic ;basic operation ;operation executed ;executed algorithm ;algorithm straightforward ;straightforward nonrecursive ;nonrecursive algorithm ;algorithm computing ;computing sum ;sum recursive ;recursive algorithm ;algorithm input ;input positive ;positive integer ;integer set ;set recurrence ;recurrence relation ;relation function ;function values ;values solve ;solve deter ;deter algorithm ;algorithm computes ;computes set ;set recurrence ;recurrence relation ;relation multiplications ;multiplications algorithm ;algorithm solve ;solve set ;set recurrence ;recurrence relation ;relation additions ;additions subtractions ;subtractions algorithm ;algorithm solve ;solve tower ;tower hanoi ;hanoi original ;original version ;version tower ;tower hanoi ;hanoi puzzle ;puzzle published ;published douard ;douard lucas ;lucas french ;french mathematician ;mathematician world ;world disks ;disks moved ;moved mystical ;mystical tower ;tower brahma ;brahma estimate ;estimate years ;years monks ;monks disk ;disk minute ;minute assume ;assume monks ;monks eat ;eat sleep ;sleep die ;die moves ;moves ith ;ith largest ;largest disk ;disk algorithm ;algorithm nonrecursive ;nonrecursive algorithm ;algorithm tower ;tower hanoi ;hanoi puzzle ;puzzle imple ;imple ment ;ment language ;language choice ;choice restricted ;restricted tower ;tower hanoi ;hanoi version ;version tower ;tower hanoi ;hanoi puzzle ;puzzle disks ;disks moved ;moved peg ;peg disk ;disk peg ;peg disk ;disk peg ;peg prohibition ;prohibition placing ;placing larger ;larger disk ;disk smaller ;smaller remains ;remains design ;design recursive ;recursive algorithm ;algorithm problem ;problem moves ;moves prove ;prove exact ;exact additions ;additions recursive ;recursive algorithm ;algorithm binrec ;binrec arbitrary ;arbitrary positive ;positive decimal ;decimal integer ;integer log ;log set ;set recurrence ;recurrence relation ;relation additions ;additions nonrecursive ;nonrecursive version ;version algorithm ;algorithm section ;section solve ;solve design ;design recursive ;recursive algorithm ;algorithm computing ;computing nonnegative ;nonnegative integer ;integer based ;based formula ;formula set ;set recurrence ;recurrence relation ;relation additions ;additions algorithm ;algorithm solve ;solve draw ;draw tree ;tree recursive ;recursive calls ;calls algorithm ;algorithm calls ;calls algorithm ;algorithm good ;good algorithm ;algorithm solving ;solving problem ;problem recursive ;recursive algorithm ;algorithm riddle ;riddle input ;input array ;array real ;real numbers ;numbers temp ;temp riddle ;riddle temp ;temp algorithm ;algorithm compute ;compute set ;set recurrence ;recurrence relation ;relation algorithm ;algorithm basic ;basic operation ;operation solve ;solve algorithm ;algorithm graph ;graph defined ;defined adjacency ;adjacency matrix ;matrix algorithm ;algorithm graphcomplete ;graphcomplete input ;input adjacency ;adjacency matrix ;matrix undirected ;undirected graph ;graph output ;output true ;true false ;false vertex ;vertex graph ;graph definition ;definition graphcomplete ;graphcomplete algorithm ;algorithm efficiency ;efficiency class ;class worst ;worst case ;case determinant ;determinant matrix ;matrix denoted ;denoted det ;det defined ;defined recursive ;recursive formula ;formula det ;det odd ;odd element ;element row ;row column ;column matrix ;matrix obtained ;obtained matrix ;matrix deleting ;deleting row ;row column ;column set ;set recurrence ;recurrence relation ;relation multiplications ;multiplications algorithm ;algorithm implementing ;implementing recursive ;recursive definition ;definition solving ;solving recurrence ;recurrence solution ;solution growth ;growth compared ;compared von ;von neumann ;neumann neighborhood ;neighborhood revisited ;revisited cells ;cells von ;von neumann ;neumann neighborhood ;neighborhood range ;range problem ;problem exercises ;exercises setting ;setting solving ;solving recurrence ;recurrence relation ;relation frying ;frying hamburgers ;hamburgers fried ;fried small ;small grill ;grill hold ;hold hamburgers ;hamburgers hamburger ;hamburger fried ;fried sides ;sides frying ;frying hamburger ;hamburger takes ;takes minute ;minute hamburgers ;hamburgers fried ;fried recursive ;recursive algorithm ;algorithm executing ;executing task ;task minimum ;minimum hamburger ;hamburger hamburgers ;hamburgers apply ;apply procedure ;procedure recursively ;recursively remaining ;remaining hamburgers ;hamburgers set ;set solve ;solve recurrence ;recurrence algorithm ;algorithm hamburgers ;hamburgers algorithm ;algorithm hamburgers ;hamburgers minimum ;minimum recursive ;recursive algorithm ;algorithm executes ;executes task ;task minimum ;minimum celebrity ;celebrity problem ;problem celebrity ;celebrity group ;group people ;people person ;person task ;task celebrity ;celebrity questions ;questions people ;people design ;design efficient ;efficient algorithm ;algorithm celebrity ;celebrity determine ;determine group ;group person ;person questions ;questions algorithm ;algorithm worst ;worst case ;case computing ;computing nth ;nth fibonacci ;fibonacci section ;section fibonacci ;fibonacci numbers ;numbers famous ;famous sequence ;sequence defined ;defined simple ;simple recurrence ;recurrence initial ;initial conditions ;conditions fibonacci ;fibonacci numbers ;numbers introduced ;introduced leonardo ;leonardo fibonacci ;fibonacci solution ;solution problem ;problem size ;size rabbit ;rabbit population ;population problem ;problem section ;section exercises ;exercises examples ;examples fibonacci ;fibonacci numbers ;numbers discovered ;discovered natural ;natural world ;world predicting ;predicting prices ;prices stocks ;stocks commodities ;commodities interesting ;interesting applications ;applications fibonacci ;fibonacci numbers ;numbers science ;science worst ;worst case ;case inputs ;inputs euclid ;euclid algorithm ;algorithm discussed ;discussed section ;section consecutive ;consecutive elements ;elements fibonacci ;fibonacci sequence ;sequence section ;section briefly ;briefly algorithms ;algorithms computing ;computing nth ;nth element ;element sequence ;sequence benefits ;benefits discussion ;discussion opportunity ;opportunity method ;method solving ;solving recurrence ;recurrence relations ;relations analysis ;analysis recursive ;recursive algorithms ;algorithms explicit ;explicit formula ;formula apply ;apply method ;method backward ;backward substitutions ;substitutions solve ;solve recurrence ;recurrence easily ;easily discernible ;discernible pattern ;pattern advantage ;advantage theorem ;theorem describes ;describes solutions ;solutions homogeneous ;homogeneous linear ;linear recurrence ;recurrence constant ;constant efficients ;efficients fixed ;fixed real ;real numbers ;numbers called ;called coefficients ;coefficients recurrence ;recurrence generic ;generic term ;term unknown ;unknown sequence ;sequence applying ;applying theorem ;theorem recurrence ;recurrence initial ;initial conditions ;conditions appendix ;appendix formula ;formula hard ;hard formula ;formula includes ;includes arbitrary ;arbitrary integer ;integer powers ;powers irrational ;irrational numbers ;numbers yields ;yields elements ;elements fibonacci ;fibonacci sequence ;sequence benefits ;benefits formula ;formula immediately ;immediately implies ;implies grows ;grows exponentially ;exponentially fibonacci ;fibonacci rabbits ;rabbits constant ;constant golden ;golden ratio ;ratio antiquity ;antiquity considered ;considered pleasing ;pleasing ratio ;ratio rectangle ;rectangle sides ;sides human ;human eye ;eye consciously ;consciously ancient ;ancient architects ;architects sculptors ;sculptors observation ;observation fraction ;fraction infinitely ;infinitely small ;small infinity ;infinity fact ;fact prove ;prove impact ;impact term ;term obtained ;obtained rounding ;rounding term ;term nearest ;nearest integer ;integer words ;words nonnegative ;nonnegative integer ;integer rounded ;rounded nearest ;nearest integer ;integer algorithms ;algorithms sake ;sake simplicity ;simplicity operations ;operations additions ;additions multiplications ;multiplications unit ;unit cost ;cost fibonacci ;fibonacci numbers ;numbers grow ;grow infinitely ;infinitely large ;large grow ;grow rapidly ;rapidly detailed ;detailed analysis ;analysis offered ;offered warranted ;warranted fact ;fact size ;size numbers ;numbers efficient ;efficient method ;method computing ;computing primary ;primary caveats ;caveats algorithms ;algorithms outline ;outline analysis ;analysis examples ;examples student ;student design ;design analysis ;analysis algorithms ;algorithms begin ;begin recurrence ;recurrence initial ;initial conditions ;conditions obvious ;obvious recursive ;recursive algorithm ;algorithm computing ;computing algorithm ;algorithm computes ;computes nth ;nth fibonacci ;fibonacci recursively ;recursively definition ;definition input ;input nonnegative ;nonnegative integer ;integer output ;output nth ;nth fibonacci ;fibonacci embarking ;embarking formal ;formal analysis ;analysis efficient ;efficient algorithm ;algorithm formal ;formal analysis ;analysis algorithm ;algorithm basic ;basic operation ;operation addition ;addition additions ;additions performed ;performed algorithm ;algorithm computing ;computing numbers ;numbers additions ;additions needed ;needed computing ;computing algorithm ;algorithm addition ;addition compute ;compute sum ;sum recurrence ;recurrence similar ;similar recurrence ;recurrence equal ;equal recurrences ;recurrences called ;called inhomogeneous ;inhomogeneous general ;general techniques ;techniques solving ;solving inhomogeneous ;inhomogeneous recurrences ;recurrences appendix ;appendix textbook ;textbook discrete ;discrete mathematics ;mathematics recurrence ;recurrence special ;special leads ;leads faster ;faster solution ;solution inhomogeneous ;inhomogeneous recurrence ;recurrence homogeneous ;homogeneous rewriting ;rewriting substituting ;substituting homogeneous ;homogeneous recurrence ;recurrence solved ;solved manner ;manner recur ;recur rence ;rence solved ;solved explicit ;explicit formula ;formula avoided ;avoided noting ;noting fact ;fact recurrence ;recurrence starts ;starts runs ;runs ahead ;ahead size ;size bits ;bits log ;log binary ;binary representation ;representation efficiency ;efficiency class ;class worse ;worse doubly ;doubly exponential ;exponential poor ;poor efficiency ;efficiency class ;class algorithm ;algorithm anticipated ;anticipated nature ;nature recurrence ;recurrence recursive ;recursive calls ;calls sizes ;sizes smaller ;smaller instances ;instances slightly ;slightly smaller ;smaller size ;size encountered ;encountered situation ;situation reason ;reason algorithm ;algorithm inefficiency ;inefficiency recursive ;recursive tree ;tree calls ;calls tracing ;tracing algorithm ;algorithm execution ;execution tree ;tree figure ;figure values ;values function ;function evaluated ;evaluated extremely ;extremely inefficient ;inefficient faster ;faster algorithm ;algorithm simply ;simply computing ;computing successive ;successive elements ;elements fibonacci ;fibonacci sequence ;sequence iteratively ;iteratively algo ;algo rithm ;rithm algorithm ;algorithm fib ;fib computes ;computes nth ;nth fibonacci ;fibonacci iteratively ;iteratively definition ;definition input ;input nonnegative ;nonnegative integer ;integer output ;output nth ;nth fibonacci ;fibonacci figure ;figure tree ;tree recursive ;recursive calls ;calls computing ;computing fibonacci ;fibonacci definition ;definition based ;based algorithm ;algorithm makes ;makes additions ;additions linear ;linear function ;function exponential ;exponential function ;function bits ;bits binary ;binary representation ;representation extra ;extra array ;array storing ;storing preceding ;preceding elements ;elements fibonacci ;fibonacci sequence ;sequence avoided ;avoided storing ;storing values ;values accomplish ;accomplish task ;task problem ;problem section ;section exercises ;exercises alternative ;alternative computing ;computing nth ;nth fibonacci ;fibonacci lies ;lies formula ;formula efficiency ;efficiency algorithm ;algorithm determined ;determined efficiency ;efficiency exponentiation ;exponentiation algorithm ;algorithm computing ;computing simply ;simply multiplying ;multiplying times ;times algorithm ;algorithm faster ;faster algorithms ;algorithms exponentiation ;exponentiation problem ;problem discuss ;discuss log ;log algorithms ;algorithms problem ;problem chapters ;chapters special ;special exercised ;exercised implementing ;implementing approach ;approach computing ;computing nth ;nth fibonacci ;fibonacci intermediate ;intermediate results ;results irrational ;irrational numbers ;numbers make ;make approximations ;approximations accurate ;accurate final ;final yields ;yields result ;result finally ;finally exists ;exists log ;log algorithm ;algorithm computing ;computing nth ;nth fibonacci ;fibonacci manipulates ;manipulates integers ;integers based ;based equality ;equality efficient ;efficient computing ;computing matrix ;matrix powers ;powers exercises ;exercises web ;web site ;site dedicated ;dedicated applications ;applications fibonacci ;fibonacci numbers ;numbers study ;study fibonacci ;fibonacci rabbits ;rabbits problem ;problem pair ;pair rabbits ;rabbits sur ;sur rounded ;rounded wall ;wall pairs ;pairs rabbits ;rabbits year ;year initial ;initial pair ;pair rabbits ;rabbits male ;male female ;female newborn ;newborn rabbit ;rabbit pairs ;pairs fertile ;fertile month ;month life ;life birth ;birth male ;male female ;female pair ;pair month ;month climbing ;climbing stairs ;stairs ways ;ways climb ;climb stair ;stair case ;case stairs ;stairs stair ;stair staircase ;staircase climbed ;climbed ways ;ways numbers ;numbers fibonacci ;fibonacci numbers ;numbers closed ;closed formula ;formula valid ;valid direct ;direct substitutions ;substitutions function ;function satisfies ;satisfies recurrence ;recurrence initial ;initial conditions ;conditions maximum ;maximum values ;values java ;java primitive ;primitive types ;types int ;int smallest ;smallest nth ;nth fibonacci ;fibonacci memory ;memory allocated ;allocated int ;int recursive ;recursive definition ;definition based ;based algorithm ;algorithm computing ;computing nth ;nth bonacci ;bonacci times ;times computed ;computed prove ;prove algorithm ;algorithm text ;text requires ;requires space ;space prove ;prove equality ;equality modulo ;modulo divisions ;divisions euclid ;euclid algorithm ;algorithm consec ;consec utive ;utive fibonacci ;fibonacci numbers ;numbers algorithm ;algorithm input ;input dissecting ;dissecting fibonacci ;fibonacci rectangle ;rectangle sides ;sides secutive ;secutive fibonacci ;fibonacci numbers ;numbers design ;design algorithm ;algorithm dissect ;dissect squares ;squares size ;size efficiency ;efficiency class ;class algorithm ;algorithm language ;language choice ;choice implement ;implement algorithms ;algorithms computing ;computing digits ;digits nth ;nth fibonacci ;fibonacci based ;based recursive ;recursive definition ;definition based ;based algorithm ;algorithm iterative ;iterative definition ;definition based ;based algorithm ;algorithm fib ;fib experiment ;experiment largest ;largest programs ;programs run ;run minute ;minute empirical ;empirical analysis ;analysis algorithms ;algorithms sections ;sections algorithms ;algorithms nonrecursive ;nonrecursive recursive ;recursive analyzed ;analyzed mathematically ;mathematically techniques ;techniques applied ;applied success ;success fully ;fully simple ;simple algorithms ;algorithms power ;power mathematics ;mathematics enhanced ;enhanced advanced ;advanced techniques ;techniques sed ;sed pur ;pur gra ;gra gre ;gre limitless ;limitless fact ;fact seemingly ;seemingly simple ;simple algorithms ;algorithms proved ;proved difficult ;difficult analyze ;analyze mathematical ;mathematical precision ;precision certainty ;certainty pointed ;pointed section ;section true ;true average ;average case ;case analysis ;analysis principal ;principal alternative ;alternative mathematical ;mathematical analysis ;analysis algorithm ;algorithm ficiency ;ficiency empirical ;empirical analysis ;analysis approach ;approach implies ;implies steps ;steps spelled ;spelled general ;general empirical ;empirical analysis ;analysis algorithm ;algorithm efficiency ;efficiency understand ;understand experiment ;experiment purpose ;purpose efficiency ;efficiency metric ;metric measured ;measured measurement ;measurement unit ;unit operation ;operation unit ;unit characteristics ;characteristics input ;input sample ;sample range ;range size ;size implementing ;implementing algorithm ;algorithm algorithms ;algorithms exper ;exper imentation ;imentation generate ;generate sample ;sample inputs ;inputs run ;run algorithm ;algorithm algorithms ;algorithms sample ;sample inputs ;inputs data ;data observed ;observed analyze ;analyze data ;data obtained ;obtained discuss ;discuss steps ;steps goals ;goals pursue ;pursue analyzing ;analyzing algorithms ;algorithms empirically ;empirically checking ;checking accuracy ;accuracy theoretical ;theoretical assertion ;assertion algorithm ;algorithm efficiency ;efficiency comparing ;comparing efficiency ;efficiency algorithms ;algorithms solving ;solving problem ;problem imple ;imple mentations ;mentations algorithm ;algorithm developing ;developing hypothesis ;hypothesis algorithm ;algorithm efficiency ;efficiency class ;class ascertaining ;ascertaining efficiency ;efficiency implementing ;implementing algorithm ;algorithm machine ;machine experiment ;experiment design ;design pend ;pend experimenter ;experimenter seeks ;seeks goal ;goal experiment ;experiment dictate ;dictate algorithm ;algorithm efficiency ;efficiency measured ;measured alternative ;alternative insert ;insert counter ;counter counters ;counters implementing ;implementing algorithm ;algorithm times ;times algorithm ;algorithm basic ;basic operation ;operation executed ;executed straightforward ;straightforward operation ;operation mindful ;mindful possibility ;possibility basic ;basic operation ;operation executed ;executed places ;places executions ;executions accounted ;accounted straightforward ;straightforward task ;task modified ;modified ensure ;ensure works ;works correctly ;correctly terms ;terms problem ;problem solves ;solves counts ;counts yields ;yields alternative ;alternative implementing ;implementing algorithm ;algorithm easiest ;easiest unix ;unix alternatively ;alternatively running ;running code ;code fragment ;fragment tstart ;tstart completion ;completion tfinish ;tfinish computing ;computing difference ;difference tfinish ;tfinish tstart ;tstart function ;function clock ;clock purpose ;purpose java ;java method ;method currenttimemillis ;currenttimemillis class ;class important ;important facts ;facts mind ;mind typically ;typically accurate ;accurate results ;results repeated ;repeated runs ;runs inputs ;inputs obvious ;obvious remedy ;remedy make ;make measurements ;measurements average ;average median ;median sample ;sample observation ;observation high ;high speed ;speed modern ;modern puters ;puters running ;running register ;register reported ;reported standard ;standard overcome ;overcome obstacle ;obstacle run ;run extra ;extra loop ;loop times ;times total ;total running ;running loop ;loop repetitions ;repetitions running ;running sharing ;sharing unix ;unix reported ;reported spent ;spent cpu ;cpu programs ;programs defeats ;defeats purpose ;purpose experiment ;experiment devoted ;devoted specifically ;specifically execution ;execution units ;units called ;called ticks ;ticks difference ;difference divided ;divided constant ;constant indicating ;indicating ticks ;ticks unit ;unit unix ;unix called ;called user ;user automatically ;automatically provided ;provided measuring ;measuring physical ;physical running ;running disadvantages ;disadvantages principal ;principal dependence ;dependence machine ;machine important ;important technical ;technical shared ;shared counting ;counting executions ;executions basic ;basic operation ;operation physical ;physical running ;running specific ;specific information ;information algorithm ;algorithm performance ;performance computing ;computing environment ;environment importance ;importance experimenter ;experimenter algorithm ;algorithm asymptotic ;asymptotic efficiency ;efficiency class ;class addition ;addition measuring ;measuring spent ;spent segments ;segments pinpoint ;pinpoint bottleneck ;bottleneck performance ;performance missed ;missed abstract ;abstract deliberation ;deliberation algorithm ;algorithm basic ;basic operation ;operation data ;data called ;called profiling ;profiling important ;important resource ;resource empirical ;empirical analysis ;analysis algorithm ;algorithm running ;running data ;data obtained ;obtained tools ;tools computing ;computing environments ;environments efficiency ;efficiency basic ;basic operation ;operation counting ;counting clocking ;clocking sample ;sample inputs ;inputs experiment ;experiment goal ;goal sample ;sample representing ;representing typical ;typical input ;input understand ;understand typical ;typical input ;input classes ;classes algorithms ;algorithms traveling ;traveling salesman ;salesman problem ;problem discuss ;discuss researchers ;researchers developed ;developed set ;set instances ;instances benchmark ;benchmark ing ;ing input ;input sample ;sample developed ;developed experimenter ;experimenter typically ;typically make ;make decisions ;decisions sample ;sample size ;size small ;small sample ;sample range ;range instance ;instance sizes ;sizes typically ;typically trivially ;trivially small ;small excessively ;excessively large ;large procedure ;procedure generating ;generating instances ;instances range ;range chosen ;chosen instance ;instance sizes ;sizes adhere ;adhere pattern ;pattern generated ;generated randomly ;randomly range ;range chosen ;chosen principal ;principal advantage ;advantage size ;size changing ;changing pattern ;pattern impact ;impact easier ;easier analyze ;analyze sample ;sample sizes ;sizes generated ;generated doubling ;doubling compute ;compute ratios ;ratios observed ;observed metric ;metric ratios ;ratios exhibit ;exhibit behavior ;behavior typical ;typical algorithms ;algorithms basic ;basic efficiency ;efficiency classes ;classes discussed ;discussed section ;section major ;major disadvantage ;disadvantage nonrandom ;nonrandom sizes ;sizes possibility ;possibility algorithm ;algorithm investigation ;investigation exhibits ;exhibits atypical ;atypical behavior ;behavior sample ;sample chosen ;chosen sizes ;sizes sample ;sample algorithm ;algorithm runs ;runs slowly ;slowly odd ;odd size ;size inputs ;inputs empirical ;empirical results ;results misleading ;misleading important ;important issue ;issue sizes ;sizes experiment ;experiment sample ;sample instances ;instances size ;size included ;included observed ;observed metric ;metric vary ;vary considerably ;considerably instances ;instances size ;size wise ;wise instances ;instances size ;size sample ;sample developed ;developed methods ;methods statistics ;statistics experimenter ;experimenter make ;make cisions ;cisions shortage ;shortage books ;books subject ;subject instances ;instances size ;size included ;included sample ;sample averages ;averages medians ;medians observed ;observed values ;values size ;size computed ;computed investigated ;investigated addition ;addition individual ;individual sample ;sample points ;points empirical ;empirical analysis ;analysis requires ;requires generating ;generating random ;random numbers ;numbers pattern ;pattern input ;input sizes ;sizes typically ;typically instances ;instances generated ;generated randomly ;randomly generating ;generating random ;random numbers ;numbers digital ;digital difficult ;difficult problem ;problem principle ;principle problem ;problem solved ;solved approximately ;approximately reason ;reason scientists ;scientists numbers ;numbers pseudorandom ;pseudorandom practical ;practical easiest ;easiest natural ;natural numbers ;numbers advantage ;advantage random ;random generator ;generator language ;language libraries ;libraries typically ;typically output ;output pseudo ;pseudo random ;random variable ;variable uniformly ;uniformly distributed ;distributed interval ;interval pseudo ;pseudo random ;random variable ;variable desired ;desired transformation ;transformation continuous ;continuous random ;random variable ;variable uniformly ;uniformly distributed ;distributed interval ;interval variable ;variable uniformly ;uniformly distributed ;distributed integer ;integer values ;values integers ;integers alternatively ;alternatively implement ;implement algorithms ;algorithms generating ;generating pseudo ;pseudo random ;random numbers ;numbers widely ;widely studied ;studied algorithms ;algorithms linear ;linear congruential ;congruential method ;method algorithm ;algorithm random ;random seed ;seed generates ;generates sequence ;sequence pseudorandom ;pseudorandom numbers ;numbers linear ;linear congruential ;congruential method ;method input ;input positive ;positive integer ;integer positive ;positive integer ;integer parameters ;parameters seed ;seed output ;output sequence ;sequence pseudorandom ;pseudorandom integers ;integers uniformly ;uniformly distributed ;distributed integer ;integer values ;values pseudorandom ;pseudorandom numbers ;numbers obtained ;obtained treating ;treating integers ;integers generated ;generated digits ;digits decimal ;decimal seed ;seed mod ;mod simplicity ;simplicity pseudocode ;pseudocode misleading ;misleading devil ;devil lies ;lies details ;details choosing ;choosing algorithm ;algorithm parameters ;parameters partial ;partial recommendations ;recommendations based ;based results ;results sophisticated ;sophisticated mathematical ;mathematical analysis ;analysis knuii ;knuii details ;details seed ;seed chosen ;chosen arbitrarily ;arbitrarily set ;set current ;current date ;date large ;large conveniently ;conveniently word ;word size ;size selected ;selected integer ;integer pattern ;pattern digits ;digits mod ;mod chosen ;chosen empirical ;empirical data ;data obtained ;obtained result ;result experiment ;experiment recorded ;recorded presented ;presented analysis ;analysis data ;data presented ;presented numerically ;numerically table ;table graphically ;graphically scatterplot ;scatterplot points ;points cartesian ;cartesian coordinate ;coordinate good ;good idea ;idea options ;options feasible ;feasible methods ;methods unique ;unique strengths ;strengths weaknesses ;weaknesses principal ;principal advantage ;advantage tabulated ;tabulated data ;data lies ;lies opportunity ;opportunity manip ;manip ulate ;ulate easily ;easily compute ;compute ratios ;ratios candidate ;candidate represent ;represent efficiency ;efficiency class ;class algorithm ;algorithm ratios ;ratios converge ;converge pos ;pos itive ;itive constant ;constant large ;large careless ;careless novices ;novices assume ;assume constant ;constant incorrect ;incorrect definition ;definition compute ;compute ratios ;ratios running ;running reacts ;reacts doubling ;doubling input ;input size ;size discussed ;discussed section ;section ratios ;ratios slightly ;slightly logarithmic ;logarithmic algorithms ;algorithms converge ;converge linear ;linear quadratic ;quadratic cubic ;cubic algorithms ;algorithms obvious ;obvious convenient ;convenient cases ;cases scatterplot ;scatterplot ascertaining ;ascertaining algorithm ;algorithm probable ;probable efficiency ;efficiency class ;class logarithmic ;logarithmic algorithm ;algorithm scat ;scat terplot ;terplot concave ;concave shape ;shape figure ;figure fact ;fact distinguishes ;distinguishes basic ;basic efficiency ;efficiency classes ;classes linear ;linear algorithm ;algorithm points ;points tend ;tend aggregate ;aggregate straight ;straight line ;line generally ;generally contained ;contained straight ;straight lines ;lines figure ;figure scatterplots ;scatterplots functions ;functions convex ;convex shape ;shape figure ;figure making ;making difficult ;difficult differentiate ;differentiate scatterplot ;scatterplot cubic ;cubic algorithm ;algorithm convex ;convex shape ;shape rapid ;rapid metric ;metric values ;values exponential ;exponential algorithm ;algorithm require ;require logarithmic ;logarithmic scale ;scale vertical ;vertical axis ;axis val ;val ues ;ues loga ;loga plotted ;plotted commonly ;commonly logarithm ;logarithm base ;base coordinate ;coordinate scatterplot ;scatterplot exponential ;exponential algorithm ;algorithm resemble ;resemble linear ;linear function ;function plies ;plies logb ;logb vice ;vice versa ;versa applications ;applications empirical ;empirical analysis ;analysis predict ;predict gorithm ;gorithm performance ;performance instance ;instance included ;included experiment ;experiment sample ;sample ratios ;ratios constant ;constant sample ;sample instances ;instances approximate ;approximate prod ;prod uct ;uct instances ;instances approach ;approach caution ;caution values ;values sample ;sample range ;range mathematicians ;mathematicians predictions ;predictions extrapolation ;extrapolation opposed ;opposed interpolation ;interpolation deals ;deals values ;values sample ;sample range ;range unleashing ;unleashing standard ;standard tech ;tech niques ;niques statistical ;statistical data ;data analysis ;analysis prediction ;prediction majority ;majority techniques ;techniques based ;based specific ;specific probabilistic ;probabilistic assumptions ;assumptions valid ;valid experimental ;experimental data ;data section ;section pointing ;pointing basic ;basic differ ;differ ences ;ences mathematical ;mathematical empirical ;empirical analyses ;analyses algorithms ;algorithms princi ;princi pal ;pal strength ;strength mathematical ;mathematical analysis ;analysis independence ;independence specific ;specific inputs ;inputs principal ;principal weakness ;weakness applicability ;applicability investigating ;investigating average ;average case ;case efficiency ;efficiency principal ;principal strength ;strength empirical ;empirical analysis ;analysis lies ;lies applicability ;applicability algorithm ;algorithm results ;results sample ;sample instances ;instances experiment ;experiment figure ;figure typical ;typical plots ;plots logarithmic ;logarithmic linear ;linear convex ;convex functions ;functions exercises ;exercises sorting ;sorting algorithm ;algorithm studied ;studied counter ;counter inserted ;inserted key ;key comparisons ;comparisons algorithm ;algorithm sortanalysis ;sortanalysis input ;input array ;array orderable ;orderable elements ;elements output ;output total ;total key ;key comparisons ;comparisons comparison ;comparison counter ;counter inserted ;inserted prove ;prove make ;make correction ;correction run ;run problem ;problem properly ;properly inserted ;inserted counter ;counter coun ;coun ters ;ters key ;key comparisons ;comparisons random ;random arrays ;arrays sizes ;sizes analyze ;analyze data ;data obtained ;obtained hypothesis ;hypothesis algorithm ;algorithm average ;average case ;case efficiency ;efficiency estimate ;estimate key ;key comparisons ;comparisons randomly ;randomly generated ;generated array ;array size ;size sorted ;sorted algorithm ;algorithm problem ;problem measuring ;measuring running ;running milliseconds ;milliseconds hypothesize ;hypothesize efficiency ;efficiency class ;class algorithm ;algorithm based ;based empirical ;empirical observations ;observations basic ;basic operation ;operation size ;size scale ;scale transformation ;transformation make ;make logarithmic ;logarithmic scatterplot ;scatterplot linear ;linear distinguish ;distinguish scatterplot ;scatterplot algorithm ;algorithm scatterplot ;scatterplot algorithm ;algorithm empirically ;empirically largest ;largest divisions ;divisions euclid ;euclid algo ;algo rithm ;rithm computing ;computing gcd ;gcd positive ;positive integer ;integer empirically ;empirically smallest ;smallest pair ;pair integers ;integers euclid ;euclid algorithm ;algorithm make ;make divisions ;divisions gcd ;gcd average ;average case ;case efficiency ;efficiency euclid ;euclid algorithm ;algorithm inputs ;inputs size ;size measured ;measured average ;average divisions ;divisions davg ;davg algorithm ;algorithm computing ;computing gcd ;gcd davg ;davg scatterplot ;scatterplot davg ;davg algorithm ;algorithm average ;average case ;case efficiency ;efficiency class ;class run ;run experiment ;experiment ascertain ;ascertain efficiency ;efficiency class ;class sieve ;sieve eratos ;eratos thenes ;thenes section ;section run ;run timing ;timing experiment ;experiment algorithms ;algorithms computing ;computing gcd ;gcd presented ;presented section ;section algorithm ;algorithm visualization ;visualization addition ;addition mathematical ;mathematical empirical ;empirical analyses ;analyses algorithms ;algorithms study ;study algorithms ;algorithms called ;called algorithm ;algorithm visualization ;visualization defined ;defined images ;images convey ;convey information ;information algorithms ;algorithms information ;information visual ;visual illustration ;illustration algorithm ;algorithm operation ;operation formance ;formance kinds ;kinds inputs ;inputs execution ;execution speed ;speed algorithms ;algorithms problem ;problem accomplish ;accomplish goal ;goal algorithm ;algorithm visualiza ;visualiza tion ;tion graphic ;graphic elements ;elements points ;points line ;line segments ;segments dimensional ;dimensional bars ;bars represent ;represent interesting ;interesting events ;events algorithm ;algorithm operation ;operation principal ;principal variations ;variations algorithm ;algorithm visualization ;visualization static ;static algorithm ;algorithm visualization ;visualization dynamic ;dynamic algorithm ;algorithm visualization ;visualization called ;called algorithm ;algorithm animation ;animation static ;static algorithm ;algorithm visualization ;visualization shows ;shows algorithm ;algorithm progress ;progress series ;series images ;images algorithm ;algorithm animation ;animation shows ;shows continuous ;continuous movie ;movie presentation ;presentation algorithm ;algorithm operations ;operations animation ;animation arguably ;arguably sophisticated ;sophisticated option ;option difficult ;difficult implement ;implement early ;early efforts ;efforts area ;area algorithm ;algorithm visualization ;visualization watershed ;watershed event ;event happened ;happened appearance ;appearance minute ;minute color ;color titled ;titled sorting ;sorting algorithm ;algorithm visualization ;visualization classic ;classic produced ;produced university ;university toronto ;toronto ronald ;ronald baecker ;baecker assistance ;assistance sherman ;sherman bae ;bae contained ;contained visualizations ;visualizations sorting ;sorting algorithms ;algorithms half ;half discussed ;discussed provided ;provided convincing ;convincing demonstration ;demonstration relative ;relative speeds ;speeds success ;success sorting ;sorting algorithms ;algorithms perennial ;perennial vorite ;vorite algorithm ;algorithm animation ;animation sorting ;sorting problem ;problem lends ;lends naturally ;naturally visual ;visual presentation ;presentation vertical ;vertical horizontal ;horizontal bars ;bars sticks ;sticks heights ;heights lengths ;lengths rearranged ;rearranged sizes ;sizes figure ;figure presentation ;presentation convenient ;convenient illustrating ;illustrating actions ;actions typical ;typical sorting ;sorting algorithm ;algorithm small ;small inputs ;inputs larger ;larger files ;files sorting ;sorting ingenious ;ingenious idea ;idea presenting ;presenting data ;data scatterplot ;scatterplot points ;points coordinate ;coordinate plane ;plane coordinate ;coordinate representing ;representing item ;item position ;position representing ;representing item ;item representation ;representation process ;process sorting ;sorting transformation ;transformation random ;random scatterplot ;scatterplot points ;points diagonal ;diagonal figure ;figure addition ;addition sorting ;sorting algorithms ;algorithms figure ;figure initial ;initial final ;final screens ;screens typical ;typical visualization ;visualization sorting ;sorting algorithm ;algorithm representation ;representation comparing ;comparing exchanging ;exchanging items ;items event ;event animated ;animated easily ;easily appearance ;appearance sorting ;sorting great ;great algorithm ;algorithm animations ;animations created ;created appearance ;appearance java ;java figure ;figure initial ;initial final ;final screens ;screens typical ;typical visualization ;visualization sorting ;sorting algorithm ;algorithm scatterplot ;scatterplot representation ;representation world ;world wide ;wide web ;web range ;range scope ;scope algorithm ;algorithm group ;group algorithms ;algorithms problem ;problem sorting ;sorting application ;application area ;area geometric ;geometric algorithms ;algorithms general ;general purpose ;purpose animation ;animation systems ;systems catalog ;catalog links ;links existing ;existing visualizations ;visualizations maintained ;maintained nsf ;nsf supported ;supported algovizproject ;algovizproject contained ;contained links ;links survey ;survey existing ;existing visualizations ;visualizations low ;low quality ;quality content ;content heavily ;heavily skewed ;skewed easier ;easier topics ;topics sorting ;sorting sha ;sha principal ;principal applications ;applications algorithm ;algorithm visualization ;visualization research ;research education ;education potential ;potential benefits ;benefits researchers ;researchers based ;based expectations ;expectations algo ;algo rithm ;rithm visualization ;visualization uncover ;uncover unknown ;unknown features ;features algorithms ;algorithms researcher ;researcher visualization ;visualization recursive ;recursive tower ;tower hanoi ;hanoi algo ;algo rithm ;rithm odd ;odd numbered ;numbered disks ;disks colored ;colored colors ;colors noticed ;noticed disks ;disks color ;color direct ;direct contact ;contact algorithm ;algorithm execution ;execution observation ;observation helped ;helped developing ;developing recursive ;recursive version ;version classic ;classic algorithm ;algorithm bentley ;bentley mcilroy ;mcilroy ben ;ben mentioned ;mentioned algorithm ;algorithm animation ;animation improving ;improving library ;library implementation ;implementation leading ;leading sorting ;sorting algorithm ;algorithm application ;application algorithm ;algorithm visualization ;visualization education ;education seeks ;seeks students ;students learning ;learning algorithms ;algorithms evidence ;evidence effectiveness ;effectiveness decisively ;decisively mixed ;mixed experiments ;experiments register ;register positive ;positive learning ;learning outcomes ;outcomes failed ;failed increasing ;increasing body ;body evidence ;evidence creating ;creating sophisticated ;sophisticated software ;software systems ;systems fact ;fact appears ;appears student ;student involvement ;involvement visualization ;visualization important ;important specific ;specific features ;features visualization ;visualization software ;software experiments ;experiments low ;low tech ;tech visualizations ;visualizations prepared ;prepared students ;students effective ;effective passive ;passive exposure ;exposure sophisticated ;sophisticated software ;software systems ;systems summarize ;summarize successes ;successes research ;research education ;education reported ;reported literature ;literature impressive ;impressive deeper ;deeper understanding ;understanding human ;human perception ;perception images ;images required ;required true ;true potential ;potential algorithm ;algorithm visualization ;visualization fulfilled ;fulfilled summary ;summary kinds ;kinds algorithm ;algorithm efficiency ;efficiency space ;space efficiency ;efficiency fast ;fast algorithm ;algorithm runs ;runs space ;space efficiency ;efficiency deals ;deals extra ;extra space ;space requires ;requires algorithm ;algorithm efficiency ;efficiency principally ;principally measured ;measured function ;function input ;input size ;size counting ;counting times ;times basic ;basic operation ;operation executed ;executed basic ;basic operation ;operation contributes ;contributes running ;running typically ;typically consuming ;consuming operation ;operation algorithm ;algorithm innermost ;innermost loop ;loop algorithms ;algorithms running ;running differ ;differ considerably ;considerably inputs ;inputs size ;size leading ;leading worst ;worst case ;case efficiency ;efficiency average ;average case ;case efficiency ;efficiency case ;case efficiency ;efficiency established ;established framework ;framework analyzing ;analyzing efficiency ;efficiency primarily ;primarily grounded ;grounded growth ;growth algorithm ;algorithm running ;running input ;input size ;size infinity ;infinity notations ;notations asymptotic ;asymptotic orders ;orders growth ;growth functions ;functions expressing ;expressing algorithm ;algorithm efficiencies ;efficiencies large ;large algorithms ;algorithms fall ;fall classes ;classes constant ;constant logarithmic ;logarithmic linear ;linear linearithmic ;linearithmic quadratic ;quadratic cubic ;cubic exponential ;exponential main ;main tool ;tool analyzing ;analyzing efficiency ;efficiency nonrecursive ;nonrecursive algorithm ;algorithm set ;set sum ;sum expressing ;expressing executions ;executions basic ;basic operation ;operation ascertain ;ascertain sum ;sum growth ;growth main ;main tool ;tool analyzing ;analyzing efficiency ;efficiency recursive ;recursive algorithm ;algorithm set ;set recurrence ;recurrence relation ;relation expressing ;expressing executions ;executions basic ;basic operation ;operation ascertain ;ascertain solution ;solution growth ;growth succinctness ;succinctness recursive ;recursive algorithm ;algorithm mask ;mask inefficiency ;inefficiency fibonacci ;fibonacci numbers ;numbers important ;important sequence ;sequence integers ;integers element ;element equal ;equal sum ;sum predecessors ;predecessors algorithms ;algorithms computing ;computing fibonacci ;fibonacci numbers ;numbers drastically ;drastically efficiencies ;efficiencies empirical ;empirical analysis ;analysis algorithm ;algorithm performed ;performed running ;running implementing ;implementing algorithm ;algorithm sample ;sample inputs ;inputs analyzing ;analyzing data ;data observed ;observed basic ;basic operation ;operation physical ;physical running ;running involves ;involves generating ;generating pseudorandom ;pseudorandom numbers ;numbers applicability ;applicability algorithm ;algorithm principal ;principal strength ;strength approach ;approach dependence ;dependence results ;results instance ;instance sample ;sample main ;main weakness ;weakness algorithm ;algorithm visualization ;visualization images ;images convey ;convey information ;information algorithms ;algorithms principal ;principal variations ;variations algorithm ;algorithm visualization ;visualization static ;static algorithm ;algorithm visualization ;visualization dynamic ;dynamic algorithm ;algorithm visualization ;visualization called ;called algorithm ;algorithm animation ;idea ghost ;ghost spoken ;spoken charles ;charles dickens ;dickens dynamic ;dynamic programming ;programming algorithm ;algorithm design ;design technique ;technique inter ;inter esting ;esting history ;history invented ;invented prominent ;prominent mathematician ;mathematician richard ;richard bellman ;bellman general ;general method ;method optimizing ;optimizing multistage ;multistage decision ;decision pro ;pro cesses ;cesses word ;word programming ;programming technique ;technique stands ;stands planning ;planning refer ;refer programming ;programming proving ;proving important ;important tool ;tool applied ;applied mathematics ;mathematics dynamic ;dynamic programming ;programming tually ;tually considered ;considered science ;science circles ;circles general ;general algorithm ;algorithm design ;design technique ;technique special ;special types ;types optimization ;optimization problems ;problems view ;view tech ;tech nique ;nique dynamic ;dynamic programming ;programming technique ;technique solving ;solving problems ;problems overlapping ;overlapping subproblems ;subproblems typically ;typically subproblems ;subproblems arise ;arise recurrence ;recurrence relating ;relating problem ;problem solution ;solution solutions ;solutions smaller ;smaller subproblems ;subproblems solving ;solving overlapping ;overlapping subproblems ;subproblems dynamic ;dynamic programming ;programming suggests ;suggests solving ;solving smaller ;smaller subproblems ;subproblems recording ;recording results ;results table ;table solution ;solution original ;original problem ;problem obtained ;obtained technique ;technique illustrated ;illustrated revisiting ;revisiting fibonacci ;fibonacci numbers ;numbers dis ;dis cussed ;cussed section ;section read ;read section ;section discussion ;discussion beautiful ;beautiful topic ;topic feel ;feel temptation ;temptation read ;read succumb ;succumb fibonacci ;fibonacci numbers ;numbers elements ;elements sequence ;sequence defined ;defined simple ;simple recurrence ;recurrence initial ;initial conditions ;conditions recurrence ;recurrence directly ;directly compute ;compute nth ;nth fibonacci ;fibonacci recompute ;recompute values ;values function ;function times ;times figure ;figure problem ;problem computing ;computing expressed ;expressed terms ;terms smaller ;smaller overlapping ;overlapping subproblems ;subproblems computing ;computing simply ;simply elements ;elements dimensional ;dimensional array ;array consecutive ;consecutive values ;values starting ;starting view ;view initial ;initial conditions ;conditions equation ;equation producing ;producing elements ;elements element ;element array ;array single ;single loop ;loop pseudocode ;pseudocode simple ;simple algorithm ;algorithm section ;section fact ;fact extra ;extra array ;array accomplish ;accomplish task ;task recording ;recording values ;values elements ;elements fibonacci ;fibonacci sequence ;sequence problem ;problem exercises ;exercises phenomenon ;phenomenon unusual ;unusual counter ;counter examples ;examples chapter ;chapter straightforward ;straightforward application ;application dynamic ;dynamic programming ;programming interpreted ;interpreted special ;special variety ;variety space ;space dynamic ;dynamic programming ;programming algorithm ;algorithm fined ;fined extra ;extra space ;space algorithms ;algorithms compute ;compute nth ;nth fibonacci ;fibonacci computing ;computing preceding ;preceding elements ;elements sequence ;sequence section ;section typical ;typical algorithm ;algorithm based ;based classic ;classic dynamic ;dynamic programming ;programming approach ;approach solve ;solve smaller ;smaller subproblems ;subproblems problem ;problem variation ;variation dynamic ;dynamic programming ;programming approach ;approach seeks ;seeks solving ;solving unnecessary ;unnecessary subproblems ;subproblems technique ;technique illustrated ;illustrated section ;section exploits ;exploits called ;called memory ;memory functions ;functions considered ;considered variation ;variation dynamic ;dynamic programming ;programming classical ;classical version ;version dynamic ;dynamic programming ;programming variation ;variation crucial ;crucial designing ;designing algorithm ;algorithm remains ;remains deriving ;deriving recurrence ;recurrence relating ;relating solution ;solution problem ;problem solutions ;solutions smaller ;smaller subproblems ;subproblems availability ;availability equation ;equation computing ;computing nth ;nth fibonacci ;fibonacci exceptions ;exceptions majority ;majority dynamic ;dynamic programming ;programming applications ;applications deal ;deal optimiza ;optimiza tion ;tion problems ;problems mention ;mention general ;general principle ;principle underlines ;underlines applications ;applications richard ;richard bellman ;bellman called ;called principle ;principle optimality ;optimality terms ;terms original ;original formulation ;formulation optimal ;optimal solution ;solution instance ;instance optimization ;optimization problem ;problem composed ;composed optimal ;optimal solutions ;solutions subin ;subin stances ;stances principle ;principle optimality ;optimality holds ;holds rare ;rare fails ;fails finding ;finding longest ;longest simple ;simple path ;path graph ;graph applicability ;applicability problem ;problem checked ;checked principal ;principal difficulty ;difficulty developing ;developing dynamic ;dynamic ming ;ming algorithm ;algorithm sections ;sections exercises ;exercises chapter ;chapter standard ;standard examples ;examples dynamic ;dynamic programming ;programming algorithms ;algorithms section ;section fact ;fact invented ;invented independently ;independently discovery ;discovery dynamic ;dynamic programming ;programming viewed ;viewed examples ;examples technique ;technique applications ;applications numerous ;numerous applications ;applications range ;range optimal ;optimal breaking ;breaking text ;text lines ;lines baa ;baa image ;image resizing ;resizing avi ;avi variety ;variety applications ;applications sophisticated ;sophisticated engineering ;engineering problems ;problems ber ;ber basic ;basic examples ;examples goal ;goal section ;section dynamic ;dynamic programming ;programming typical ;typical examples ;examples coin ;coin row ;row problem ;problem row ;row coins ;coins values ;values positive ;positive integers ;integers necessarily ;necessarily distinct ;distinct goal ;goal maximum ;maximum money ;money subject ;subject constraint ;constraint coins ;coins adjacent ;adjacent initial ;initial row ;row picked ;picked maximum ;maximum picked ;picked row ;row coins ;coins derive ;derive recurrence ;recurrence partition ;partition allowed ;allowed coin ;coin selections ;selections groups ;groups coin ;coin largest ;largest group ;group equal ;equal nth ;nth coin ;coin maximum ;maximum coins ;coins maximum ;maximum group ;group equal ;equal definition ;definition recurrence ;recurrence subject ;subject obvious ;obvious initial ;initial conditions ;conditions max ;max compute ;compute filling ;filling row ;row table ;table left ;left manner ;manner similar ;similar nth ;nth fibonacci ;fibonacci algorithm ;algorithm fib ;fib section ;section algorithm ;algorithm coinrow ;coinrow applies ;applies formula ;formula maximum ;maximum money ;money picked ;picked coin ;coin row ;row picking ;picking adjacent ;adjacent coins ;coins input ;input array ;array positive ;positive integers ;integers indicating ;indicating coin ;coin values ;values output ;output maximum ;maximum money ;money picked ;picked max ;max application ;application algorithm ;algorithm coin ;coin row ;row denominations ;denominations shown ;shown figure ;figure yields ;yields maximum ;maximum pointing ;pointing index ;index max ;max index ;index max ;max index ;index max ;max index ;index max ;max index ;index max ;max figure ;figure solving ;solving coin ;coin row ;row problem ;problem dynamic ;dynamic programming ;programming coin ;coin row ;row fact ;fact solved ;solved problem ;problem coins ;coins row ;row maximum ;maximum coins ;coins maximum ;maximum total ;total computations ;computations possibilities ;possibilities produced ;produced maxima ;maxima formula ;formula application ;application formula ;formula sum ;sum means ;means coin ;coin optimal ;optimal solution ;solution moving ;moving computing ;computing maximum ;maximum produced ;produced sum ;sum means ;means coin ;coin optimal ;optimal solution ;solution finally ;finally maximum ;maximum computing ;computing produced ;produced implying ;implying coin ;coin optimal ;optimal solution ;solution coin ;coin optimal ;optimal solution ;solution repeating ;repeating computations ;computations backtracing ;backtracing information ;information terms ;terms larger ;larger recorded ;recorded extra ;extra array ;array values ;values computed ;computed coinrow ;coinrow largest ;largest money ;money picked ;picked coins ;coins composing ;composing optimal ;optimal set ;set takes ;takes space ;space superior ;superior alternatives ;alternatives straightforward ;straightforward topdown ;topdown application ;application recurrence ;recurrence solving ;solving problem ;problem exhaustive ;exhaustive problem ;problem section ;section exercises ;exercises making ;making problem ;problem general ;general instance ;instance problem ;problem minimum ;minimum coins ;coins denominations ;denominations coin ;coin denominations ;denominations united ;united states ;states countries ;countries simple ;simple efficient ;efficient algorithm ;algorithm discussed ;discussed chapter ;chapter dynamic ;dynamic programming ;programming algorithm ;algorithm general ;general case ;case assuming ;assuming availability ;availability unlimited ;unlimited quantities ;quantities coins ;coins denominations ;denominations minimum ;minimum coins ;coins values ;values convenient ;convenient define ;define obtained ;obtained adding ;adding coin ;coin denomination ;denomination denominations ;denominations select ;select minimizing ;minimizing constant ;constant smallest ;smallest recurrence ;recurrence min ;min ndj ;ndj compute ;compute filling ;filling row ;row table ;table left ;left manner ;manner similar ;similar coin ;coin row ;row problem ;problem computing ;computing table ;table entry ;entry requires ;requires finding ;finding minimum ;minimum numbers ;numbers algorithm ;algorithm changemaking ;changemaking applies ;applies dynamic ;dynamic programming ;programming minimum ;minimum coins ;coins denominations ;denominations input ;input positive ;positive integer ;integer array ;array increasing ;increasing positive ;positive integers ;integers indicating ;indicating coin ;coin denominations ;denominations output ;output minimum ;minimum coins ;coins temp ;temp min ;min temp ;temp application ;application algorithm ;algorithm denominations ;denominations shown ;shown figure ;figure yields ;yields coins ;coins space ;space efficiencies ;efficiencies algorithm ;algorithm min ;min figure ;figure application ;application algorithm ;algorithm mincoinchange ;mincoinchange coin ;coin denominations ;denominations coins ;coins optimal ;optimal solution ;solution backtrace ;backtrace computa ;computa tions ;tions denominations ;denominations produced ;produced minima ;minima formula ;formula instance ;instance considered ;considered application ;application formula ;formula minimum ;minimum produced ;produced minimum ;minimum produced ;produced coin ;coin denomination ;denomination minimum ;minimum coin ;coin set ;set coin ;coin collecting ;collecting problem ;problem coins ;coins cells ;cells board ;board coin ;coin cell ;cell robot ;robot located ;located upper ;upper left ;left cell ;cell board ;board coins ;coins bring ;bring cell ;cell robot ;robot cell ;cell current ;current location ;location robot ;robot visits ;visits cell ;cell coin ;coin picks ;picks coin ;coin design ;design algorithm ;algorithm maximum ;maximum coins ;coins robot ;robot path ;path largest ;largest coins ;coins robot ;robot bring ;bring cell ;cell ith ;ith row ;row column ;column board ;board cell ;cell adjacent ;adjacent cell ;cell adjacent ;adjacent cell ;cell left ;left largest ;largest numbers ;numbers coins ;coins brought ;brought cells ;cells adjacent ;adjacent cells ;cells row ;row adjacent ;adjacent cells ;cells left ;left cells ;cells column ;column cells ;cells assume ;assume equal ;equal nonexistent ;nonexistent neighbors ;neighbors largest ;largest coins ;coins robot ;robot bring ;bring cell ;cell maximum ;maximum numbers ;numbers coin ;coin cell ;cell words ;words formula ;formula max ;max cij ;cij coin ;coin cell ;cell cij ;cij formulas ;formulas table ;table values ;values row ;row column ;column typical ;typical dynamic ;dynamic programming ;programming algorithms ;algorithms involving ;involving dimensional ;dimensional tables ;tables algorithm ;algorithm robotcoincollection ;robotcoincollection applies ;applies dynamic ;dynamic programming ;programming compute ;compute largest ;largest coins ;coins robot ;robot board ;board starting ;starting moving ;moving upper ;upper left ;left corner ;corner input ;input matrix ;matrix elements ;elements equal ;equal cells ;cells coin ;coin output ;output largest ;largest coins ;coins robot ;robot bring ;bring cell ;cell max ;max algorithm ;algorithm illustrated ;illustrated figure ;figure coin ;coin setup ;setup figure ;figure computing ;computing formula ;formula cell ;cell table ;table takes ;takes constant ;constant efficiency ;efficiency algorithm ;algorithm space ;space efficiency ;efficiency tracing ;tracing computations ;computations backward ;backward makes ;makes optimal ;optimal path ;path optimal ;optimal path ;path cell ;cell adjacent ;adjacent cell ;cell optimal ;optimal path ;path cell ;cell adjacent ;adjacent cell ;cell left ;left cell ;cell direction ;direction yields ;yields optimal ;optimal paths ;paths instance ;instance figure ;figure shown ;shown figure ;figure ties ;ties optimal ;optimal path ;path obtained ;obtained figure ;figure coins ;coins dynamic ;dynamic programming ;programming algorithm ;algorithm results ;results paths ;paths coins ;coins maximum ;maximum coins ;coins exercises ;exercises dynamic ;dynamic programming ;programming common ;common conquer ;conquer principal ;principal difference ;difference solve ;solve instance ;instance coin ;coin row ;row problem ;problem efficiency ;efficiency solving ;solving coin ;coin row ;row problem ;problem straight ;straight forward ;forward application ;application recurrence ;recurrence exponential ;exponential efficiency ;efficiency solving ;solving coin ;coin row ;row problem ;problem exhaustive ;exhaustive exponential ;exponential apply ;apply dynamic ;dynamic programming ;programming algorithm ;algorithm solutions ;solutions making ;making problem ;problem denominations ;denominations modify ;modify dynamic ;dynamic programming ;programming algorithm ;algorithm coin ;coin collecting ;collecting problem ;problem cells ;cells board ;board inaccessible ;inaccessible robot ;robot apply ;apply algorithm ;algorithm board ;board inaccessible ;inaccessible cells ;cells shown ;shown optimal ;optimal paths ;paths board ;board rod ;rod cutting ;cutting problem ;problem design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm fol ;fol lowing ;lowing problem ;problem maximum ;maximum total ;total sale ;sale price ;price obtained ;obtained cutting ;cutting rod ;rod units ;units integer ;integer length ;length pieces ;pieces sale ;sale price ;price piece ;piece units ;units space ;space efficiencies ;efficiencies algorithm ;algorithm shortest ;shortest path ;path counting ;counting chess ;chess rook ;rook horizontally ;horizontally vertically ;vertically square ;square row ;row column ;column chessboard ;chessboard shortest ;shortest paths ;paths rook ;rook corner ;corner chessboard ;chessboard diagonally ;diagonally corner ;corner length ;length path ;path measured ;measured squares ;squares passes ;passes squares ;squares solve ;solve problem ;problem dynamic ;dynamic programming ;programming algorithm ;algorithm elementary ;elementary combinatorics ;combinatorics minimum ;minimum sum ;sum descent ;descent positive ;positive integers ;integers arranged ;arranged equilateral ;equilateral triangle ;triangle numbers ;numbers base ;base shown ;shown figure ;figure problem ;problem smallest ;smallest sum ;sum descent ;descent triangle ;triangle apex ;apex base ;base sequence ;sequence adjacent ;adjacent numbers ;numbers shown ;shown figure ;figure circles ;circles design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm problem ;problem efficiency ;efficiency binomial ;binomial coefficient ;coefficient design ;design efficient ;efficient algorithm ;algorithm computing ;computing bino ;bino mial ;mial coefficient ;coefficient multiplications ;multiplications space ;space efficiencies ;efficiencies algorithm ;algorithm longest ;longest path ;path dag ;dag design ;design efficient ;efficient algorithm ;algorithm finding ;finding length ;length longest ;longest path ;path dag ;dag problem ;problem important ;important prototype ;prototype dynamic ;dynamic programming ;programming applications ;applications determines ;determines minimal ;minimal needed ;needed completing ;completing project ;project comprising ;comprising precedence ;precedence constrained ;constrained tasks ;tasks coin ;coin row ;row problem ;problem discussed ;discussed section ;section problem ;problem finding ;finding longest ;longest path ;path dag ;dag maximum ;maximum square ;square submatrix ;submatrix boolean ;boolean matrix ;matrix largest ;largest square ;square submatrix ;submatrix elements ;elements zeros ;zeros design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm efficiency ;efficiency algorithm ;algorithm finding ;finding largest ;largest free ;free square ;square area ;area screen ;screen selecting ;selecting construction ;construction site ;site world ;world series ;series odds ;odds teams ;teams playing ;playing series ;series games ;games teams ;teams wins ;wins games ;games assume ;assume probability ;probability winning ;winning game ;game equal ;equal probability ;probability losing ;losing game ;game ties ;ties probability ;probability winning ;winning series ;series games ;games win ;win series ;series games ;games win ;win series ;series set ;set recurrence ;recurrence relation ;relation dynamic ;dynamic programming ;programming algorithm ;algorithm probability ;probability team ;team winning ;winning game ;game series ;series proba ;proba bility ;bility winning ;winning game ;game write ;write pseudocode ;pseudocode dynamic ;dynamic programming ;programming algorithm ;algorithm solving ;solving problem ;problem determine ;determine space ;space efficiencies ;efficiencies knapsack ;knapsack problem ;problem memory ;memory functions ;functions section ;section designing ;designing dynamic ;dynamic programming ;programming algorithm ;algorithm knapsack ;knapsack problem ;problem items ;items weights ;weights values ;values knapsack ;knapsack capacity ;capacity valuable ;valuable subset ;subset items ;items knapsack ;knapsack problem ;problem introduced ;introduced section ;section discussed ;discussed solving ;solving exhaustive ;exhaustive assume ;assume weights ;weights knapsack ;knapsack capacity ;capacity positive ;positive integers ;integers item ;item values ;values integers ;integers design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm derive ;derive recurrence ;recurrence relation ;relation expresses ;expresses solution ;solution instance ;instance knapsack ;knapsack problem ;problem terms ;terms solutions ;solutions smaller ;smaller subinstances ;subinstances instance ;instance defined ;defined items ;items weights ;weights values ;values knapsack ;knapsack capacity ;capacity optimal ;optimal solution ;solution instance ;instance valuable ;valuable subset ;subset items ;items knapsack ;knapsack capacity ;capacity subsets ;subsets items ;items knapsack ;knapsack capacity ;capacity categories ;categories ith ;ith item ;item subsets ;subsets ith ;ith item ;item optimal ;optimal subset ;subset definition ;definition subsets ;subsets ith ;ith item ;item optimal ;optimal subset ;subset item ;item optimal ;optimal subset ;subset items ;items fits ;fits knapsack ;knapsack capacity ;capacity optimal ;optimal subset ;subset optimal ;optimal solution ;solution feasible ;feasible subsets ;subsets items ;items maximum ;maximum values ;values ith ;ith item ;item knapsack ;knapsack optimal ;optimal subset ;subset selected ;selected items ;items optimal ;optimal subset ;subset selected ;selected items ;items observations ;observations lead ;lead recurrence ;recurrence max ;max convenient ;convenient define ;define initial ;initial conditions ;conditions goal ;goal maximal ;maximal subset ;subset items ;items knapsack ;knapsack capacity ;capacity optimal ;optimal subset ;subset figure ;figure illustrates ;illustrates values ;values involved ;involved equations ;equations compute ;compute entry ;entry ith ;ith row ;row column ;column compute ;compute maximum ;maximum entry ;entry previous ;previous row ;row column ;column sum ;sum entry ;entry previous ;previous row ;row columns ;columns left ;left table ;table filled ;filled row ;row column ;column goal ;goal figure ;figure table ;table solving ;solving knapsack ;knapsack problem ;problem dynamic ;dynamic programming ;programming capacity ;capacity figure ;figure solving ;solving instance ;instance knapsack ;knapsack problem ;problem dynamic ;dynamic programming ;programming algorithm ;algorithm instance ;instance data ;data item ;item weight ;weight capacity ;capacity dynamic ;dynamic programming ;programming table ;table filled ;filled applying ;applying formulas ;formulas shown ;shown figure ;figure maximal ;maximal composition ;composition optimal ;optimal subset ;subset backtracing ;backtracing computations ;computations entry ;entry table ;table item ;item included ;included optimal ;optimal solution ;solution optimal ;optimal subset ;subset filling ;filling remaining ;remaining units ;units knapsack ;knapsack capacity ;capacity item ;item optimal ;optimal subset ;subset item ;item optimal ;optimal selection ;selection leaves ;leaves element ;element remaining ;remaining composition ;composition similarly ;similarly item ;item final ;final optimal ;optimal solution ;solution item ;item efficiency ;efficiency space ;space efficiency ;efficiency algorithm ;algorithm needed ;needed composition ;composition optimal ;optimal solution ;solution asked ;asked prove ;prove assertions ;assertions exercises ;exercises memory ;memory functions ;functions discussed ;discussed beginning ;beginning chapter ;chapter illustrated ;illustrated subsequent ;subsequent sections ;sections dynamic ;dynamic programming ;programming deals ;deals problems ;problems solutions ;solutions recurrence ;recurrence relation ;relation overlapping ;overlapping subproblems ;subproblems direct ;direct approach ;approach finding ;finding solution ;solution recurrence ;recurrence leads ;leads algorithm ;algorithm solves ;solves common ;common subproblems ;subproblems inefficient ;inefficient typically ;typically exponential ;exponential worse ;worse classic ;classic dynamic ;dynamic programming ;programming approach ;approach works ;works fills ;fills table ;table solutions ;solutions smaller ;smaller subproblems ;subproblems solved ;solved unsatisfying ;unsatisfying aspect ;aspect approach ;approach solutions ;solutions smaller ;smaller subproblems ;subproblems solution ;solution problem ;problem drawback ;drawback approach ;approach natural ;natural combine ;combine strengths ;strengths approaches ;approaches goal ;goal method ;method solves ;solves subproblems ;subproblems method ;method exists ;exists based ;based memory ;memory functions ;functions method ;method solves ;solves problem ;problem manner ;manner addition ;addition maintains ;maintains table ;table kind ;kind dynamic ;dynamic programming ;programming algorithm ;algorithm initially ;initially table ;table entries ;entries initialized ;initialized special ;special null ;null symbol ;symbol calculated ;calculated method ;method checks ;checks entry ;entry table ;table entry ;entry null ;null simply ;simply retrieved ;retrieved table ;table computed ;computed recursive ;recursive result ;result recorded ;recorded table ;table algorithm ;algorithm implements ;implements idea ;idea knapsack ;knapsack problem ;problem initializing ;initializing table ;table recursive ;recursive function ;function called ;called items ;items knapsack ;knapsack capacity ;capacity algorithm ;algorithm mfknapsack ;mfknapsack implements ;implements memory ;memory function ;function method ;method knapsack ;knapsack problem ;problem input ;input nonnegative ;nonnegative integer ;integer indicating ;indicating items ;items considered ;considered nonnegative ;nonnegative integer ;integer indicating ;indicating knapsack ;knapsack capacity ;capacity output ;output optimal ;optimal feasible ;feasible subset ;subset items ;items global ;global variables ;variables input ;input arrays ;arrays eights ;eights alues ;alues table ;table entries ;entries initialized ;initialized row ;row column ;column initialized ;initialized weights ;weights mfknapsack ;mfknapsack max ;max mfknapsack ;mfknapsack values ;values mfknapsack ;mfknapsack weights ;weights apply ;apply memory ;memory function ;function method ;method instance ;instance considered ;considered table ;table figure ;figure results ;results nontrivial ;nontrivial values ;values row ;row column ;column computed ;computed capacity ;capacity figure ;figure solving ;solving instance ;instance knapsack ;knapsack problem ;problem memory ;memory function ;function algorithm ;algorithm nontrivial ;nontrivial entry ;entry retrieved ;retrieved recomputed ;recomputed larger ;larger instances ;instances proportion ;proportion entries ;entries significantly ;significantly larger ;larger general ;general constant ;constant factor ;factor gain ;gain memory ;memory function ;function method ;method knapsack ;knapsack problem ;problem efficiency ;efficiency class ;class algorithm ;algorithm significant ;significant improvement ;improvement expected ;expected dynamic ;dynamic programming ;programming algorithms ;algorithms computation ;computation takes ;takes constant ;constant mind ;mind memory ;memory function ;function algorithm ;algorithm space ;space efficient ;efficient space ;space efficient ;efficient version ;version algorithm ;algorithm exercises ;exercises apply ;apply dynamic ;dynamic programming ;programming algorithm ;algorithm instance ;instance knapsack ;knapsack problem ;problem item ;item weight ;weight capacity ;capacity optimal ;optimal subsets ;subsets instance ;instance general ;general table ;table generated ;generated dynamic ;dynamic ming ;ming algorithm ;algorithm optimal ;optimal subset ;subset knapsack ;knapsack problem ;problem instance ;instance write ;write pseudocode ;pseudocode dynamic ;dynamic programming ;programming algorithm ;algorithm knapsack ;knapsack problem ;problem write ;write pseudocode ;pseudocode algorithm ;algorithm finds ;finds composition ;composition optimal ;optimal subset ;subset table ;table generated ;generated dynamic ;dynamic programming ;programming algorithm ;algorithm knapsack ;knapsack problem ;problem dynamic ;dynamic programming ;programming algorithm ;algorithm knapsack ;knapsack prob ;prob lem ;lem prove ;prove efficiency ;efficiency space ;space efficiency ;efficiency needed ;needed composition ;composition optimal ;optimal subset ;subset filled ;filled dynamic ;dynamic programming ;programming table ;table true ;true false ;false sequence ;sequence values ;values row ;row dynamic ;dynamic programming ;programming table ;table knapsack ;knapsack problem ;problem nondecreasing ;nondecreasing true ;true false ;false sequence ;sequence values ;values column ;column dynamic ;dynamic ming ;ming table ;table knapsack ;knapsack problem ;problem nondecreasing ;nondecreasing design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm version ;version knapsack ;knapsack problem ;problem unlimited ;unlimited quantities ;quantities copies ;copies item ;item kinds ;kinds efficiency ;efficiency algorithm ;algorithm apply ;apply memory ;memory function ;function method ;method instance ;instance knapsack ;knapsack problem ;problem entries ;entries dynamic ;dynamic programming ;programming table ;table computed ;computed memory ;memory function ;function method ;method retrieved ;retrieved recomputation ;recomputation prove ;prove efficiency ;efficiency class ;class memory ;memory function ;function algorithm ;algorithm knap ;knap problem ;problem algorithm ;algorithm problem ;problem memory ;memory function ;function approach ;approach unattractive ;unattractive problem ;problem computing ;computing binomial ;binomial coefficient ;coefficient formula ;formula write ;write research ;research applications ;applications dynamic ;dynamic programming ;programming finding ;finding longest ;longest common ;common subsequence ;subsequence sequences ;sequences optimal ;optimal string ;string editing ;editing minimal ;minimal triangulation ;triangulation polygon ;polygon optimal ;optimal binary ;binary trees ;trees binary ;binary tree ;tree important ;important data ;data structures ;structures science ;science principal ;principal applications ;applications implement ;implement dictionary ;dictionary set ;set elements ;elements operations ;operations searching ;searching insertion ;insertion deletion ;deletion probabilities ;probabilities figure ;figure binary ;binary trees ;trees keys ;keys searching ;searching elements ;elements set ;set accumulated ;accumulated data ;data searches ;searches natural ;natural pose ;pose optimal ;optimal binary ;binary tree ;tree average ;average comparisons ;comparisons smallest ;smallest simplicity ;simplicity limit ;limit discussion ;discussion minimizing ;minimizing average ;average comparisons ;comparisons successful ;successful method ;method extended ;extended unsuccessful ;unsuccessful searches ;searches keys ;keys searched ;searched probabilities ;probabilities figure ;figure depicts ;depicts binary ;binary trees ;trees keys ;keys average ;average comparisons ;comparisons successful ;successful trees ;trees fact ;fact optimal ;optimal binary ;binary tree ;tree optimal ;optimal tiny ;tiny optimal ;optimal tree ;tree generating ;generating binary ;binary trees ;trees keys ;keys general ;general algorithm ;algorithm exhaustive ;exhaustive approach ;approach unrealistic ;unrealistic total ;total binary ;binary trees ;trees keys ;keys equal ;equal nth ;nth catalan ;catalan grows ;grows infinity ;infinity fast ;fast problem ;problem section ;section exercises ;exercises distinct ;distinct keys ;keys ordered ;ordered smallest ;smallest largest ;largest probabilities ;probabilities searching ;searching smallest ;smallest average ;average comparisons ;comparisons successful ;successful binary ;binary tree ;tree tij ;tij keys ;keys integer ;integer indices ;indices classic ;classic dynamic ;dynamic programming ;programming approach ;approach values ;values smaller ;smaller instances ;instances problem ;problem interested ;interested derive ;derive recurrence ;recurrence underlying ;underlying dynamic ;dynamic programming ;programming algorithm ;algorithm ways ;ways choose ;choose root ;root keys ;keys binary ;binary tree ;tree figure ;figure root ;root key ;key left ;left subtree ;subtree tik ;tik keys ;keys optimally ;optimally arranged ;arranged subtree ;subtree tkj ;tkj optimal ;optimal bst ;bst figure ;figure binary ;binary tree ;tree bst ;bst root ;root optimal ;optimal binary ;binary subtrees ;subtrees tik ;tik tkj ;tkj keys ;keys optimally ;optimally arranged ;arranged taking ;taking advantage ;advantage principle ;principle optimality ;optimality tree ;tree levels ;levels starting ;starting make ;make comparison ;comparison numbers ;numbers equal ;equal keys ;keys levels ;levels recurrence ;recurrence relation ;relation obtained ;obtained min ;min tik ;tik ikj ;ikj tkj ;tkj min ;min tik ;tik tkj ;tkj ikj ;ikj min ;min ikj ;ikj recurrence ;recurrence min ;min ikj ;ikj assume ;assume formula ;formula interpreted ;interpreted comparisons ;comparisons tree ;tree formula ;formula implies ;implies node ;node binary ;binary tree ;tree goal ;goal figure ;figure table ;table dynamic ;dynamic programming ;programming algorithm ;algorithm constructing ;constructing optimal ;optimal binary ;binary tree ;tree dimensional ;dimensional table ;table figure ;figure shows ;shows values ;values needed ;needed comput ;comput ing ;ing formula ;formula row ;row columns ;columns left ;left column ;column rows ;rows row ;row arrows ;arrows pairs ;pairs sums ;sums computed ;computed smallest ;smallest recorded ;recorded suggests ;suggests filling ;filling table ;table diagonals ;diagonals starting ;starting zeros ;zeros main ;main diagonal ;diagonal probabilities ;probabilities moving ;moving upper ;upper corner ;corner algorithm ;algorithm sketched ;sketched computes ;computes average ;average comparisons ;comparisons successful ;successful searches ;searches optimal ;optimal binary ;binary tree ;tree optimal ;optimal tree ;tree maintain ;maintain dimensional ;dimensional table ;table minimum ;minimum achieved ;achieved table ;table shape ;shape table ;table figure ;figure filled ;filled manner ;manner starting ;starting entries ;entries table ;table filled ;filled entries ;entries indices ;indices roots ;roots optimal ;optimal subtrees ;subtrees makes ;makes reconstruct ;reconstruct optimal ;optimal tree ;tree entire ;entire set ;set illustrate ;illustrate algorithm ;algorithm applying ;applying key ;key set ;set beginning ;beginning section ;section key ;key probability ;probability initial ;initial tables ;tables main ;main table ;table root ;root table ;table compute ;compute min ;min binary ;binary trees ;trees keys ;keys root ;root optimal ;optimal tree ;tree index ;index average ;average comparisons ;comparisons successful ;successful tree ;tree finish ;finish computations ;computations exercises ;exercises final ;final tables ;tables main ;main table ;table root ;root table ;table average ;average key ;key comparisons ;comparisons optimal ;optimal tree ;tree equal ;equal root ;root optimal ;optimal tree ;tree key ;key left ;left subtree ;subtree keys ;keys subtree ;subtree key ;key specific ;specific structure ;structure subtrees ;subtrees roots ;roots consulting ;consulting root ;root table ;table root ;root optimal ;optimal tree ;tree left ;left child ;child root ;root onenode ;onenode tree ;tree root ;root node ;node optimal ;optimal tree ;tree key ;key figure ;figure presents ;presents optimal ;optimal tree ;tree entirety ;entirety figure ;figure optimal ;optimal binary ;binary tree ;tree pseudocode ;pseudocode dynamic ;dynamic programming ;programming algorithm ;algorithm optimalbst ;optimalbst finds ;finds optimal ;optimal binary ;binary tree ;tree dynamic ;dynamic programming ;programming input ;input array ;array probabilities ;probabilities sorted ;sorted keys ;keys output ;output average ;average comparisons ;comparisons successful ;successful searches ;searches optimal ;optimal bst ;bst table ;table subtrees ;subtrees roots ;roots optimal ;optimal bst ;bst diagonal ;diagonal minval ;minval kmin ;kmin sum ;sum minval ;minval sum ;sum algorithm ;algorithm space ;space efficiency ;efficiency quadratic ;quadratic efficiency ;efficiency version ;version algorithm ;algorithm cubic ;cubic careful ;careful analysis ;analysis shows ;shows entries ;entries root ;root table ;table nondecreasing ;nondecreasing row ;row column ;column limits ;limits values ;values range ;range makes ;makes running ;running algorithm ;algorithm exercises ;exercises finish ;finish computations ;computations started ;started section ;section constructing ;constructing optimal ;optimal binary ;binary tree ;tree efficiency ;efficiency algorithm ;algorithm optimalbst ;optimalbst cubic ;cubic space ;space efficiency ;efficiency algorithm ;algorithm optimalbst ;optimalbst quadratic ;quadratic write ;write pseudocode ;pseudocode linear ;linear algorithm ;algorithm generates ;generates optimal ;optimal binary ;binary tree ;tree root ;root table ;table devise ;devise compute ;compute sums ;sums dynamic ;dynamic programming ;programming algorithm ;algorithm constructing ;constructing optimal ;optimal binary ;binary tree ;tree constant ;constant sum ;sum true ;true false ;false root ;root optimal ;optimal binary ;binary tree ;tree key ;key highest ;highest probability ;probability construct ;construct optimal ;optimal binary ;binary tree ;tree set ;set keys ;keys equally ;equally searched ;searched average ;average comparisons ;comparisons successful ;successful tree ;tree distinct ;distinct binary ;binary trees ;trees constructed ;constructed set ;set orderable ;orderable keys ;keys satisfies ;satisfies recurrence ;recurrence relation ;relation solution ;solution recurrence ;recurrence catalan ;catalan numbers ;numbers verify ;verify assertion ;assertion growth ;growth implication ;implication exhaustive ;exhaustive algorithm ;algorithm constructing ;constructing optimal ;optimal binary ;binary tree ;tree design ;design algorithm ;algorithm finding ;finding optimal ;optimal binary ;binary tree ;tree generalize ;generalize optimal ;optimal binary ;binary algorithm ;algorithm taking ;taking account ;account unsuc ;unsuc cessful ;cessful searches ;searches write ;write pseudocode ;pseudocode memory ;memory function ;function optimal ;optimal binary ;binary tree ;tree problem ;problem limit ;limit function ;function finding ;finding smallest ;smallest key ;key comparisons ;comparisons successful ;successful matrix ;matrix chain ;chain multiplication ;multiplication problem ;problem minimizing ;minimizing total ;total multiplications ;multiplications computing ;computing product ;product matrices ;matrices dimensions ;dimensions assume ;assume intermediate ;intermediate products ;products matrices ;matrices computed ;computed brute ;brute definition ;definition based ;based algorithm ;algorithm matrices ;matrices multiplications ;multiplications differ ;differ factor ;factor ways ;ways compute ;compute product ;product matrices ;matrices design ;design dynamic ;dynamic programming ;programming algorithm ;algorithm finding ;finding optimal ;optimal multiplying ;multiplying matrices ;matrices warshall ;warshall floyd ;floyd algorithms ;algorithms section ;section algorithms ;algorithms warshall ;warshall algorithm ;algorithm computing ;computing transitive ;transitive closure ;closure directed ;directed graph ;graph floyd ;floyd algorithm ;algorithm pairs ;pairs shortest ;shortest paths ;paths problem ;problem algorithms ;algorithms based ;based essentially ;essentially idea ;idea exploit ;exploit relationship ;relationship problem ;problem simpler ;simpler smaller ;smaller version ;version warshall ;warshall floyd ;floyd published ;published algorithms ;algorithms mention ;mention ing ;ing dynamic ;dynamic programming ;programming algorithms ;algorithms dynamic ;dynamic programming ;programming flavor ;flavor considered ;considered applications ;applications tech ;tech nique ;nique warshall ;warshall algorithm ;algorithm recall ;recall adjacency ;adjacency matrix ;matrix aij ;aij directed ;directed graph ;graph boolean ;boolean matrix ;matrix ith ;ith row ;row column ;column directed ;directed edge ;edge ith ;ith vertex ;vertex interested ;interested matrix ;matrix information ;information existence ;existence directed ;directed paths ;paths arbitrary ;arbitrary lengths ;lengths vertices ;vertices graph ;graph matrix ;matrix called ;called transitive ;transitive closure ;closure digraph ;digraph determine ;determine constant ;constant vertex ;vertex reachable ;reachable ith ;ith vertex ;vertex application ;application examples ;examples spreadsheet ;spreadsheet cell ;cell changed ;changed spreadsheet ;spreadsheet software ;software cells ;cells affected ;affected spreadsheet ;spreadsheet modeled ;modeled digraph ;digraph vertices ;vertices represent ;represent spreadsheet ;spreadsheet cells ;cells edges ;edges cell ;cell dependencies ;dependencies transitive ;transitive closure ;closure information ;information software ;software engineering ;engineering transitive ;transitive closure ;closure investigating ;investigating data ;data control ;control dependencies ;dependencies inheritance ;inheritance testing ;testing oriented ;oriented software ;software electronic ;electronic engineering ;engineering redundancy ;redundancy identification ;identification generation ;generation digital ;digital circuits ;circuits definition ;definition transitive ;transitive closure ;closure directed ;directed graph ;graph vertices ;vertices defined ;defined boolean ;boolean matrix ;matrix tij ;tij element ;element ith ;ith row ;row column ;column exists ;exists nontrivial ;nontrivial path ;path directed ;directed path ;path positive ;positive length ;length ith ;ith vertex ;vertex tij ;tij digraph ;digraph adjacency ;adjacency matrix ;matrix transitive ;transitive closure ;closure figure ;figure generate ;generate transitive ;transitive closure ;closure digraph ;digraph depth ;depth breadth ;breadth performing ;performing traversal ;traversal starting ;starting ith ;ith figure ;figure digraph ;digraph adjacency ;adjacency matrix ;matrix transitive ;transitive closure ;closure vertex ;vertex information ;information vertices ;vertices reachable ;reachable columns ;columns ith ;ith row ;row transitive ;transitive closure ;closure traversal ;traversal vertex ;vertex starting ;starting yields ;yields transitive ;transitive closure ;closure entirety ;entirety method ;method traverses ;traverses digraph ;digraph times ;times algorithm ;algorithm exists ;exists called ;called warshall ;warshall algorithm ;algorithm stephen ;stephen warshall ;warshall discovered ;discovered war ;war convenient ;convenient assume ;assume digraph ;digraph vertices ;vertices rows ;rows columns ;columns adjacency ;adjacency matrix ;matrix numbered ;numbered warshall ;warshall algorithm ;algorithm constructs ;constructs transitive ;transitive closure ;closure series ;series boolean ;boolean matrices ;matrices information ;information directed ;directed paths ;paths digraph ;digraph specifically ;specifically element ;element ith ;ith row ;row column ;column matrix ;matrix equal ;equal exists ;exists directed ;directed path ;path positive ;positive length ;length ith ;ith vertex ;vertex intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher series ;series starts ;starts intermediate ;intermediate vertices ;vertices paths ;paths adjacency ;adjacency matrix ;matrix digraph ;digraph recall ;recall adjacency ;adjacency matrix ;matrix information ;information edge ;edge paths ;paths intermediate ;intermediate vertices ;vertices information ;information paths ;paths vertex ;vertex intermediate ;intermediate freedom ;freedom speak ;speak general ;general subsequent ;subsequent matrix ;matrix series ;series vertex ;vertex intermediate ;intermediate paths ;paths predecessor ;predecessor matrix ;matrix series ;series reflects ;reflects paths ;paths vertices ;vertices digraph ;digraph intermediate ;intermediate digraph ;digraph transitive ;transitive closure ;closure central ;central algorithm ;algorithm compute ;compute elements ;elements matrix ;matrix predecessor ;predecessor series ;series element ;element ith ;ith row ;row column ;column matrix ;matrix equal ;equal means ;means exists ;exists path ;path ith ;ith vertex ;vertex intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher figure ;figure changing ;changing zeros ;zeros warshall ;warshall algorithm ;algorithm situations ;situations path ;path inter ;inter mediate ;mediate vertices ;vertices kth ;kth vertex ;vertex path ;path intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher equal ;equal possibility ;possibility path ;path kth ;kth vertex ;vertex intermediate ;intermediate vertices ;vertices loss ;loss generality ;generality assume ;assume occurs ;occurs case ;case create ;create path ;path property ;property simply ;simply eliminating ;eliminating vertices ;vertices occurrences ;occurrences caveat ;caveat path ;path rewritten ;rewritten vertices ;vertices numbered ;numbered vertices ;vertices numbered ;numbered representation ;representation means ;means exists ;exists path ;path intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher means ;means exists ;exists path ;path intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher proved ;proved easy ;easy converse ;converse assertion ;assertion true ;true formula ;formula generating ;generating elements ;elements matrix ;matrix elements ;elements matrix ;matrix formula ;formula heart ;heart warshall ;warshall algorithm ;algorithm formula ;formula implies ;implies generating ;generating elements ;elements matrix ;matrix elements ;elements matrix ;matrix convenient ;convenient applying ;applying warshall ;warshall algorithm ;algorithm element ;element rij ;rij remains ;remains element ;element rij ;rij changed ;changed element ;element row ;row column ;column element ;element column ;column row ;row illustrated ;illustrated figure ;figure application ;application warshall ;warshall algorithm ;algorithm digraph ;digraph figure ;figure shown ;shown figure ;figure existence ;existence paths ;paths intermediate ;intermediate vertices ;vertices adjacency ;adjacency matrix ;matrix boxed ;boxed row ;row column ;column existence ;existence paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher vertex ;vertex path ;path boxed ;boxed row ;row column ;column existence ;existence paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher paths ;paths boxed ;boxed row ;row column ;column existence ;existence paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher paths ;paths boxed ;boxed row ;row column ;column existence ;existence paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher paths ;paths figure ;figure application ;application warshall ;warshall algorithm ;algorithm digraph ;digraph shown ;shown bold ;bold pseudocode ;pseudocode warshall ;warshall algorithm ;algorithm warshall ;warshall implements ;implements warshall ;warshall algorithm ;algorithm computing ;computing transitive ;transitive closure ;closure input ;input adjacency ;adjacency matrix ;matrix digraph ;digraph vertices ;vertices output ;output transitive ;transitive closure ;closure digraph ;digraph observations ;observations warshall ;warshall algorithm ;algorithm remarkably ;remarkably succinct ;succinct efficiency ;efficiency fact ;fact sparse ;sparse graphs ;graphs represented ;represented adjacency ;adjacency lists ;lists traversal ;traversal based ;based algorithm ;algorithm figure ;figure digraph ;digraph weight ;weight matrix ;matrix distance ;distance matrix ;matrix mentioned ;mentioned beginning ;beginning section ;section asymptotic ;asymptotic efficiency ;efficiency warshall ;warshall algorithm ;algorithm speed ;speed implementation ;implementation warshall ;warshall algorithm ;algorithm inputs ;inputs restructuring ;restructuring innermost ;innermost loop ;loop problem ;problem section ;section exercises ;exercises make ;make algorithm ;algorithm run ;run faster ;faster matrix ;matrix rows ;rows bit ;bit strings ;strings bitwise ;bitwise operation ;operation modern ;modern languages ;languages space ;space efficiency ;efficiency warshall ;warshall algorithm ;algorithm situation ;situation similar ;similar computing ;computing fibonacci ;fibonacci dynamic ;dynamic programming ;programming algorithms ;algorithms matrices ;matrices recording ;recording intermediate ;intermediate results ;results algorithm ;algorithm fact ;fact unnecessary ;unnecessary problem ;problem section ;section exercises ;exercises asks ;asks avoiding ;avoiding wasteful ;wasteful memory ;memory finally ;finally underlying ;underlying idea ;idea warshall ;warshall algorithm ;algorithm applied ;applied general ;general problem ;problem finding ;finding lengths ;lengths shortest ;shortest paths ;paths weighted ;weighted graphs ;graphs floyd ;floyd algorithm ;algorithm pairs ;pairs shortest ;shortest paths ;paths problem ;problem weighted ;weighted connected ;connected graph ;graph undirected ;undirected directed ;directed pairs ;pairs shortest ;shortest paths ;paths problem ;problem asks ;asks distances ;distances lengths ;lengths shortest ;shortest paths ;paths vertex ;vertex vertices ;vertices variations ;variations problem ;problem involving ;involving shortest ;shortest paths ;paths graphs ;graphs important ;important applications ;applications communications ;communications transportation ;transportation networks ;networks operations ;operations research ;research studied ;studied years ;years recent ;recent applications ;applications pairs ;pairs shortest ;shortest path ;path problem ;problem precomputing ;precomputing distances ;distances motion ;motion planning ;planning games ;games convenient ;convenient lengths ;lengths shortest ;shortest paths ;paths matrix ;matrix called ;called distance ;distance matrix ;matrix element ;element dij ;dij ith ;ith row ;row column ;column matrix ;matrix length ;length shortest ;shortest path ;path ith ;ith vertex ;vertex figure ;figure generate ;generate distance ;distance matrix ;matrix algorithm ;algorithm similar ;similar warshall ;warshall algorithm ;algorithm called ;called floyd ;floyd algorithm ;algorithm inventor ;inventor robert ;robert floyd ;floyd applicable ;applicable undirected ;undirected directed ;directed weighted ;weighted graphs ;graphs provided ;provided floyd ;floyd explicitly ;explicitly referenced ;referenced warshall ;warshall paper ;paper presenting ;presenting algorithm ;algorithm flo ;flo years ;years earlier ;earlier bernard ;bernard roy ;roy published ;published essentially ;essentially algorithm ;algorithm proceedings ;proceedings french ;french academy ;academy sciences ;sciences roy ;roy negative ;negative length ;length distance ;distance vertices ;vertices arbitrarily ;arbitrarily small ;small repeating ;repeating times ;times algorithm ;algorithm enhanced ;enhanced lengths ;lengths shortest ;shortest paths ;paths vertex ;vertex pairs ;pairs shortest ;shortest paths ;paths problem ;problem section ;section exercises ;exercises floyd ;floyd algorithm ;algorithm computes ;computes distance ;distance matrix ;matrix weighted ;weighted graph ;graph vertices ;vertices series ;series matrices ;matrices lengths ;lengths shortest ;shortest paths ;paths constraints ;constraints paths ;paths considered ;considered matrix ;matrix specifically ;specifically element ;element ith ;ith row ;row column ;column matrix ;matrix equal ;equal length ;length shortest ;shortest path ;path paths ;paths ith ;ith vertex ;vertex intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher series ;series starts ;starts intermediate ;intermediate vertices ;vertices paths ;paths simply ;simply weight ;weight matrix ;matrix graph ;graph matrix ;matrix series ;series lengths ;lengths shortest ;shortest paths ;paths vertices ;vertices intermediate ;intermediate distance ;distance matrix ;matrix sought ;sought warshall ;warshall algorithm ;algorithm compute ;compute elements ;elements matrix ;matrix predecessor ;predecessor series ;series element ;element ith ;ith row ;row column ;column matrix ;matrix means ;means equal ;equal length ;length shortest ;shortest path ;path paths ;paths ith ;ith vertex ;vertex intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher partition ;partition paths ;paths disjoint ;disjoint subsets ;subsets kth ;kth vertex ;vertex intermediate ;intermediate paths ;paths subset ;subset intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher shortest ;shortest definition ;definition matrices ;matrices length ;length shortest ;shortest path ;path subset ;subset graph ;graph negative ;negative length ;length limit ;limit attention ;attention paths ;paths subset ;subset vertex ;vertex intermediate ;intermediate vertex ;vertex visiting ;visiting path ;path length ;length paths ;paths vertices ;vertices numbered ;numbered vertices ;vertices numbered ;numbered words ;words paths ;paths path ;path intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher path ;path intermediate ;intermediate vertex ;vertex numbered ;numbered higher ;higher situation ;situation depicted ;depicted symbolically ;symbolically figure ;figure length ;length shortest ;shortest path ;path paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher equal ;equal length ;length shortest ;shortest path ;path paths ;paths intermediate ;intermediate figure ;figure underlying ;underlying idea ;idea floyd ;floyd algorithm ;algorithm vertices ;vertices numbered ;numbered higher ;higher equal ;equal length ;length shortest ;shortest path ;path paths ;paths kth ;kth vertex ;vertex equal ;equal taking ;taking account ;account lengths ;lengths shortest ;shortest paths ;paths subsets ;subsets leads ;leads recurrence ;recurrence min ;min wij ;wij element ;element row ;row column ;column current ;current distance ;distance matrix ;matrix replaced ;replaced sum ;sum elements ;elements row ;row column ;column row ;row sum ;sum smaller ;smaller current ;current application ;application floyd ;floyd algorithm ;algorithm graph ;graph figure ;figure illustrated ;illustrated figure ;figure pseudocode ;pseudocode floyd ;floyd algorithm ;algorithm takes ;takes advantage ;advantage fact ;fact matrix ;matrix sequence ;sequence written ;written predecessor ;predecessor algorithm ;algorithm floyd ;floyd implements ;implements floyd ;floyd algorithm ;algorithm pairs ;pairs shortest ;shortest paths ;paths problem ;problem input ;input weight ;weight matrix ;matrix graph ;graph negative ;negative length ;length output ;output distance ;distance matrix ;matrix shortest ;shortest paths ;paths lengths ;lengths overwritten ;overwritten min ;min efficiency ;efficiency floyd ;floyd algorithm ;algorithm cubic ;cubic efficiency ;efficiency warshall ;warshall algorithm ;algorithm chapter ;chapter dijkstra ;dijkstra algorithm ;algorithm method ;method finding ;finding shortest ;shortest paths ;paths lengths ;lengths shortest ;shortest paths ;paths intermediate ;intermediate vertices ;vertices simply ;simply weight ;weight matrix ;matrix lengths ;lengths shortest ;shortest paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher shortest ;shortest paths ;paths lengths ;lengths shortest ;shortest paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher shortest ;shortest path ;path lengths ;lengths shortest ;shortest paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher shortest ;shortest paths ;paths lengths ;lengths shortest ;shortest paths ;paths intermediate ;intermediate vertices ;vertices numbered ;numbered higher ;higher shortest ;shortest path ;path figure ;figure application ;application floyd ;floyd algorithm ;algorithm digraph ;digraph shown ;shown updated ;updated elements ;elements shown ;shown bold ;bold exercises ;exercises apply ;apply warshall ;warshall algorithm ;algorithm transitive ;transitive closure ;closure digraph ;digraph fined ;fined adjacency ;adjacency matrix ;matrix prove ;prove efficiency ;efficiency warshall ;warshall algorithm ;algorithm cubic ;cubic efficiency ;efficiency class ;class warshall ;warshall algorithm ;algorithm inferior ;inferior traversal ;traversal based ;based algorithm ;algorithm sparse ;sparse graphs ;graphs represented ;represented adjacency ;adjacency lists ;lists implement ;implement warshall ;warshall algorithm ;algorithm extra ;extra memory ;memory storing ;storing elements ;elements algorithm ;algorithm intermediate ;intermediate matrices ;matrices restructure ;restructure innermost ;innermost loop ;loop algorithm ;algorithm warshall ;warshall make ;make run ;run faster ;faster inputs ;inputs rewrite ;rewrite pseudocode ;pseudocode warshall ;warshall algorithm ;algorithm assuming ;assuming matrix ;matrix rows ;rows represented ;represented bit ;bit strings ;strings bitwise ;bitwise operation ;operation formed ;formed warshall ;warshall algorithm ;algorithm determine ;determine digraph ;digraph dag ;dag directed ;directed acyclic ;acyclic graph ;graph good ;good algorithm ;algorithm problem ;problem good ;good idea ;idea apply ;apply warshall ;warshall algorithm ;algorithm transitive ;transitive closure ;closure undirected ;undirected graph ;graph solve ;solve pairs ;pairs shortest ;shortest path ;path problem ;problem digraph ;digraph weight ;weight matrix ;matrix prove ;prove matrix ;matrix sequence ;sequence floyd ;floyd algorithm ;algorithm written ;written predecessor ;predecessor graph ;graph digraph ;digraph negative ;negative weights ;weights floyd ;floyd algorithm ;algorithm yield ;yield result ;result enhance ;enhance floyd ;floyd algorithm ;algorithm shortest ;shortest paths ;paths lengths ;lengths jack ;jack straws ;straws game ;game jack ;jack straws ;straws plastic ;plastic wooden ;wooden straws ;straws dumped ;dumped table ;table players ;players disturbing ;disturbing straws ;straws concerned ;concerned pairs ;pairs straws ;straws connected ;connected path ;path touching ;touching straws ;straws endpoints ;endpoints straws ;straws dumped ;dumped large ;large piece ;piece graph ;graph paper ;paper determine ;determine pairs ;pairs straws ;straws connected ;connected touching ;touching connecting ;connecting straws ;straws connected ;connected indirectly ;indirectly connected ;connected straws ;straws east ;east central ;central regionals ;regionals acm ;acm international ;international collegiate ;collegiate programming ;programming contest ;contest summary ;summary dynamic ;dynamic programming ;programming technique ;technique solving ;solving problems ;problems overlapping ;overlapping subproblems ;subproblems typically ;typically subproblems ;subproblems arise ;arise recurrence ;recurrence relating ;relating solution ;solution problem ;problem solutions ;solutions smaller ;smaller subproblems ;subproblems dynamic ;dynamic programming ;programming suggests ;suggests solving ;solving smaller ;smaller subproblem ;subproblem recording ;recording results ;results table ;table solution ;solution original ;original problem ;problem obtained ;obtained applicability ;applicability dynamic ;dynamic programming ;programming optimization ;optimization problem ;problem requires ;requires problem ;problem principle ;principle optimality ;optimality optimal ;optimal solution ;solution instances ;instances optimal ;optimal solutions ;solutions subinstances ;subinstances problems ;problems making ;making problem ;problem arbitrary ;arbitrary coin ;coin denominations ;denominations solved ;solved dynamic ;dynamic programming ;programming solving ;solving knapsack ;knapsack problem ;problem dynamic ;dynamic programming ;programming algorithm ;algorithm exemplifies ;exemplifies application ;application technique ;technique difficult ;difficult problems ;problems combinatorial ;combinatorial optimization ;optimization memory ;memory function ;function technique ;technique seeks ;seeks combine ;combine strengths ;strengths topdown ;topdown approaches ;approaches solving ;solving problems ;problems overlapping ;overlapping subproblems ;subproblems solving ;solving fashion ;fashion subproblems ;subproblems problem ;problem recording ;recording solutions ;solutions table ;table dynamic ;dynamic programming ;programming constructing ;constructing optimal ;optimal binary ;binary tree ;tree set ;set keys ;keys probabilities ;probabilities searching ;searching warshall ;warshall algorithm ;algorithm finding ;finding transitive ;transitive closure ;closure floyd ;floyd algorithm ;algorithm pairs ;pairs shortest ;shortest paths ;paths problem ;problem based ;based idea ;idea interpreted ;interpreted application ;application dynamic ;dynamic programming ;programming technique ;science removed ;removed brute ;brute sword ;sword crowbar ;crowbar edward ;edward lytton ;lytton leila ;leila chapter ;chapter thing ;thing robert ;robert byrne ;byrne master ;master pool ;pool billiards ;billiards player ;player writer ;writer introducing ;introducing framework ;framework methods ;methods algorithm ;algorithm analysis ;analysis preceding ;preceding chapter ;chapter ready ;ready embark ;embark discussion ;discussion algorithm ;algorithm design ;design strategies ;strategies chapters ;chapters devoted ;devoted design ;design strategy ;strategy subject ;subject chapter ;chapter brute ;brute important ;important special ;special case ;case exhaustive ;exhaustive brute ;brute straightforward ;straightforward approach ;approach solving ;solving problem ;problem directly ;directly based ;based problem ;problem statement ;statement definitions ;definitions concepts ;concepts involved ;involved implied ;implied strategy ;strategy definition ;definition intellect ;intellect prescription ;prescription brute ;brute approach ;approach brute ;brute strategy ;strategy easiest ;easiest apply ;apply exponentiation ;exponentiation problem ;problem compute ;compute nonzero ;nonzero nonnegative ;nonnegative integer ;integer problem ;problem trivial ;trivial vehicle ;vehicle illustrating ;illustrating algorithm ;algorithm design ;design strategies ;strategies brute ;brute computing ;computing mod ;mod large ;large integers ;integers principal ;principal component ;component leading ;leading encryption ;encryption algorithm ;algorithm definition ;definition exponentiation ;exponentiation times ;times suggests ;suggests simply ;simply computing ;computing multiplying ;multiplying times ;times encountered ;encountered brute ;brute algorithms ;algorithms consecutive ;consecutive integer ;integer checking ;checking algorithm ;algorithm computing ;computing gcd ;gcd section ;section definition ;definition based ;based algorithm ;algorithm matrix ;matrix multiplication ;multiplication section ;section examples ;examples chapter ;chapter algorithms ;algorithms based ;based brute ;brute approach ;approach rarely ;rarely source ;source clever ;clever efficient ;efficient algorithms ;algorithms brute ;brute proach ;proach overlooked ;overlooked important ;important algorithm ;algorithm design ;design strategy ;strategy strategies ;strategies brute ;brute applicable ;applicable wide ;wide riety ;riety problems ;problems fact ;fact general ;general approach ;approach difficult ;difficult problems ;problems tackle ;tackle impor ;impor tant ;tant problems ;problems sorting ;sorting searching ;searching matrix ;matrix multiplication ;multiplication string ;string matching ;matching brute ;brute approach ;approach yields ;yields reasonable ;reasonable algorithms ;algorithms practi ;practi cal ;cal limitation ;limitation instance ;instance size ;size expense ;expense designing ;designing efficient ;efficient algorithm ;algorithm unjustifiable ;unjustifiable instances ;instances prob ;prob lem ;lem solved ;solved brute ;brute algorithm ;algorithm solve ;solve instances ;instances acceptable ;acceptable speed ;speed fourth ;fourth inefficient ;inefficient general ;general brute ;brute algo ;algo rithm ;rithm solving ;solving small ;small size ;size instances ;instances problem ;problem finally ;finally brute ;brute algorithm ;algorithm important ;important theoretical ;theoretical educational ;educational pur ;pur pose ;pose yardstick ;yardstick efficient ;efficient alternatives ;alternatives solving ;solving problem ;problem selection ;selection sort ;sort section ;section application ;application brute ;brute approach ;approach problem ;problem sorting ;sorting orderable ;orderable items ;items numbers ;numbers characters ;characters alphabet ;alphabet character ;character strings ;strings rearrange ;rearrange nondecreasing ;nondecreasing mentioned ;mentioned section ;section dozens ;dozens algorithms ;algorithms developed ;developed solving ;solving important ;important problem ;problem learned ;learned forget ;forget problem ;problem afresh ;afresh mind ;mind unburdened ;unburdened previous ;previous knowledge ;knowledge sorting ;sorting algo ;algo rithms ;rithms straightforward ;straightforward method ;method solving ;solving sorting ;sorting problem ;problem reasonable ;reasonable people ;people algorithms ;algorithms discussed ;discussed selection ;selection sort ;sort prime ;prime candidates ;candidates selection ;selection sort ;sort selection ;selection sort ;sort scanning ;scanning entire ;entire smallest ;smallest element ;element exchange ;exchange element ;element putting ;putting smallest ;smallest element ;element final ;final position ;position sorted ;sorted scan ;scan starting ;starting element ;element smallest ;smallest elements ;elements exchange ;exchange element ;element putting ;putting smallest ;smallest element ;element final ;final position ;position generally ;generally ith ;ith algorithm ;algorithm searches ;searches smallest ;smallest item ;item elements ;elements swaps ;swaps amin ;amin final ;final positions ;positions elements ;elements passes ;passes sorted ;sorted pseudocode ;pseudocode algorithm ;algorithm simplicity ;simplicity assumes ;assumes implemented ;implemented array ;array algorithm ;algorithm selectionsort ;selectionsort sorts ;sorts array ;array selection ;selection sort ;sort input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array sorted ;sorted nondecreasing ;nondecreasing min ;min swap ;swap min ;min action ;action algorithm ;algorithm illustrated ;illustrated figure ;figure analysis ;analysis selection ;selection sort ;sort straightforward ;straightforward input ;input size ;size elements ;elements basic ;basic operation ;operation key ;key comparison ;comparison min ;min times ;times executed ;executed depends ;depends array ;array size ;size sum ;sum figure ;figure sorting ;sorting selection ;selection sort ;sort line ;line corresponds ;corresponds iteration ;iteration algorithm ;algorithm tail ;tail vertical ;vertical element ;element bold ;bold smallest ;smallest element ;element elements ;elements left ;left vertical ;vertical final ;final positions ;positions considered ;considered subsequent ;subsequent iterations ;iterations encountered ;encountered sum ;sum analyzing ;analyzing algorithm ;algorithm section ;section compute ;compute sum ;sum distributing ;distributing summation ;summation symbol ;symbol immediately ;immediately sum ;sum decreasing ;decreasing integers ;integers selection ;selection sort ;sort algorithm ;algorithm inputs ;inputs key ;key swaps ;swaps precisely ;precisely repetition ;repetition loop ;loop property ;property distinguishes ;distinguishes selection ;selection sort ;sort positively ;positively sorting ;sorting algorithms ;algorithms sort ;sort brute ;brute application ;application sorting ;sorting problem ;problem adjacent ;adjacent elements ;elements exchange ;exchange repeatedly ;repeatedly bubbling ;bubbling largest ;largest element ;element position ;position bubbles ;bubbles largest ;largest element ;element passes ;passes sorted ;sorted sort ;sort represented ;represented diagram ;diagram final ;final positions ;positions pseudocode ;pseudocode algorithm ;algorithm bubblesort ;bubblesort sorts ;sorts array ;array sort ;sort input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array sorted ;sorted nondecreasing ;nondecreasing swap ;swap action ;action algorithm ;algorithm illustrated ;illustrated figure ;figure key ;key comparisons ;comparisons sort ;sort version ;version arrays ;arrays size ;size obtained ;obtained sum ;sum identical ;identical sum ;sum selection ;selection sort ;sort figure ;figure passes ;passes sort ;sort line ;line shown ;shown swap ;swap elements ;elements vertical ;vertical final ;final positions ;positions considered ;considered subsequent ;subsequent iterations ;iterations algorithm ;algorithm key ;key swaps ;swaps depends ;depends input ;input worst ;worst case ;case decreasing ;decreasing arrays ;arrays key ;key comparisons ;comparisons sworst ;sworst case ;case application ;application brute ;brute strategy ;strategy version ;version algorithm ;algorithm obtained ;obtained improved ;improved modest ;modest effort ;effort specifically ;specifically crude ;crude version ;version sort ;sort exploiting ;exploiting observation ;observation makes ;makes exchanges ;exchanges sorted ;sorted algorithm ;algorithm problem ;problem section ;section exercises ;exercises version ;version runs ;runs faster ;faster inputs ;inputs worst ;worst average ;average cases ;cases fact ;fact elementary ;elementary sorting ;sorting methods ;methods sort ;sort inferior ;inferior choice ;choice catchy ;catchy heard ;heard general ;general lesson ;lesson learned ;learned important ;important repeating ;repeating application ;application brute ;brute approach ;approach results ;results algorithm ;algorithm improved ;improved modest ;modest effort ;effort exercises ;exercises algorithm ;algorithm considered ;considered appli ;appli cation ;cation brute ;brute approach ;approach problem ;problem solved ;solved brute ;brute algorithm ;algorithm efficiency ;efficiency brute ;brute algorithm ;algorithm computing ;computing function ;function bits ;bits binary ;binary representation ;representation compute ;compute mod ;mod large ;large positive ;positive integer ;integer circumvent ;circumvent problem ;problem large ;large magnitude ;magnitude algorithms ;algorithms problems ;problems exercises ;exercises algorithm ;algorithm based ;based brute ;brute approach ;approach design ;design brute ;brute algorithm ;algorithm computing ;computing polynomial ;polynomial anxn ;anxn determine ;determine worst ;worst case ;case efficiency ;efficiency class ;class design ;design linear ;linear algorithm ;algorithm designed ;designed problem ;problem design ;design algorithm ;algorithm linear ;linear efficiency ;efficiency problem ;problem network ;network topology ;topology specifies ;specifies computers ;computers printers ;printers devices ;devices connected ;connected network ;network figure ;figure illustrates ;illustrates common ;common topologies ;topologies networks ;networks ring ;ring star ;star fully ;fully connected ;connected mesh ;mesh ring ;ring star ;star fully ;fully connected ;connected mesh ;mesh boolean ;boolean matrix ;matrix supposed ;supposed adjacency ;adjacency matrix ;matrix graph ;graph modeling ;modeling network ;network topologies ;topologies task ;task determine ;determine topologies ;topologies matrix ;matrix represents ;represents design ;design brute ;brute algorithm ;algorithm task ;task efficiency ;efficiency class ;class tetromino ;tetromino tilings ;tilings tetrominoes ;tetrominoes tiles ;tiles squares ;squares types ;types tetrominoes ;tetrominoes shown ;shown straight ;straight tetromino ;tetromino square ;square tetromino ;tetromino tile ;tile overlaps ;overlaps chessboard ;chessboard straight ;straight tetrominoes ;tetrominoes square ;square tetrominoes ;tetrominoes stack ;stack fake ;fake coins ;coins stacks ;stacks identical ;identical coins ;coins stacks ;stacks counterfeit ;counterfeit coins ;coins stacks ;stacks genuine ;genuine coin ;coin weighs ;weighs grams ;grams fake ;fake weighs ;weighs grams ;grams analytical ;analytical scale ;scale determine ;determine exact ;exact weight ;weight coins ;coins devise ;devise brute ;brute algorithm ;algorithm stack ;stack fake ;fake coins ;coins determine ;determine worst ;worst case ;case efficiency ;efficiency class ;class minimum ;minimum weighings ;weighings needed ;needed stack ;stack fake ;fake coins ;coins sort ;sort alphabetical ;alphabetical selection ;selection sort ;sort selection ;selection sort ;sort stable ;stable definition ;definition stable ;stable sorting ;sorting algorithm ;algorithm section ;section implement ;implement selection ;selection sort ;sort linked ;linked lists ;lists efficiency ;efficiency array ;array version ;version sort ;sort alphabetical ;alphabetical sort ;sort prove ;prove sort ;sort makes ;makes exchanges ;exchanges sorted ;sorted algorithm ;algorithm stopped ;stopped write ;write pseudocode ;pseudocode method ;method incorporates ;incorporates improvement ;improvement prove ;prove worst ;worst case ;case efficiency ;efficiency improved ;improved version ;version quadratic ;quadratic sort ;sort stable ;stable alternating ;alternating disks ;disks row ;row disks ;disks colors ;colors dark ;dark light ;light alternate ;alternate dark ;dark light ;light dark ;dark light ;light dark ;dark disks ;disks light ;light disks ;disks left ;left moves ;moves allowed ;allowed make ;make interchange ;interchange positions ;positions neighboring ;neighboring disks ;disks design ;design algorithm ;algorithm solving ;solving puzzle ;puzzle determine ;determine moves ;moves takes ;takes gar ;gar sequential ;sequential brute ;brute string ;string matching ;matching previous ;previous section ;section applications ;applications brute ;brute approach ;approach sorting ;sorting porblem ;porblem discuss ;discuss applications ;applications strategy ;strategy problem ;problem searching ;searching deals ;deals canonical ;canonical problem ;problem searching ;searching item ;item deals ;deals string ;string matching ;matching problem ;problem sequential ;sequential encountered ;encountered brute ;brute algorithm ;algorithm general ;general searching ;searching problem ;problem called ;called sequential ;sequential section ;section algorithm ;algorithm simply ;simply compares ;compares successive ;successive elements ;elements key ;key encountered ;encountered successful ;successful exhausted ;exhausted finding ;finding unsuccessful ;unsuccessful simple ;simple extra ;extra employed ;employed implementing ;implementing sequential ;sequential append ;append key ;key successful ;successful eliminate ;eliminate altogether ;altogether pseudocode ;pseudocode enhanced ;enhanced version ;version algorithm ;algorithm sequentialsearch ;sequentialsearch implements ;implements sequential ;sequential key ;key sentinel ;sentinel input ;input array ;array elements ;elements key ;key output ;output index ;index element ;element equal ;equal element ;element straightforward ;straightforward improvement ;improvement incorporated ;incorporated sequential ;sequential sorted ;sorted searching ;searching stopped ;stopped element ;element greater ;greater equal ;equal key ;key encountered ;encountered sequential ;sequential excellent ;excellent illustration ;illustration brute ;brute proach ;proach characteristic ;characteristic strength ;strength simplicity ;simplicity weakness ;weakness inferior ;inferior effi ;effi ciency ;ciency efficiency ;efficiency results ;results obtained ;obtained section ;section standard ;standard version ;version sequential ;sequential enhanced ;enhanced version ;version slightly ;slightly algorithm ;algorithm remains ;remains linear ;linear worst ;worst average ;average cases ;cases discuss ;discuss searching ;searching algorithms ;algorithms efficiency ;efficiency brute ;brute string ;string matching ;matching recall ;recall string ;string matching ;matching problem ;problem introduced ;introduced section ;section string ;string characters ;characters called ;called text ;text string ;string characters ;characters called ;called pattern ;pattern substring ;substring text ;text matches ;matches pattern ;pattern precisely ;precisely index ;index leftmost ;leftmost character ;character matching ;matching substring ;substring text ;text pattern ;pattern matches ;matches string ;string matching ;matching algorithm ;algorithm simply ;simply working ;working entire ;entire text ;text exhausted ;exhausted brute ;brute algorithm ;algorithm string ;string matching ;matching problem ;problem obvious ;obvious align ;align pattern ;pattern characters ;characters text ;text matching ;matching pairs ;pairs characters ;characters left ;left pairs ;pairs characters ;characters algorithm ;algorithm mismatching ;mismatching pair ;pair encountered ;encountered case ;case shift ;shift pattern ;pattern position ;position resume ;resume character ;character comparisons ;comparisons starting ;starting character ;character pattern ;pattern counterpart ;counterpart text ;text position ;position text ;text beginning ;beginning matching ;matching substring ;substring provided ;provided text ;text positions ;positions indexed ;indexed position ;position characters ;characters entire ;entire pattern ;pattern algorithm ;algorithm make ;make comparisons ;comparisons algorithm ;algorithm bruteforcestringmatch ;bruteforcestringmatch implements ;implements brute ;brute string ;string matching ;matching input ;input array ;array characters ;characters representing ;representing text ;text array ;array characters ;characters representing ;representing pattern ;pattern output ;output index ;index character ;character text ;text starts ;starts matching ;matching substring ;substring unsuccessful ;unsuccessful operation ;operation algorithm ;algorithm illustrated ;illustrated figure ;figure algorithm ;algorithm shifts ;shifts pattern ;pattern single ;single character ;character comparison ;comparison worst ;worst case ;case worse ;worse algorithm ;algorithm make ;make comparisons ;comparisons shifting ;shifting pattern ;pattern problem ;problem section ;section exercises ;exercises asks ;asks specific ;specific situation ;situation worst ;worst case ;case algorithm ;algorithm makes ;makes figure ;figure brute ;brute string ;string matching ;matching pattern ;pattern characters ;characters compared ;compared text ;text counterparts ;counterparts bold ;bold character ;character comparisons ;comparisons puts ;puts class ;class typical ;typical word ;word natural ;natural language ;language text ;text shifts ;shifts comparisons ;comparisons average ;average case ;case efficiency ;efficiency considerably ;considerably worst ;worst case ;case efficiency ;efficiency searching ;searching random ;random texts ;texts shown ;shown linear ;linear sophisticated ;sophisticated efficient ;efficient algorithms ;algorithms string ;string searching ;searching widely ;widely boyer ;boyer moore ;moore outlined ;outlined section ;section simplification ;simplification suggested ;suggested horspool ;horspool exercises ;exercises comparisons ;comparisons sentinel ;sentinel version ;version sequential ;sequential worst ;worst case ;case average ;average case ;case probability ;probability successful ;successful shown ;shown section ;section average ;average key ;key comparisons ;comparisons sequential ;sequential sentinel ;sentinel standard ;standard assumptions ;assumptions inputs ;inputs formula ;formula cavg ;cavg probability ;probability successful ;successful determine ;determine fixed ;fixed values ;values formula ;formula yields ;yields maximum ;maximum cavg ;cavg minimum ;minimum cavg ;cavg gadget ;gadget testing ;testing firm ;firm determine ;determine highest ;highest floor ;floor story ;story headquarters ;headquarters gadget ;gadget fall ;fall breaking ;breaking firm ;firm identical ;identical gadgets ;gadgets experiment ;experiment broken ;broken repaired ;repaired experiment ;experiment completed ;completed remaining ;remaining gadget ;gadget design ;design algorithm ;algorithm efficiency ;efficiency class ;class solve ;solve problem ;problem determine ;determine character ;character comparisons ;comparisons brute ;brute algorithm ;algorithm searching ;searching pattern ;pattern gandhi ;gandhi text ;text life ;life increasing ;increasing speed ;speed assume ;assume length ;length text ;text characters ;characters starts ;starts comparisons ;comparisons successful ;successful unsuccessful ;unsuccessful brute ;brute algorithm ;algorithm searching ;searching patterns ;patterns binary ;binary text ;text zeros ;zeros text ;text length ;length pattern ;pattern length ;length constitutes ;constitutes worst ;worst case ;case input ;input brute ;brute string ;string matching ;matching algorithm ;algorithm character ;character comparisons ;comparisons input ;input solving ;solving string ;string matching ;matching problem ;problem advantage ;advantage comparing ;comparing pattern ;pattern text ;text characters ;characters left ;left problem ;problem counting ;counting text ;text substrings ;substrings cabaaxbya ;cabaaxbya design ;design brute ;brute algorithm ;algorithm problem ;problem determine ;determine effi ;effi ciency ;ciency class ;class design ;design efficient ;efficient algorithm ;algorithm problem ;problem gin ;gin write ;write visualization ;visualization brute ;brute string ;string matching ;matching algorithm ;algorithm word ;word popular ;popular diversion ;diversion united ;united states ;states word ;word puzzles ;puzzles player ;player set ;set words ;words square ;square table ;table filled ;filled single ;single letters ;letters word ;word read ;read horizontally ;horizontally left ;left vertically ;vertically degree ;degree diagonal ;diagonal directions ;directions formed ;formed consecutively ;consecutively adjacent ;adjacent cells ;cells table ;table boundaries ;boundaries read ;read direction ;direction zigzagging ;zigzagging cell ;cell table ;table words ;words word ;word cell ;cell write ;write solving ;solving puzzle ;puzzle battleship ;battleship game ;game write ;write based ;based version ;version brute ;brute pattern ;pattern matching ;matching playing ;playing game ;game battleship ;battleship rules ;rules game ;game opponents ;opponents game ;game case ;case human ;human player ;player game ;game played ;played identical ;identical boards ;boards tables ;tables squares ;squares opponent ;opponent places ;places ships ;ships opponent ;opponent player ;player ships ;ships occupies ;occupies squares ;squares board ;board destroyer ;destroyer squares ;squares submarine ;submarine squares ;squares cruiser ;cruiser squares ;squares battleship ;battleship squares ;squares aircraft ;aircraft carrier ;carrier squares ;squares ship ;ship horizontally ;horizontally vertically ;vertically ships ;ships touching ;touching game ;game played ;played opponents ;opponents taking ;taking turns ;turns shooting ;shooting ships ;ships result ;result shot ;shot displayed ;displayed hit ;hit case ;case hit ;hit player ;player playing ;playing missing ;missing goal ;goal sink ;sink opponent ;opponent ships ;ships opponent ;opponent succeeds ;succeeds sink ;sink ship ;ship squares ;squares occupied ;occupied ship ;ship hit ;hit closest ;closest pair ;pair convex ;convex hull ;hull problems ;problems brute ;brute section ;section straightforward ;straightforward approach ;approach prob ;prob lems ;lems dealing ;dealing finite ;finite set ;set points ;points plane ;plane problems ;problems theoretical ;theoretical arise ;arise important ;important applied ;applied areas ;areas computational ;computational ometry ;ometry operations ;operations research ;research closest ;closest pair ;pair problem ;problem closest ;closest pair ;pair problem ;problem calls ;calls finding ;finding closest ;closest points ;points set ;set points ;points simplest ;simplest variety ;variety problems ;problems computational ;computational geometry ;geometry deals ;deals proximity ;proximity points ;points plane ;plane higher ;higher dimensional ;dimensional spaces ;spaces points ;points represent ;represent physical ;physical objects ;objects airplanes ;airplanes offices ;offices database ;database records ;records statistical ;statistical samples ;samples dna ;dna sequences ;sequences air ;air traffic ;traffic controller ;controller interested ;interested closest ;closest planes ;planes probable ;probable collision ;collision candidates ;candidates regional ;regional postal ;postal service ;service manager ;manager solution ;solution closest ;closest pair ;pair problem ;problem candidate ;candidate office ;office locations ;locations closed ;closed important ;important applications ;applications closest ;closest pair ;pair problem ;problem cluster ;cluster analy ;analy sis ;sis statistics ;statistics based ;based data ;data points ;points hierarchical ;hierarchical cluster ;cluster analysis ;analysis seeks ;seeks orga ;orga nize ;nize hierarchy ;hierarchy clusters ;clusters based ;based similarity ;similarity metric ;metric numerical ;numerical data ;data metric ;metric euclidean ;euclidean distance ;distance text ;text nonnumerical ;nonnumerical data ;data metrics ;metrics hamming ;hamming distance ;distance problem ;problem section ;section ercises ;ercises algorithm ;algorithm begins ;begins element ;element cluster ;cluster merges ;merges successively ;successively larger ;larger clusters ;clusters combining ;combining closest ;closest pair ;pair clusters ;clusters simplicity ;simplicity dimensional ;dimensional case ;case closest ;closest pair ;pair prob ;prob lem ;lem assume ;assume points ;points standard ;standard fashion ;fashion cartesian ;cartesian coordinates ;coordinates distance ;distance points ;points standard ;standard euclidean ;euclidean distance ;distance brute ;brute approach ;approach solving ;solving problem ;problem leads ;leads vious ;vious algorithm ;algorithm compute ;compute distance ;distance pair ;pair distinct ;distinct points ;points pair ;pair smallest ;smallest distance ;distance compute ;compute distance ;distance pair ;pair points ;points pairs ;pairs points ;points pseudocode ;pseudocode computes ;computes distance ;distance closest ;closest points ;points closest ;closest points ;points requires ;requires trivial ;trivial modification ;modification algorithm ;algorithm bruteforceclosestpair ;bruteforceclosestpair finds ;finds distance ;distance closest ;closest points ;points plane ;plane brute ;brute input ;input points ;points output ;output distance ;distance closest ;closest pair ;pair points ;points min ;min sqrt ;sqrt square ;square root ;root basic ;basic operation ;operation algorithm ;algorithm computing ;computing square ;square root ;root age ;age electronic ;electronic calculators ;calculators square ;square root ;root button ;button led ;led computing ;computing square ;square root ;root simple ;simple operation ;operation addition ;addition multiplication ;multiplication starters ;starters integers ;integers square ;square roots ;roots irrational ;irrational numbers ;numbers approximately ;approximately computing ;computing approximations ;approximations trivial ;trivial fact ;fact computing ;computing square ;square roots ;roots loop ;loop avoided ;avoided realize ;realize simply ;simply square ;square root ;root function ;function values ;values smaller ;smaller square ;square root ;root smaller ;smaller square ;square root ;root mathematicians ;mathematicians square ;square root ;root function ;function strictly ;strictly increasing ;increasing basic ;basic operation ;operation algorithm ;algorithm squaring ;squaring times ;times executed ;executed computed ;computed speeding ;speeding innermost ;innermost loop ;loop algorithm ;algorithm decrease ;decrease algorithm ;algorithm running ;running constant ;constant factor ;factor problem ;problem section ;section exercises ;exercises asymptotic ;asymptotic efficiency ;efficiency class ;class chapter ;chapter discuss ;discuss linearithmic ;linearithmic algorithm ;algorithm problem ;problem based ;based sophisticated ;sophisticated design ;design technique ;technique convex ;convex hull ;hull problem ;problem computing ;computing convex ;convex hull ;hull finding ;finding convex ;convex hull ;hull set ;set points ;points plane ;plane higher ;higher dimensional ;dimensional space ;space important ;important people ;people important ;important problems ;problems computational ;computational geometry ;geometry prominence ;prominence variety ;variety applications ;applications problem ;problem solved ;solved larger ;larger task ;task sev ;sev eral ;eral applications ;applications based ;based fact ;fact convex ;convex hulls ;hulls convenient ;convenient approximations ;approximations shapes ;shapes data ;data sets ;sets imation ;imation replacing ;replacing objects ;objects convex ;convex hulls ;hulls speeds ;speeds collision ;collision detection ;detection idea ;idea path ;path planning ;planning mars ;mars mission ;mission rovers ;rovers convex ;convex hulls ;hulls computing ;computing accessibility ;accessibility maps ;maps produced ;produced satellite ;satellite images ;images geographic ;geographic information ;information systems ;systems detecting ;detecting outliers ;outliers statisti ;statisti cal ;cal techniques ;techniques efficient ;efficient algorithm ;algorithm computing ;computing diameter ;diameter set ;set points ;points largest ;largest distance ;distance points ;points set ;set convex ;convex hull ;hull largest ;largest distance ;distance extreme ;extreme points ;points finally ;finally convex ;convex hulls ;hulls important ;important solving ;solving optimization ;optimization problems ;problems extreme ;extreme points ;points set ;set solution ;solution candidates ;candidates definition ;definition convex ;convex set ;set definition ;definition set ;set points ;points finite ;finite infinite ;infinite plane ;plane called ;called convex ;convex points ;points set ;set entire ;entire line ;line segment ;segment endpoints ;endpoints belongs ;belongs set ;set sets ;sets depicted ;depicted figure ;figure convex ;convex straight ;straight line ;line triangle ;triangle rectangle ;rectangle generally ;generally convex ;convex polygon ;polygon circle ;circle entire ;entire plane ;plane sets ;sets depicted ;depicted figure ;figure finite ;finite set ;set distinct ;distinct points ;points boundary ;boundary convex ;convex polygon ;polygon circumference ;circumference examples ;examples sets ;sets convex ;convex ready ;ready notion ;notion convex ;convex hull ;hull intuitively ;intuitively convex ;convex hull ;hull set ;set points ;points plane ;plane smallest ;smallest convex ;convex polygon ;polygon boundary ;boundary formulation ;formulation enthusiasm ;enthusiasm problem ;problem barricading ;barricading sleeping ;sleeping tigers ;tigers shortest ;shortest length ;length interpretation ;interpretation harel ;harel har ;har lively ;lively fenceposts ;fenceposts erected ;erected spots ;spots tigers ;tigers sleep ;sleep tamer ;tamer interpretation ;interpretation notion ;notion points ;points represented ;represented nails ;nails driven ;driven large ;large sheet ;sheet plywood ;plywood representing ;representing plane ;plane rubber ;rubber band ;band nails ;nails snap ;snap convex ;convex hull ;hull area ;area bounded ;bounded snapped ;snapped rubber ;rubber band ;band figure ;figure formal ;formal definition ;definition convex ;convex hull ;hull applicable ;applicable arbitrary ;arbitrary sets ;sets points ;points line ;line definition ;definition convex ;convex hull ;hull set ;set points ;points smallest ;smallest convex ;convex set ;set smallest ;smallest requirement ;requirement means ;means convex ;convex hull ;hull subset ;subset convex ;convex set ;set convex ;convex hull ;hull set ;set points ;points convex ;convex hull ;hull line ;line segment ;segment connecting ;connecting points ;points set ;set triangle ;triangle rectangle ;rectangle generally ;generally convex ;convex polygon ;polygon region ;region set ;set points ;points boundary ;boundary shape ;shape figure ;figure convex ;convex sets ;sets convex ;convex figure ;figure rubber ;rubber band ;band interpretation ;interpretation convex ;convex hull ;hull points ;points line ;line convex ;convex hull ;hull triangle ;triangle vertices ;vertices points ;points line ;line convex ;convex hull ;hull line ;line segment ;segment endpoints ;endpoints points ;points farthest ;farthest convex ;convex hull ;hull larger ;larger set ;set figure ;figure study ;study examples ;examples makes ;makes theorem ;theorem expected ;expected result ;result theorem ;theorem convex ;convex hull ;hull set ;set points ;points line ;line convex ;convex polygon ;polygon vertices ;vertices points ;points line ;line polygon ;polygon degenerates ;degenerates line ;line segment ;segment endpoints ;endpoints points ;points figure ;figure convex ;convex hull ;hull set ;set points ;points convex ;convex polygon ;polygon vertices ;vertices convex ;convex hull ;hull problem ;problem constructing ;constructing convex ;convex hull ;hull set ;set points ;points solve ;solve points ;points vertices ;vertices polygon ;polygon mathematicians ;mathematicians vertices ;vertices polygon ;polygon extreme ;extreme points ;points definition ;definition extreme ;extreme convex ;convex set ;set middle ;middle line ;line segment ;segment endpoints ;endpoints set ;set extreme ;extreme points ;points triangle ;triangle vertices ;vertices extreme ;extreme points ;points circle ;circle points ;points circumference ;circumference extreme ;extreme points ;points convex ;convex hull ;hull set ;set points ;points figure ;figure extreme ;extreme points ;points special ;special properties ;properties points ;points convex ;convex set ;set exploited ;exploited simplex ;simplex method ;method important ;important algorithm ;algorithm discussed ;discussed section ;section algorithm ;algorithm solves ;solves linear ;linear programming ;programming problems ;problems finding ;finding minimum ;minimum maximum ;maximum linear ;linear function ;function variables ;variables subject ;subject linear ;linear constraints ;constraints problem ;problem section ;section exercises ;exercises sections ;sections general ;general discussion ;discussion interested ;interested extreme ;extreme points ;points identification ;identification solves ;solves convex ;convex hull ;hull problem ;problem solve ;solve problem ;problem completely ;completely bit ;bit points ;points set ;set extreme ;extreme points ;points set ;set convex ;convex hull ;hull pairs ;pairs points ;points connected ;connected boundary ;boundary convex ;convex hull ;hull issue ;issue addressed ;addressed listing ;listing extreme ;extreme points ;points clockwise ;clockwise counterclockwise ;counterclockwise solve ;solve convex ;convex hull ;hull problem ;problem brute ;brute manner ;manner frontal ;frontal dismayed ;dismayed convex ;convex hull ;hull problem ;problem obvious ;obvious algorithmic ;algorithmic solution ;solution simple ;simple inefficient ;inefficient algorithm ;algorithm based ;based observation ;observation line ;line segments ;segments making ;making boundary ;boundary convex ;convex hull ;hull line ;line segment ;segment connecting ;connecting points ;points set ;set points ;points convex ;convex hull ;hull boundary ;boundary points ;points set ;set straight ;straight line ;line points ;points verify ;verify property ;property set ;set figure ;figure repeating ;repeating pair ;pair points ;points yields ;yields line ;line segments ;segments make ;make convex ;convex hull ;hull boundary ;boundary elementary ;elementary facts ;facts analytical ;analytical geometry ;geometry needed ;needed implement ;implement algorithm ;algorithm straight ;straight line ;line points ;points coordinate ;coordinate plane ;plane defined ;defined equation ;equation line ;line divides ;divides plane ;plane half ;half planes ;planes points ;points line ;line points ;points line ;line simply ;simply expression ;expression points ;points leave ;leave implementation ;implementation details ;details efficiency ;efficiency algorithm ;algorithm pairs ;pairs distinct ;distinct points ;points efficient ;efficient algorithms ;algorithms important ;important problem ;problem discuss ;discuss exercises ;exercises assuming ;assuming sqrt ;sqrt takes ;takes times ;times longer ;longer oper ;oper ations ;ations innermost ;innermost loop ;loop bruteforceclosestpoints ;bruteforceclosestpoints assumed ;assumed estimate ;estimate faster ;faster algorithm ;algorithm run ;run improvement ;improvement discussed ;discussed section ;section design ;design efficient ;efficient algorithm ;algorithm based ;based brute ;brute strategy ;strategy solve ;solve closest ;closest pair ;pair problem ;problem points ;points real ;real line ;line real ;real numbers ;numbers representing ;representing coordinates ;coordinates villages ;villages located ;located straight ;straight road ;road office ;office built ;built villages ;villages design ;design efficient ;efficient algorithm ;algorithm office ;office location ;location minimizing ;minimizing average ;average distance ;distance villages ;villages office ;office design ;design efficient ;efficient algorithm ;algorithm office ;office location ;location minimizing ;minimizing maximum ;maximum distance ;distance village ;village office ;office sake ;sake simplicity ;simplicity assume ;assume points ;points set ;set line ;line modification ;modification needed ;needed general ;general case ;case left ;left exercises ;exercises alternative ;alternative ways ;ways define ;define distance ;distance points ;points cartesian ;cartesian plane ;plane manhat ;manhat tan ;tan distance ;distance defined ;defined prove ;prove satisfies ;satisfies axioms ;axioms distance ;distance function ;function points ;points iii ;iii sketch ;sketch points ;points cartesian ;cartesian plane ;plane manhattan ;manhattan distance ;distance origin ;origin equal ;equal euclidean ;euclidean distance ;distance true ;true false ;false solution ;solution closest ;closest pair ;pair problem ;problem metrics ;metrics euclidean ;euclidean manhattan ;manhattan hamming ;hamming distance ;distance strings ;strings equal ;equal length ;length defined ;defined positions ;positions symbols ;symbols named ;named richard ;richard hamming ;hamming prominent ;prominent american ;american scientist ;scientist engineer ;engineer introduced ;introduced seminal ;seminal paper ;paper error ;error detecting ;detecting error ;error correcting ;correcting codes ;codes hamming ;hamming distance ;distance axioms ;axioms distance ;distance metric ;metric listed ;listed problem ;problem efficiency ;efficiency class ;class brute ;brute algorithm ;algorithm closest ;closest pair ;pair problem ;problem points ;points strings ;strings symbols ;symbols distance ;distance measured ;measured hamming ;hamming distance ;distance odd ;odd pie ;pie fight ;fight people ;people positioned ;positioned field ;field euclidean ;euclidean plane ;plane unique ;unique nearest ;nearest neighbor ;neighbor person ;person cream ;cream pie ;pie hurls ;hurls pie ;pie nearest ;nearest neighbor ;neighbor assuming ;assuming odd ;odd target ;target true ;true false ;false remains ;remains person ;person hit ;hit pie ;pie car ;car closest ;closest pair ;pair problem ;problem posed ;posed dimensional ;dimensional space ;space euclidean ;euclidean distance ;distance points ;points defined ;defined efficiency ;efficiency class ;class brute ;brute algorithm ;algorithm dimensional ;dimensional closest ;closest pair ;pair problem ;problem convex ;convex hulls ;hulls sets ;sets extreme ;extreme points ;points line ;line segment ;segment square ;square boundary ;boundary square ;square straight ;straight line ;line design ;design linear ;linear algorithm ;algorithm determine ;determine extreme ;extreme points ;points convex ;convex hull ;hull set ;set points ;points plane ;plane modification ;modification brute ;brute algorithm ;algorithm convex ;convex hull ;hull problem ;problem points ;points straight ;straight line ;line write ;write implementing ;implementing brute ;brute algorithm ;algorithm convex ;convex hull ;hull problem ;problem small ;small instance ;instance linear ;linear programming ;programming problem ;problem maximize ;maximize subject ;subject sketch ;sketch cartesian ;cartesian plane ;plane problem ;problem feasible ;feasible region ;region defined ;defined set ;set points ;points satisfying ;satisfying problem ;problem constraints ;constraints region ;region extreme ;extreme points ;points solve ;solve optimization ;optimization problem ;problem theorem ;theorem linear ;linear programming ;programming problem ;problem nonempty ;nonempty bounded ;bounded feasible ;feasible region ;region solution ;solution extreme ;extreme points ;points feasible ;feasible region ;region exhaustive ;exhaustive important ;important problems ;problems require ;require finding ;finding element ;element special ;special property ;property domain ;domain grows ;grows exponentially ;exponentially faster ;faster instance ;instance size ;size typically ;typically problems ;problems arise ;arise situations ;situations involve ;involve explicitly ;explicitly implicitly ;implicitly combinatorial ;combinatorial objects ;objects permutations ;permutations combinations ;combinations subsets ;subsets set ;set problems ;problems optimization ;optimization problems ;problems element ;element maximizes ;maximizes minimizes ;minimizes desired ;desired characteristic ;characteristic path ;path length ;length assignment ;assignment cost ;cost exhaustive ;exhaustive simply ;simply brute ;brute approach ;approach combinatorial ;combinatorial prob ;prob lems ;lems suggests ;suggests generating ;generating element ;element problem ;problem domain ;domain lecting ;lecting constraints ;constraints finding ;finding desired ;desired element ;element optimizes ;optimizes objective ;objective function ;function idea ;idea exhaustive ;exhaustive straightforward ;straightforward implementation ;implementation typically ;typically requires ;requires algorithm ;algorithm generating ;generating combinatorial ;combinatorial objects ;objects dis ;dis cussion ;cussion algorithms ;algorithms chapter ;chapter assume ;assume illustrate ;illustrate exhaustive ;exhaustive applying ;applying important ;important problems ;problems traveling ;traveling salesman ;salesman problem ;problem knapsack ;knapsack problem ;problem assignment ;assignment problem ;problem traveling ;traveling salesman ;salesman problem ;problem traveling ;traveling salesman ;salesman problem ;problem tsp ;tsp intriguing ;intriguing researchers ;researchers years ;years seemingly ;seemingly simple ;simple formulation ;formulation important ;important applications ;applications interesting ;interesting connections ;connections combinatorial ;combinatorial problems ;problems layman ;layman terms ;terms problem ;problem asks ;asks shortest ;shortest set ;set cities ;cities visits ;visits city ;city returning ;returning city ;city started ;started problem ;problem conveniently ;conveniently modeled ;modeled weighted ;weighted graph ;graph vertices ;vertices representing ;representing cities ;cities edge ;edge weights ;weights distances ;distances problem ;problem stated ;stated problem ;problem finding ;finding shortest ;shortest hamiltonian ;hamiltonian circuit ;circuit graph ;graph hamiltonian ;hamiltonian circuit ;circuit defined ;defined passes ;passes vertices ;vertices graph ;graph named ;named irish ;irish mathematician ;mathematician sir ;sir william ;william rowan ;rowan hamilton ;hamilton interested ;interested cycles ;cycles application ;application algebraic ;algebraic discoveries ;discoveries easy ;easy hamiltonian ;hamiltonian circuit ;circuit defined ;defined sequence ;sequence adjacent ;adjacent vertices ;vertices vin ;vin vertex ;vertex sequence ;sequence vertices ;vertices distinct ;distinct assume ;assume loss ;loss generality ;generality circuits ;circuits vertex ;vertex cycles ;cycles tours ;tours generating ;generating permutations ;permutations intermediate ;intermediate cities ;cities compute ;compute lengths ;lengths shortest ;shortest figure ;figure presents ;presents small ;small instance ;instance problem ;problem solution ;solution method ;method inspection ;inspection figure ;figure reveals ;reveals pairs ;pairs tours ;tours differ ;differ direction ;direction cut ;cut vertex ;vertex permutations ;permutations half ;half choose ;choose intermediate ;intermediate vertices ;vertices permutations ;permutations precedes ;precedes implicitly ;implicitly defines ;defines direction ;direction improvement ;improvement brighten ;brighten efficiency ;efficiency picture ;picture total ;total permutations ;permutations needed ;needed makes ;makes exhaustive ;exhaustive approach ;approach impractical ;impractical small ;small values ;values glass ;glass half ;half cutting ;cutting half ;half solve ;solve small ;small instance ;instance problem ;problem investigation ;investigation circuits ;circuits starting ;starting vertex ;vertex permutations ;permutations larger ;larger factor ;factor knapsack ;knapsack problem ;problem algorithmics ;algorithmics items ;items weights ;weights values ;values knapsack ;knapsack capacity ;capacity valuable ;valuable subset ;subset items ;items knapsack ;knapsack idea ;idea putting ;putting shoes ;shoes thief ;thief steal ;steal optimal ;optimal figure ;figure solution ;solution small ;small instance ;instance traveling ;traveling salesman ;salesman problem ;problem exhaustive ;exhaustive valuable ;valuable loot ;loot fits ;fits knapsack ;knapsack plane ;plane valuable ;valuable set ;set items ;items remote ;remote location ;location exceeding ;exceeding plane ;plane capacity ;capacity figure ;figure presents ;presents small ;small instance ;instance knapsack ;knapsack problem ;problem exhaustive ;exhaustive approach ;approach problem ;problem leads ;leads generating ;generating subsets ;subsets set ;set items ;items computing ;computing total ;total weight ;weight subset ;subset feasible ;feasible subsets ;subsets total ;total weight ;weight exceeding ;exceeding knapsack ;knapsack capacity ;capacity finding ;finding subset ;subset largest ;largest solution ;solution instance ;instance figure ;figure subsets ;subsets element ;element set ;set exhaustive ;exhaustive leads ;leads algorithm ;algorithm efficiently ;efficiently individual ;individual subsets ;subsets generated ;generated traveling ;traveling salesman ;salesman knapsack ;knapsack problems ;problems considered ;considered exhaustive ;exhaustive leads ;leads algorithms ;algorithms extremely ;extremely inefficient ;inefficient input ;input fact ;fact problems ;problems examples ;examples socalled ;socalled hard ;hard problems ;problems polynomial ;polynomial algorithm ;algorithm nphard ;nphard problem ;problem scientists ;scientists algorithms ;algorithms important ;important conjecture ;conjecture proven ;proven sophisticated ;sophisticated approaches ;approaches backtracking ;backtracking bound ;bound sections ;sections enable ;enable solve ;solve instances ;instances knapsack ;knapsack item ;item subset ;subset total ;total weight ;weight total ;total feasible ;feasible figure ;figure instance ;instance knapsack ;knapsack problem ;problem solution ;solution exhaustive ;exhaustive information ;information optimal ;optimal selection ;selection bold ;bold similar ;similar problems ;problems exponential ;exponential alternatively ;alternatively approximation ;approximation algorithms ;algorithms section ;section assignment ;assignment problem ;problem solved ;solved exhaustive ;exhaustive people ;people assigned ;assigned execute ;execute jobs ;jobs person ;person job ;job person ;person assigned ;assigned job ;job assigned ;assigned person ;person cost ;cost accrue ;accrue ith ;ith person ;person assigned ;assigned job ;job quantity ;quantity pair ;pair problem ;problem assignment ;assignment minimum ;minimum total ;total cost ;cost small ;small instance ;instance problem ;problem table ;table entries ;entries representing ;representing assignment ;assignment costs ;costs job ;job person ;person easy ;easy instance ;instance assignment ;assignment problem ;problem completely ;completely cost ;cost matrix ;matrix terms ;terms matrix ;matrix problem ;problem select ;select element ;element row ;row matrix ;matrix selected ;selected elements ;elements columns ;columns total ;total sum ;sum selected ;selected elements ;elements smallest ;smallest obvious ;obvious strategy ;strategy finding ;finding solution ;solution works ;works select ;select smallest ;smallest element ;element row ;row smallest ;smallest elements ;elements column ;column fact ;fact smallest ;smallest element ;element entire ;entire matrix ;matrix component ;component optimal ;optimal solution ;solution opting ;opting exhaustive ;exhaustive unavoidable ;unavoidable evil ;evil feasible ;feasible solutions ;solutions assignment ;assignment problem ;problem tuples ;tuples ith ;ith component ;component column ;column element ;element selected ;selected ith ;ith row ;row job ;job assigned ;assigned ith ;ith person ;person cost ;cost matrix ;matrix assignment ;assignment person ;person job ;job person ;person job ;job person ;person job ;job person ;person job ;job requirements ;requirements assignment ;assignment problem ;problem imply ;imply correspondence ;correspondence feasible ;feasible assignments ;assignments permutations ;permutations integers ;integers exhaustive ;exhaustive approach ;approach assignment ;assignment problem ;problem require ;require generating ;generating permutations ;permutations integers ;integers computing ;computing total ;total cost ;cost assignment ;assignment summing ;summing elements ;elements cost ;cost matrix ;matrix finally ;finally selecting ;selecting smallest ;smallest sum ;sum iterations ;iterations applying ;applying algorithm ;algorithm instance ;instance shown ;shown figure ;figure asked ;asked exercises ;exercises cost ;cost figure ;figure iterations ;iterations solving ;solving small ;small instance ;instance assignment ;assignment problem ;problem exhaustive ;exhaustive permutations ;permutations considered ;considered general ;general case ;case assignment ;assignment problem ;problem exhaustive ;exhaustive impractical ;impractical small ;small instances ;instances problem ;problem fortunately ;fortunately efficient ;efficient algorithm ;algorithm problem ;problem called ;called hungarian ;hungarian method ;method hungarian ;hungarian mathematicians ;mathematicians nig ;nig egerva ;egerva underlies ;underlies method ;method kol ;kol good ;good news ;news fact ;fact problem ;problem domain ;domain grows ;grows exponentially ;exponentially faster ;faster necessarily ;necessarily imply ;imply efficient ;efficient algorithm ;algorithm solving ;solving fact ;fact examples ;examples problems ;problems examples ;examples exception ;exception polynomial ;polynomial algorithms ;algorithms problems ;problems domain ;domain grows ;grows exponentially ;exponentially instance ;instance size ;size provided ;provided solve ;solve mentioned ;mentioned algorithms ;algorithms possibly ;possibly exercises ;exercises assuming ;assuming generated ;generated constant ;constant efficiency ;efficiency class ;class exhaustive ;exhaustive algorithm ;algorithm outlined ;outlined text ;text traveling ;traveling salesman ;salesman problem ;problem algorithm ;algorithm programmed ;programmed makes ;makes additions ;additions estimate ;estimate maximum ;maximum cities ;cities problem ;problem solved ;solved hour ;hour hours ;hours iii ;iii year ;year century ;century outline ;outline exhaustive ;exhaustive algorithm ;algorithm hamiltonian ;hamiltonian circuit ;circuit problem ;problem outline ;outline algorithm ;algorithm determine ;determine connected ;connected graph ;graph represented ;represented adjacency ;adjacency matrix ;matrix eulerian ;eulerian circuit ;circuit efficiency ;efficiency class ;class algorithm ;algorithm application ;application exhaustive ;exhaustive instance ;instance assign ;assign ment ;ment problem ;problem started ;started text ;text assignment ;assignment problem ;problem optimal ;optimal solution ;solution smallest ;smallest element ;element cost ;cost matrix ;matrix partition ;partition problem ;problem positive ;positive integers ;integers partition ;partition disjoint ;disjoint subsets ;subsets sum ;sum elements ;elements prob ;prob lem ;lem solution ;solution design ;design exhaustive ;exhaustive algorithm ;algorithm problem ;problem minimize ;minimize subsets ;subsets algorithm ;algorithm generate ;generate clique ;clique problem ;problem graph ;graph positive ;positive integer ;integer deter ;deter graph ;graph clique ;clique size ;size subgraph ;subgraph vertices ;vertices design ;design exhaustive ;exhaustive algorithm ;algorithm problem ;problem exhaustive ;exhaustive applied ;applied sorting ;sorting problem ;problem determine ;determine efficiency ;efficiency class ;class algorithm ;algorithm queens ;queens problem ;problem classic ;classic puzzle ;puzzle placing ;placing queens ;queens chessboard ;chessboard queens ;queens row ;row column ;column diagonal ;diagonal positions ;positions queens ;queens square ;square queens ;queens row ;row queens ;queens row ;row column ;column estimate ;estimate solutions ;solutions problem ;problem exhaustive ;exhaustive based ;based approaches ;approaches capable ;capable checking ;checking positions ;positions magic ;magic squares ;squares magic ;magic square ;square arrangement ;arrangement integers ;integers matrix ;matrix occurring ;occurring row ;row column ;column main ;main diagonal ;diagonal sum ;sum prove ;prove magic ;magic square ;square exists ;exists sum ;sum equal ;equal design ;design exhaustive ;exhaustive algorithm ;algorithm generating ;generating magic ;magic squares ;squares internet ;internet library ;library algorithm ;algorithm generating ;generating magic ;magic squares ;squares implement ;implement algorithms ;algorithms exhaustive ;exhaustive run ;run experiment ;experiment determine ;determine largest ;largest algorithms ;algorithms magic ;magic square ;square minute ;minute famous ;famous alphametic ;alphametic puzzle ;puzzle digits ;digits mathematical ;mathematical expression ;expression sum ;sum replaced ;replaced letters ;letters called ;called cryptarithm ;cryptarithm addition ;addition puzzle ;puzzle words ;words make ;make sense ;sense alphametic ;alphametic published ;published renowned ;renowned british ;british puzzlist ;puzzlist henry ;henry dudeney ;dudeney money ;money conditions ;conditions assumed ;assumed correspondence ;correspondence letters ;letters decimal ;decimal digits ;digits letter ;letter represents ;represents digit ;digit dif ;dif ferent ;ferent letters ;letters represent ;represent digits ;digits digit ;digit left ;left digit ;digit numbers ;numbers solve ;solve alphametic ;alphametic means ;means digit ;digit letter ;letter represents ;represents solution ;solution uniqueness ;uniqueness assumed ;assumed verified ;verified solver ;solver write ;write solving ;solving cryptarithms ;cryptarithms exhaustive ;exhaustive assume ;assume cryptarithm ;cryptarithm sum ;sum words ;words solve ;solve dudeney ;dudeney puzzle ;puzzle expected ;expected solved ;solved published ;published depth ;depth breadth ;breadth term ;term exhaustive ;exhaustive applied ;applied important ;important algorithms ;algorithms systematically ;systematically process ;process vertices ;vertices edges ;edges graph ;graph traversal ;traversal algorithms ;algorithms depth ;depth dfs ;dfs breadth ;breadth bfs ;bfs algorithms ;algorithms proved ;proved applications ;applications involving ;involving graphs ;graphs artificial ;artificial intelligence ;intelligence operations ;operations research ;research addition ;addition indispensable ;indispensable efficient ;efficient investigation ;investigation fundamental ;fundamental properties ;properties graphs ;graphs connectivity ;connectivity presence ;presence depth ;depth starts ;starts graph ;graph traversal ;traversal arbitrary ;arbitrary vertex ;vertex marking ;marking visited ;visited iteration ;iteration algorithm ;algorithm proceeds ;proceeds unvisited ;unvisited vertex ;vertex adjacent ;adjacent vertices ;vertices resolved ;resolved arbitrarily ;arbitrarily practical ;practical adjacent ;adjacent unvisited ;unvisited candidates ;candidates chosen ;chosen dictated ;dictated data ;data structure ;structure representing ;representing graph ;graph examples ;examples break ;break ties ;ties alphabetical ;alphabetical vertices ;vertices process ;process continues ;continues dead ;dead vertex ;vertex adjacent ;adjacent unvisited ;unvisited vertices ;vertices encountered ;encountered dead ;dead algorithm ;algorithm backs ;backs edge ;edge vertex ;vertex visiting ;visiting unvisited ;unvisited vertices ;vertices algorithm ;algorithm eventually ;eventually halts ;halts backing ;backing starting ;starting vertex ;vertex dead ;dead vertices ;vertices connected ;connected component ;component starting ;starting vertex ;vertex visited ;visited unvisited ;unvisited vertices ;vertices depth ;depth restarted ;restarted convenient ;convenient stack ;stack operation ;operation depth ;depth vertex ;vertex stack ;stack vertex ;vertex reached ;reached figure ;figure dfs ;dfs traversal ;traversal graph ;graph traversal ;traversal stack ;stack subscript ;subscript vertex ;vertex visited ;visited pushed ;pushed stack ;stack dead ;dead popped ;popped stack ;stack dfs ;dfs forest ;forest tree ;tree edges ;edges shown ;shown solid ;solid dashed ;dashed lines ;lines vertex ;vertex starts ;starts vertex ;vertex stack ;stack dead ;dead vertex ;vertex ends ;ends accompany ;accompany depth ;depth traversal ;traversal constructing ;constructing called ;called depth ;depth forest ;forest starting ;starting vertex ;vertex traversal ;traversal serves ;serves root ;root tree ;tree forest ;forest unvisited ;unvisited vertex ;vertex reached ;reached attached ;attached child ;child vertex ;vertex reached ;reached edge ;edge called ;called tree ;tree edge ;edge set ;set edges ;edges forms ;forms forest ;forest algorithm ;algorithm encounter ;encounter edge ;edge leading ;leading previously ;previously visited ;visited vertex ;vertex predecessor ;predecessor parent ;parent tree ;tree edge ;edge called ;called edge ;edge connects ;connects vertex ;vertex ancestor ;ancestor parent ;parent depth ;depth forest ;forest figure ;figure depth ;depth traversal ;traversal stack ;stack depth ;depth forest ;forest shown ;shown pseudocode ;pseudocode depth ;depth algorithm ;algorithm dfs ;dfs implements ;implements depth ;depth traversal ;traversal graph ;graph input ;input graph ;graph output ;output graph ;graph vertices ;vertices marked ;marked consecutive ;consecutive integers ;integers encountered ;encountered dfs ;dfs traversal ;traversal vertex ;vertex unvisited ;unvisited vertex ;vertex marked ;marked dfs ;dfs visits ;visits recursively ;recursively unvisited ;unvisited vertices ;vertices connected ;connected vertex ;vertex path ;path numbers ;numbers encountered ;encountered global ;global variable ;variable vertex ;vertex adjacent ;adjacent marked ;marked dfs ;dfs brevity ;brevity dfs ;dfs pseudocode ;pseudocode ease ;ease formed ;formed create ;create wrong ;wrong impression ;impression sophistication ;sophistication algorithm ;algorithm true ;true power ;power depth ;depth algorithm ;algorithm action ;action graph ;graph diagram ;diagram adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists graph ;graph figure ;figure smaller ;smaller efficient ;efficient depth ;depth difficult ;difficult algorithm ;algorithm fact ;fact efficient ;efficient takes ;takes proportional ;proportional size ;size data ;data structure ;structure representing ;representing graph ;graph adjacency ;adjacency matrix ;matrix representation ;representation traversal ;traversal adjacency ;adjacency representation ;representation graph ;graph vertices ;vertices edges ;edges dfs ;dfs forest ;forest obtained ;obtained product ;product dfs ;dfs traversal ;traversal deserves ;deserves comments ;comments begin ;begin forest ;forest graph ;graph edges ;edges classified ;classified dfs ;dfs traversal ;traversal disjoint ;disjoint classes ;classes tree ;tree edges ;edges types ;types dfs ;dfs forest ;forest undirected ;undirected graph ;graph tree ;tree edges ;edges dfs ;dfs traversal ;traversal previously ;previously unvisited ;unvisited vertices ;vertices edges ;edges class ;class forest ;forest edges ;edges vertices ;vertices previously ;previously visited ;visited vertices ;vertices predecessors ;predecessors traversal ;traversal vertices ;vertices ancestors ;ancestors forest ;forest parents ;parents dfs ;dfs traversal ;traversal forest ;forest representation ;representation graph ;graph pro ;pro vides ;vides proved ;proved extremely ;extremely helpful ;helpful development ;development efficient ;efficient gorithms ;gorithms checking ;checking important ;important properties ;properties graphs ;graphs dfs ;dfs yields ;yields orderings ;orderings vertices ;vertices reached ;reached pushed ;pushed stack ;stack vertices ;vertices dead ;dead ends ;ends popped ;popped stack ;stack orders ;orders qualitatively ;qualitatively applications ;applications advantage ;advantage important ;important elementary ;elementary applications ;applications dfs ;dfs checking ;checking connectivity ;connectivity checking ;checking acyclicity ;acyclicity graph ;graph dfs ;dfs halts ;halts visiting ;visiting vertices ;vertices discovery ;discovery applications ;applications important ;important breakthrough ;breakthrough achieved ;achieved american ;american scientists ;scientists john ;john hopcroft ;hopcroft robert ;robert tarjan ;tarjan contributions ;contributions turing ;turing award ;award prestigious ;prestigious prize ;prize computing ;computing field ;field tar ;tar nected ;nected path ;path starting ;starting vertex ;vertex checking ;checking graph ;graph connectivity ;connectivity dfs ;dfs traversal ;traversal arbitrary ;arbitrary vertex ;vertex algorithm ;algorithm halts ;halts vertices ;vertices graph ;graph visited ;visited graph ;graph connected ;connected generally ;generally dfs ;dfs identifying ;identifying connected ;connected components ;components graph ;graph checking ;checking presence ;presence graph ;graph advantage ;advantage graph ;graph representation ;representation dfs ;dfs forest ;forest edges ;edges graph ;graph acyclic ;acyclic edge ;edge vertex ;vertex ancestor ;ancestor edge ;edge figure ;figure graph ;graph comprises ;comprises path ;path sequence ;sequence tree ;tree edges ;edges dfs ;dfs forest ;forest edge ;edge applications ;applications dfs ;dfs sophisticated ;sophisticated applications ;applications finding ;finding articulation ;articulation points ;points graph ;graph included ;included vertex ;vertex connected ;connected graph ;graph articulation ;articulation removal ;removal edges ;edges incident ;incident breaks ;breaks graph ;graph disjoint ;disjoint pieces ;pieces breadth ;breadth depth ;depth traversal ;traversal brave ;brave algorithm ;algorithm home ;home breadth ;breadth traversal ;traversal cautious ;cautious proceeds ;proceeds concentric ;concentric manner ;manner visiting ;visiting vertices ;vertices adjacent ;adjacent starting ;starting vertex ;vertex unvisited ;unvisited vertices ;vertices edges ;edges vertices ;vertices connected ;connected component ;component starting ;starting vertex ;vertex visited ;visited unvisited ;unvisited vertices ;vertices algorithm ;algorithm restarted ;restarted arbitrary ;arbitrary vertex ;vertex connected ;connected component ;component graph ;graph convenient ;convenient difference ;difference depth ;depth operation ;operation breadth ;breadth initialized ;initialized traversal ;traversal starting ;starting vertex ;vertex marked ;marked visited ;visited iteration ;iteration algorithm ;algorithm identifies ;identifies unvisited ;unvisited vertices ;vertices adjacent ;adjacent vertex ;vertex marks ;marks visited ;visited adds ;adds vertex ;vertex removed ;removed similarly ;similarly dfs ;dfs traversal ;traversal accompany ;accompany bfs ;bfs traversal ;traversal constructing ;constructing called ;called breadth ;breadth forest ;forest traversal ;traversal starting ;starting vertex ;vertex serves ;serves root ;root tree ;tree forest ;forest unvisited ;unvisited vertex ;vertex reached ;reached vertex ;vertex attached ;attached child ;child vertex ;vertex reached ;reached edge ;edge called ;called tree ;tree edge ;edge leading ;leading previously ;previously visited ;visited vertex ;vertex predecessor ;predecessor parent ;parent tree ;tree encountered ;encountered edge ;edge noted ;noted edge ;edge figure ;figure breadth ;breadth traversal ;traversal breadth ;breadth forest ;forest shown ;shown figure ;figure bfs ;bfs traversal ;traversal graph ;graph traversal ;traversal numbers ;numbers indicating ;indicating vertices ;vertices visited ;visited added ;added removed ;removed bfs ;bfs forest ;forest tree ;tree edges ;edges shown ;shown solid ;solid dotted ;dotted lines ;lines pseudocode ;pseudocode breadth ;breadth algorithm ;algorithm bfs ;bfs implements ;implements breadth ;breadth traversal ;traversal graph ;graph input ;input graph ;graph output ;output graph ;graph vertices ;vertices marked ;marked consecutive ;consecutive integers ;integers visited ;visited bfs ;bfs traversal ;traversal vertex ;vertex unvisited ;unvisited vertex ;vertex marked ;marked bfs ;bfs visits ;visits unvisited ;unvisited vertices ;vertices connected ;connected vertex ;vertex path ;path numbers ;numbers visited ;visited global ;global variable ;variable initialize ;initialize vertex ;vertex adjacent ;adjacent vertex ;vertex marked ;marked vertex ;vertex figure ;figure illustration ;illustration bfs ;bfs based ;based algorithm ;algorithm finding ;finding minimum ;minimum edge ;edge path ;path graph ;graph bfs ;bfs tree ;tree identifies ;identifies minimum ;minimum edge ;edge path ;path breadth ;breadth efficiency ;efficiency depth ;depth adjacency ;adjacency matrix ;matrix representation ;representation adjacency ;adjacency representation ;representation depth ;depth yields ;yields single ;single ordering ;ordering vertices ;vertices fifo ;fifo structure ;structure vertices ;vertices added ;added removed ;removed structure ;structure bfs ;bfs forest ;forest undirected ;undirected graph ;graph kinds ;kinds edges ;edges tree ;tree edges ;edges tree ;tree edges ;edges previously ;previously unvisited ;unvisited vertices ;vertices edges ;edges vertices ;vertices visited ;visited edges ;edges dfs ;dfs tree ;tree vertices ;vertices adjacent ;adjacent levels ;levels bfs ;bfs tree ;tree bfs ;bfs connectivity ;connectivity acyclicity ;acyclicity graph ;graph essentially ;essentially manner ;manner dfs ;dfs applicable ;applicable straightforward ;straightforward applications ;applications finding ;finding articulation ;articulation points ;points helpful ;helpful situations ;situations dfs ;dfs bfs ;bfs finding ;finding path ;path fewest ;fewest edges ;edges vertices ;vertices bfs ;bfs traversal ;traversal vertices ;vertices vertex ;vertex reached ;reached simple ;simple path ;path root ;root bfs ;bfs tree ;tree vertex ;vertex path ;path sought ;sought path ;path graph ;graph figure ;figure fewest ;fewest edges ;edges paths ;paths vertices ;vertices correctness ;correctness application ;application appears ;appears stem ;stem immediately ;immediately bfs ;bfs operates ;operates mathematical ;mathematical proof ;proof validity ;validity elementary ;elementary cor ;cor section ;section table ;table summarizes ;summarizes main ;main facts ;facts depth ;depth breadth ;breadth table ;table main ;main facts ;facts depth ;depth dfs ;dfs breadth ;breadth bfs ;bfs dfs ;dfs bfs ;bfs data ;data structure ;structure stack ;stack vertex ;vertex orderings ;orderings ordering ;ordering edge ;edge types ;types undirected ;undirected graphs ;graphs tree ;tree edges ;edges tree ;tree edges ;edges applications ;applications connectivity ;connectivity acyclicity ;acyclicity articulation ;articulation points ;points minimum ;minimum edge ;edge paths ;paths efficiency ;efficiency adjacency ;adjacency matrix ;matrix efficiency ;efficiency adjacency ;adjacency lists ;lists exercises ;exercises graph ;graph write ;write adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists graph ;graph assume ;assume matrix ;matrix rows ;rows columns ;columns vertices ;vertices adjacency ;adjacency lists ;lists alphabetical ;alphabetical vertex ;vertex labels ;labels starting ;starting vertex ;vertex resolving ;resolving ties ;ties vertex ;vertex alphabetical ;alphabetical traverse ;traverse graph ;graph depth ;depth construct ;construct depth ;depth tree ;tree vertices ;vertices reached ;reached pushed ;pushed traversal ;traversal stack ;stack vertices ;vertices dead ;dead ends ;ends popped ;popped stack ;stack define ;define sparse ;sparse graphs ;graphs implemen ;implemen tation ;tation dfs ;dfs efficiency ;efficiency graphs ;graphs adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists graph ;graph vertices ;vertices edges ;edges true ;true false ;false dfs ;dfs forests ;forests traversals ;traversals starting ;starting ver ;ver tices ;tices trees ;trees true ;true false ;false dfs ;dfs forests ;forests tree ;tree edges ;edges traverse ;traverse graph ;graph problem ;problem breadth ;breadth construct ;construct breadth ;breadth tree ;tree traversal ;traversal vertex ;vertex resolve ;resolve ties ;ties vertex ;vertex alphabetical ;alphabetical prove ;prove edge ;edge bfs ;bfs tree ;tree undirected ;undirected graph ;graph vertices ;vertices adjacent ;adjacent levels ;levels bfs ;bfs tree ;tree graph ;graph acyclicity ;acyclicity breadth ;breadth traversals ;traversals dfs ;dfs bfs ;bfs faster ;faster case ;case examples ;examples supporting ;supporting connected ;connected components ;components graph ;graph depth ;depth breadth ;breadth graph ;graph bipartite ;bipartite vertices ;vertices partitioned ;partitioned disjoint ;disjoint subsets ;subsets edge ;edge connects ;connects vertex ;vertex graph ;graph bipartite ;bipartite vertices ;vertices colored ;colored colors ;colors edge ;edge vertices ;vertices colored ;colored colors ;colors graphs ;graphs called ;called colorable ;colorable graph ;graph bipartite ;bipartite graph ;graph design ;design dfs ;dfs based ;based algorithm ;algorithm checking ;checking graph ;graph bipartite ;bipartite design ;design bfs ;bfs based ;based algorithm ;algorithm checking ;checking graph ;graph bipartite ;bipartite write ;write graph ;graph outputs ;outputs vertices ;vertices connected ;connected component ;component message ;message graph ;graph acyclic ;acyclic model ;model maze ;maze vertex ;vertex starting ;starting finishing ;finishing dead ;dead ends ;ends points ;points maze ;maze path ;path connecting ;connecting vertices ;vertices paths ;paths maze ;maze construct ;construct graph ;graph maze ;maze traversal ;traversal dfs ;dfs bfs ;bfs maze ;maze jugs ;jugs sime ;sime denis ;denis poisson ;poisson famous ;famous french ;french mathemati ;mathemati cian ;cian physicist ;physicist interested ;interested mathematics ;mathematics encountering ;encountering version ;version puzzle ;puzzle pint ;pint jug ;jug jugs ;jugs pint ;pint capacity ;capacity pints ;pints jugs ;jugs completely ;completely filling ;filling emptying ;emptying jugs ;jugs solve ;solve puzzle ;puzzle breadth ;breadth summary ;summary brute ;brute straightforward ;straightforward approach ;approach solving ;solving problem ;problem directly ;directly based ;based problem ;problem statement ;statement definitions ;definitions concepts ;concepts involved ;involved principal ;principal strengths ;strengths brute ;brute approach ;approach wide ;wide applicability ;applicability simplicity ;simplicity principal ;principal weakness ;weakness subpar ;subpar efficiency ;efficiency brute ;brute algorithms ;algorithms application ;application brute ;brute approach ;approach results ;results algorithm ;algorithm improved ;improved modest ;modest effort ;effort noted ;noted algorithms ;algorithms considered ;considered examples ;examples brute ;brute approach ;approach definition ;definition based ;based algorithm ;algorithm matrix ;matrix multiplication ;multiplication selection ;selection sort ;sort sequential ;sequential straightforward ;straightforward string ;string matching ;matching algorithm ;algorithm exhaustive ;exhaustive brute ;brute approach ;approach combinatorial ;combinatorial problems ;problems suggests ;suggests generating ;generating combinatorial ;combinatorial problem ;problem selecting ;selecting constraints ;constraints finding ;finding desired ;desired traveling ;traveling salesman ;salesman problem ;problem knapsack ;knapsack problem ;problem assignment ;assignment problem ;problem typical ;typical examples ;examples problems ;problems solved ;solved theoretically ;theoretically exhaustive ;exhaustive algorithms ;algorithms exhaustive ;exhaustive impractical ;impractical small ;small instances ;instances problems ;problems applied ;applied depth ;depth dfs ;dfs breadth ;breadth bfs ;bfs principal ;principal graph ;graph traversal ;traversal algorithms ;algorithms representing ;representing graph ;graph depth ;depth breadth ;breadth forest ;forest investigation ;investigation important ;important properties ;properties graph ;graph algorithms ;algorithms efficiency ;efficiency adjacency ;adjacency matrix ;matrix representation ;representation adjacency ;adjacency representation ;secret life ;life charles ;charles schulz ;schulz american ;american cartoonist ;cartoonist creator ;creator peanuts ;peanuts chapter ;chapter deals ;deals group ;group design ;design methods ;methods based ;based idea ;idea transformation ;transformation general ;general technique ;technique transform ;transform conquer ;conquer methods ;methods stage ;stage procedures ;procedures transformation ;transformation stage ;stage problem ;problem instance ;instance modified ;modified reason ;reason amenable ;amenable solution ;solution conquering ;conquering stage ;stage solved ;solved major ;major variations ;variations idea ;idea differ ;differ transform ;transform instance ;instance figure ;figure transformation ;transformation simpler ;simpler convenient ;convenient instance ;instance problem ;problem instance ;instance simplification ;simplification transformation ;transformation representation ;representation instance ;instance representation ;representation transformation ;transformation instance ;instance problem ;problem algorithm ;algorithm problem ;problem reduction ;reduction sections ;sections chapter ;chapter encounter ;encounter examples ;examples instance ;instance simplification ;simplification variety ;variety section ;section deals ;deals simple ;simple fruitful ;fruitful idea ;idea presorting ;presorting algorithmic ;algorithmic problems ;problems easier ;easier solve ;solve input ;input sorted ;sorted benefits ;benefits sorting ;sorting compensate ;compensate simpler ;simpler instance ;instance problem ;problem representation ;representation solution ;solution instance ;instance problem ;problem instance ;instance figure ;figure transform ;transform conquer ;conquer strategy ;strategy spent ;spent dealing ;dealing unsorted ;unsorted input ;input directly ;directly section ;section introduces ;introduces important ;important algorithms ;algorithms applied ;applied mathematics ;mathematics gaussian ;gaussian elimination ;elimination algorithm ;algorithm solves ;solves linear ;linear equations ;equations transforming ;transforming special ;special property ;property makes ;makes finding ;finding solution ;solution easy ;easy section ;section ideas ;ideas instance ;instance simplification ;simplification representation ;representation applied ;applied trees ;trees results ;results avl ;avl trees ;trees multiway ;multiway balanced ;balanced trees ;trees simplest ;simplest case ;case trees ;trees section ;section presents ;presents heaps ;heaps heapsort ;heapsort familiar ;familiar important ;important data ;data structure ;structure application ;application sorting ;sorting benefit ;benefit light ;light transform ;transform conquer ;conquer design ;design section ;section discuss ;discuss horner ;horner remarkable ;remarkable algorithm ;algorithm evaluating ;evaluating polynomials ;polynomials algorithm ;algorithm hall ;hall fame ;fame horner ;horner candidate ;candidate induction ;induction based ;based algorithm ;algorithm elegance ;elegance efficiency ;efficiency interesting ;interesting algorithms ;algorithms exponentiation ;exponentiation problem ;problem based ;based representation ;representation idea ;idea chapter ;chapter concludes ;concludes review ;review applications ;applications variety ;variety transform ;transform conquer ;conquer problem ;problem reduction ;reduction variety ;variety considered ;considered radical ;radical problem ;problem reduced ;reduced transformed ;transformed problem ;problem powerful ;powerful idea ;idea extensively ;extensively complexity ;complexity theory ;theory chapter ;chapter application ;application designing ;designing practical ;practical algorithms ;algorithms trivial ;trivial problem ;problem transformed ;transformed make ;make transformation ;transformation algorithm ;algorithm solving ;solving prob ;prob lem ;lem efficient ;efficient compared ;compared algorithmic ;algorithmic alternatives ;alternatives examples ;examples discuss ;discuss important ;important special ;special case ;case mathematical ;mathematical modeling ;modeling expressing ;expressing problem ;problem terms ;terms purely ;purely mathematical ;mathematical objects ;objects variables ;variables functions ;functions equations ;equations presorting ;presorting idea ;idea science ;science fact ;fact sorting ;sorting algorithms ;algorithms significant ;significant degree ;degree fact ;fact questions ;questions easier ;easier sorted ;sorted efficiency ;efficiency algorithms ;algorithms involve ;involve sorting ;sorting efficiency ;efficiency sorting ;sorting algorithm ;algorithm sake ;sake simplicity ;simplicity assume ;assume section ;section lists ;lists implemented ;implemented arrays ;arrays sorting ;sorting algorithms ;algorithms easier ;easier implement ;implement array ;array representation ;representation discussed ;discussed elementary ;elementary sorting ;sorting algorithms ;algorithms selection ;selection sort ;sort insertion ;insertion sort ;sort quadratic ;quadratic worst ;worst average ;average cases ;cases advanced ;advanced algorithms ;algorithms mergesort ;mergesort log ;log quicksort ;quicksort efficiency ;efficiency log ;log average ;average case ;case quadratic ;quadratic worst ;worst case ;case faster ;faster sorting ;sorting algorithms ;algorithms stated ;stated section ;section general ;general comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm efficiency ;efficiency log ;log worst ;worst case ;case result ;result holds ;holds average ;average case ;case efficiency ;efficiency examples ;examples illustrate ;illustrate idea ;idea presorting ;presorting examples ;examples section ;section exercises ;exercises checking ;checking element ;element uniqueness ;uniqueness array ;array element ;element unique ;unique ness ;ness problem ;problem familiar ;familiar considered ;considered brute ;brute algo ;algo rithm ;rithm problem ;problem section ;section brute ;brute algorithm ;algorithm compared ;compared pairs ;pairs array ;array elements ;elements equal ;equal elements ;elements pairs ;pairs left ;left worst ;worst case ;case efficiency ;efficiency alternatively ;alternatively sort ;sort array ;array consecutive ;consecutive elements ;elements array ;array equal ;equal elements ;elements pair ;pair vice ;vice versa ;versa algorithm ;algorithm presortelementuniqueness ;presortelementuniqueness solves ;solves element ;element uniqueness ;uniqueness problem ;problem sorting ;sorting array ;array input ;input array ;array orderable ;orderable elements ;elements output ;output returns ;returns true ;true equal ;equal elements ;elements false ;false sort ;sort array ;array false ;false true ;true running ;running algorithm ;algorithm sum ;sum spent ;spent sorting ;sorting spent ;spent checking ;checking consecutive ;consecutive elements ;elements requires ;requires log ;log comparisons ;comparisons sorting ;sorting determine ;determine efficiency ;efficiency algorithm ;algorithm quadratic ;quadratic sorting ;sorting algorithm ;algorithm entire ;entire algorithm ;algorithm efficient ;efficient brute ;brute good ;good sorting ;sorting algorithm ;algorithm mergesort ;mergesort worst ;worst case ;case efficiency ;efficiency log ;log worst ;worst case ;case efficiency ;efficiency entire ;entire presorting ;presorting based ;based algorithm ;algorithm log ;log tsort ;tsort tscan ;tscan log ;log computing ;computing mode ;mode occurs ;occurs numbers ;numbers mode ;mode values ;values considered ;considered mode ;mode brute ;brute approach ;approach computing ;computing mode ;mode scan ;scan compute ;compute frequencies ;frequencies distinct ;distinct values ;values largest ;largest frequency ;frequency sorting ;sorting algorithms ;algorithms called ;called radix ;radix sorts ;sorts linear ;linear terms ;terms total ;total input ;input bits ;bits algorithms ;algorithms comparing ;comparing individual ;individual bits ;bits pieces ;pieces keys ;keys entirety ;entirety running ;running algorithms ;algorithms proportional ;proportional input ;input bits ;bits essentially ;essentially log ;log algorithms ;algorithms bits ;bits key ;key log ;log accommodate ;accommodate distinct ;distinct keys ;keys input ;input implement ;implement idea ;idea values ;values encountered ;encountered frequencies ;frequencies iteration ;iteration ith ;ith element ;element original ;original compared ;compared values ;values encountered ;encountered traversing ;traversing auxiliary ;auxiliary matching ;matching frequency ;frequency incremented ;incremented current ;current element ;element added ;added distinct ;distinct values ;values frequency ;frequency difficult ;difficult worst ;worst case ;case input ;input algorithm ;algorithm equal ;equal elements ;elements ith ;ith element ;element compared ;compared elements ;elements auxiliary ;auxiliary distinct ;distinct values ;values added ;added frequency ;frequency result ;result worst ;worst case ;case comparisons ;comparisons algorithm ;algorithm creating ;creating frequency ;frequency additional ;additional comparisons ;comparisons needed ;needed largest ;largest frequency ;frequency aux ;aux iliary ;iliary quadratic ;quadratic worst ;worst case ;case efficiency ;efficiency class ;class algorithm ;algorithm alternative ;alternative sort ;sort input ;input equal ;equal values ;values adjacent ;adjacent compute ;compute mode ;mode longest ;longest run ;run adjacent ;adjacent equal ;equal values ;values sorted ;sorted array ;array algorithm ;algorithm presortmode ;presortmode computes ;computes mode ;mode array ;array sorting ;sorting input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array mode ;mode sort ;sort array ;array current ;current run ;run begins ;begins position ;position modef ;modef requency ;requency highest ;highest frequency ;frequency runlength ;runlength runvalue ;runvalue runlength ;runlength runvalue ;runvalue runlength ;runlength modef ;modef requency ;requency modef ;modef requency ;requency runlength ;runlength modevalue ;modevalue runvalue ;runvalue runlength ;runlength modevalue ;modevalue analysis ;analysis similar ;similar analysis ;analysis running ;running algorithm ;algorithm dominated ;dominated spent ;spent sorting ;sorting remainder ;remainder algorithm ;algorithm takes ;takes linear ;linear log ;log sort ;sort method ;method worst ;worst case ;case efficiency ;efficiency asymptotic ;asymptotic class ;class worst ;worst case ;case efficiency ;efficiency brute ;brute algorithm ;algorithm searching ;searching problem ;problem searching ;searching array ;array sortable ;sortable items ;items brute ;brute solution ;solution sequential ;sequential section ;section comparisons ;comparisons worst ;worst case ;case array ;array sorted ;sorted apply ;apply binary ;binary requires ;requires log ;log comparisons ;comparisons worst ;worst case ;case assuming ;assuming efficient ;efficient log ;log sort ;sort total ;total running ;running searching ;searching algorithm ;algorithm worst ;worst case ;case tsort ;tsort tsearch ;tsearch log ;log inferior ;inferior sequential ;sequential true ;true averagecase ;averagecase efficiency ;efficiency spent ;spent sorting ;sorting justified ;justified problem ;problem section ;section exercises ;exercises asks ;asks estimate ;estimate minimum ;minimum searches ;searches needed ;needed justify ;justify presorting ;presorting finish ;finish discussion ;discussion presorting ;presorting mention ;mention geometric ;geometric algorithms ;algorithms dealing ;dealing sets ;sets points ;points presorting ;presorting points ;points sorted ;sorted coordinates ;coordinates distance ;distance line ;line angle ;angle presorting ;presorting conquer ;conquer algorithms ;algorithms closest ;closest pair ;pair problem ;problem convex ;convex hull ;hull problem ;problem discussed ;discussed section ;section problems ;problems directed ;directed acyclic ;acyclic graphs ;graphs solved ;solved easily ;easily topologically ;topologically sorting ;sorting digraph ;digraph problems ;problems finding ;finding longest ;longest shortest ;shortest paths ;paths digraphs ;digraphs exercises ;exercises sections ;sections illustrate ;illustrate finally ;finally algorithms ;algorithms based ;based greedy ;greedy technique ;technique subject ;subject chapter ;chapter require ;require presorting ;presorting inputs ;inputs intrinsic ;intrinsic operations ;operations exercises ;exercises problem ;problem finding ;finding distance ;distance closest ;closest numbers ;numbers array ;array numbers ;numbers distance ;distance numbers ;numbers computed ;computed design ;design presorting ;presorting based ;based algorithm ;algorithm solving ;solving problem ;problem deter ;deter efficiency ;efficiency class ;class efficiency ;efficiency algorithm ;algorithm brute ;brute algo ;algo rithm ;rithm problem ;problem exercises ;exercises sets ;sets numbers ;numbers problem ;problem finding ;finding intersection ;intersection set ;set numbers ;numbers design ;design brute ;brute algorithm ;algorithm solving ;solving problem ;problem determine ;determine efficiency ;efficiency class ;class design ;design presorting ;presorting based ;based algorithm ;algorithm solving ;solving problem ;problem deter ;deter efficiency ;efficiency class ;class problem ;problem finding ;finding smallest ;smallest largest ;largest elements ;elements array ;array numbers ;numbers design ;design presorting ;presorting based ;based algorithm ;algorithm solving ;solving problem ;problem deter ;deter efficiency ;efficiency class ;class efficiency ;efficiency algorithms ;algorithms brute ;brute algo ;algo rithm ;rithm presorting ;presorting based ;based algorithm ;algorithm iii ;iii conquer ;conquer algorithm ;algorithm problem ;problem exercises ;exercises estimate ;estimate searches ;searches needed ;needed justify ;justify spent ;spent presorting ;presorting array ;array elements ;elements sorting ;sorting mergesort ;mergesort searching ;searching binary ;binary assume ;assume searches ;searches elements ;elements array ;array elements ;elements sort ;sort design ;design efficient ;efficient algorithm ;algorithm solving ;solving problems ;problems determine ;determine efficiency ;efficiency class ;class bills ;bills checks ;checks pay ;pay bills ;bills assuming ;assuming numbers ;numbers written ;written checks ;checks failed ;failed pay ;pay simplicity ;simplicity assume ;assume written ;written covers ;covers student ;student records ;records indicating ;indicating student ;student home ;home address ;address date ;date birth ;birth students ;students states ;states set ;set points ;points cartesian ;cartesian plane ;plane simple ;simple polygon ;polygon closed ;closed path ;path points ;points line ;line segments ;segments polygon ;polygon edges ;edges intersect ;intersect neighboring ;neighboring edges ;edges common ;common vertex ;vertex problem ;problem solution ;solution unique ;unique solution ;solution design ;design efficient ;efficient algorithm ;algorithm solving ;solving problem ;problem indi ;indi cate ;cate efficiency ;efficiency class ;class array ;array real ;real numbers ;numbers integer ;integer array ;array elements ;elements sum ;sum array ;array design ;design algorithm ;algorithm problem ;problem quadratic ;quadratic efficiency ;efficiency intervals ;intervals real ;real line ;line interval ;interval comprises ;comprises points ;points strictly ;strictly endpoints ;endpoints maximum ;maximum intervals ;intervals common ;common intervals ;intervals maximum ;maximum design ;design algorithm ;algorithm problem ;problem quadratic ;quadratic efficiency ;efficiency placement ;placement distinct ;distinct integers ;integers sequence ;sequence boxes ;boxes pre ;pre set ;set inequality ;inequality signs ;signs inserted ;inserted design ;design algo ;algo rithm ;rithm places ;places numbers ;numbers boxes ;boxes inequalities ;inequalities numbers ;numbers boxes ;boxes shown ;shown maxima ;maxima cartesian ;cartesian plane ;plane dominated ;dominated inequalities ;inequalities strict ;strict set ;set points ;points maximum ;maximum set ;set dominated ;dominated set ;set figure ;figure maximum ;maximum points ;points set ;set points ;points circled ;circled design ;design efficient ;efficient algorithm ;algorithm finding ;finding maximum ;maximum points ;points set ;set points ;points cartesian ;cartesian plane ;plane efficiency ;efficiency class ;class algorithm ;algorithm real ;real world ;world applications ;applications algorithm ;algorithm anagram ;anagram detection ;detection design ;design efficient ;efficient algorithm ;algorithm finding ;finding sets ;sets anagrams ;anagrams large ;large dictionary ;dictionary english ;english words ;words ben ;ben eat ;eat ate ;ate tea ;tea set ;set write ;write implementing ;implementing algorithm ;algorithm gaussian ;gaussian elimination ;elimination familiar ;familiar systems ;systems linear ;linear equations ;equations unknowns ;unknowns recall ;recall coefficients ;coefficients equation ;equation proportional ;proportional coef ;coef ficients ;ficients unique ;unique solution ;solution standard ;standard method ;method finding ;finding solution ;solution equation ;equation express ;express variables ;variables function ;function substitute ;substitute result ;result equation ;equation yield ;yield ing ;ing linear ;linear equation ;equation solution ;solution variable ;variable applications ;applications solve ;solve equations ;equations unknowns ;unknowns nxn ;nxn annxn ;annxn large ;large theoretically ;theoretically solve ;solve general ;general izing ;izing substitution ;substitution method ;method solving ;solving systems ;systems linear ;linear equations ;equations general ;general design ;design technique ;technique method ;method based ;based resulting ;resulting algorithm ;algorithm extremely ;extremely cumbersome ;cumbersome fortunately ;fortunately elegant ;elegant algorithm ;algorithm solving ;solving systems ;systems linear ;linear equations ;equations called ;called gaussian ;gaussian elimination ;elimination idea ;idea gaussian ;gaussian elimination ;elimination transform ;transform linear ;linear equations ;equations unknowns ;unknowns equivalent ;equivalent solution ;solution original ;original upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix zeros ;zeros main ;main diagonal ;diagonal method ;method named ;named carl ;carl friedrich ;friedrich gauss ;gauss giants ;giants history ;history mathematics ;mathematics isaac ;isaac newton ;newton leonhard ;leonhard euler ;euler numerous ;numerous fundamental ;fundamental contributions ;contributions theoretical ;theoretical computational ;computational mathematics ;mathematics method ;method chinese ;chinese years ;years europeans ;europeans rediscovered ;rediscovered nxn ;nxn annxn ;annxn matrix ;matrix notations ;notations write ;write ann ;ann added ;added primes ;primes matrix ;matrix elements ;elements sides ;sides stress ;stress values ;values differ ;differ counterparts ;counterparts original ;original upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix arbitrary ;arbitrary coefficient ;coefficient matrix ;matrix easily ;easily solve ;solve upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix substitutions ;substitutions immediately ;immediately equation ;equation substitute ;substitute equation ;equation substitute ;substitute values ;values variables ;variables equation ;equation arbitrary ;arbitrary coefficient ;coefficient matrix ;matrix equivalent ;equivalent upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix series ;series called ;called elementary ;elementary operations ;operations exchanging ;exchanging equations ;equations replacing ;replacing equation ;equation nonzero ;nonzero multiple ;multiple replacing ;replacing equation ;equation sum ;sum difference ;difference equation ;equation multiple ;multiple equation ;equation elementary ;elementary operation ;operation solution ;solution obtained ;obtained series ;series operations ;operations solution ;solution original ;original upper ;upper triangular ;triangular matrix ;matrix pivot ;pivot make ;make coefficients ;coefficients zeros ;zeros equations ;equations specifically ;specifically equation ;equation difference ;difference equation ;equation multiplied ;multiplied equation ;equation coefficient ;coefficient fourth ;fourth finally ;finally nth ;nth equation ;equation multiples ;multiples equation ;equation makes ;makes coefficients ;coefficients equation ;equation rid ;rid coefficients ;coefficients subtracting ;subtracting multiple ;multiple equation ;equation equations ;equations repeating ;repeating elimination ;elimination variables ;variables ultimately ;ultimately yields ;yields upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix gaussian ;gaussian elimination ;elimination operate ;operate coefficient ;coefficient matrix ;matrix augmented ;augmented column ;column equations ;equations values ;values words ;words write ;write explicitly ;explicitly variable ;variable names ;names equality ;equality signs ;signs solve ;solve gaussian ;gaussian elimination ;elimination row ;row solution ;solution substitutions ;substitutions pseudocode ;pseudocode stage ;stage called ;called forward ;forward elimination ;elimination algorithm ;algorithm forwardelimination ;forwardelimination applies ;applies gaussian ;gaussian elimination ;elimination matrix ;matrix coefficients ;coefficients augmented ;augmented vector ;vector values ;values input ;input matrix ;matrix column ;column vector ;vector output ;output equivalent ;equivalent upper ;upper triangular ;triangular matrix ;matrix values ;values column ;column augments ;augments matrix ;matrix important ;important observations ;observations make ;make pseudocode ;pseudocode ith ;ith row ;row pivot ;pivot ith ;ith iteration ;iteration algorithm ;algorithm case ;case advantage ;advantage elementary ;elementary operation ;operation exchange ;exchange ith ;ith row ;row nonzero ;nonzero coefficient ;coefficient ith ;ith column ;column unique ;unique solution ;solution normal ;normal case ;case systems ;systems consideration ;consideration row ;row prepared ;prepared possibility ;possibility row ;row exchanges ;exchanges potential ;potential difficulty ;difficulty possibility ;possibility small ;small scaling ;scaling factor ;factor large ;large distorted ;distorted error ;error caused ;caused subtraction ;subtraction numbers ;numbers greatly ;greatly magnitudes ;magnitudes problem ;problem row ;row largest ;largest absolute ;absolute coefficient ;coefficient ith ;ith column ;column exchange ;exchange ith ;ith row ;row ith ;ith iteration ;iteration pivot ;pivot modification ;modification called ;called partial ;partial pivoting ;pivoting guarantees ;guarantees magnitude ;magnitude scaling ;scaling factor ;factor exceed ;exceed observation ;observation fact ;fact innermost ;innermost loop ;loop written ;written glaring ;glaring inefficiency ;inefficiency checking ;checking pseudocode ;pseudocode incorporates ;incorporates partial ;partial pivoting ;pivoting eliminates ;eliminates inefficiency ;inefficiency algorithm ;algorithm betterforwardelimination ;betterforwardelimination implements ;implements gaussian ;gaussian elimination ;elimination partial ;partial pivoting ;pivoting input ;input matrix ;matrix column ;column vector ;vector output ;output equivalent ;equivalent upper ;upper triangular ;triangular matrix ;matrix values ;values column ;column appends ;appends column ;column pivotrow ;pivotrow swap ;swap pivotrow ;pivotrow temp ;temp efficiency ;efficiency algorithm ;algorithm innermost ;innermost loop ;loop consists ;consists single ;single line ;line temp ;temp discuss ;discuss errors ;errors section ;section multiplication ;multiplication subtraction ;subtraction computers ;computers multi ;multi plication ;plication unquestionably ;unquestionably expensive ;expensive addition ;addition subtraction ;subtraction multiplication ;multiplication quoted ;quoted algorithm ;algorithm basic ;basic operation ;operation standard ;standard summation ;summation formulas ;formulas rules ;rules reviewed ;reviewed section ;section appen ;appen dix ;dix helpful ;helpful derivation ;derivation substitution ;substitution stage ;stage gaussian ;gaussian elimination ;elimination asked ;asked exercises ;exercises running ;running dominated ;dominated cubic ;cubic elimination ;elimination stage ;stage making ;making entire ;entire algorithm ;algorithm cubic ;cubic theoretically ;theoretically gaussian ;gaussian elimination ;elimination yields ;yields exact ;exact solution ;solution linear ;linear equations ;equations unique ;unique solution ;solution discovers ;discovers solution ;solution exists ;exists case ;case solutions ;solutions infinitely ;infinitely practice ;practice solving ;solving systems ;systems significant ;significant size ;size method ;method straightforward ;straightforward method ;method lead ;lead principal ;principal difficulty ;difficulty lies ;lies preventing ;preventing accumulation ;accumulation errors ;errors section ;section consult ;consult textbooks ;textbooks numerical ;numerical analysis ;analysis analyze ;analyze implementation ;implementation issues ;issues great ;great decomposition ;decomposition gaussian ;gaussian elimination ;elimination interesting ;interesting byproduct ;byproduct called ;called composition ;composition coefficient ;coefficient matrix ;matrix fact ;fact modern ;modern commercial ;commercial implementa ;implementa tions ;tions gaussian ;gaussian elimination ;elimination based ;based decomposition ;decomposition basic ;basic algorithm ;algorithm outlined ;outlined beginning ;beginning section ;section applied ;applied gaussian ;gaussian elimination ;elimination matrix ;matrix mentioned ;mentioned section ;section computers ;computers multiplication ;multiplication necessarily ;necessarily expensive ;expensive addition ;addition subtraction ;subtraction algorithm ;algorithm moot ;moot simply ;simply times ;times innermost ;innermost loop ;loop executed ;executed multiplications ;multiplications subtractions ;subtractions lower ;lower triangular ;triangular matrix ;matrix main ;main diagonal ;diagonal row ;row multiples ;multiples forward ;forward elimination ;elimination process ;process upper ;upper triangular ;triangular matrix ;matrix result ;result elimination ;elimination turns ;turns product ;product matrices ;matrices equal ;equal matrix ;matrix pair ;pair verify ;verify fact ;fact direct ;direct multiplication ;multiplication general ;general proposition ;proposition proof ;proof omit ;omit solving ;solving equivalent ;equivalent solving ;solving solved ;solved denote ;denote solve ;solve easy ;easy lower ;lower triangular ;triangular matrix ;matrix solve ;solve upper ;upper triangular ;triangular matrix ;matrix beginning ;beginning section ;section solve ;solve solution ;solution solving ;solving means ;means solving ;solving solution ;solution decomposition ;decomposition matrix ;matrix solve ;solve systems ;systems vectors ;vectors distinct ;distinct advantage ;advantage classic ;classic gaussian ;gaussian elimination ;elimination discussed ;discussed earlier ;earlier decomposition ;decomposition require ;require extra ;extra memory ;memory nonzero ;nonzero upper ;upper triangular ;triangular main ;main diagonal ;diagonal nontrivial ;nontrivial main ;main diagonal ;diagonal computing ;computing matrix ;matrix inverse ;inverse gaussian ;gaussian elimination ;elimination algorithm ;algorithm tackles ;tackles important ;important problems ;problems applied ;applied mathematics ;mathematics solving ;solving systems ;systems linear ;linear equations ;equations fact ;fact gaussian ;gaussian elimination ;elimination applied ;applied problems ;problems linear ;linear algebra ;algebra computing ;computing matrix ;matrix inverse ;inverse matrix ;matrix denoted ;denoted identity ;identity matrix ;matrix elements ;elements main ;main diagonal ;diagonal elements ;elements square ;square matrix ;matrix inverse ;inverse exists ;exists inverse ;inverse unique ;unique matrix ;matrix inverse ;inverse called ;called singular ;singular prove ;prove matrix ;matrix singular ;singular rows ;rows linear ;linear combination ;combination sum ;sum multiples ;multiples rows ;rows convenient ;convenient matrix ;matrix nonsingular ;nonsingular apply ;apply gaussian ;gaussian elimination ;elimination yields ;yields upper ;upper triangular ;triangular matrix ;matrix zeros ;zeros main ;main diagonal ;diagonal matrix ;matrix nonsingular ;nonsingular singular ;singular special ;special situation ;situation square ;square matrices ;matrices inverses ;inverses theoretically ;theoretically inverse ;inverse matrices ;matrices important ;important role ;role reciprocals ;reciprocals matrix ;matrix algebra ;algebra overcoming ;overcoming absence ;absence explicit ;explicit division ;division operation ;operation matrices ;matrices analogy ;analogy linear ;linear equation ;equation unknown ;unknown solution ;solution written ;written express ;express solution ;solution equations ;equations unknowns ;unknowns nonsingular ;nonsingular vector ;vector definition ;definition inverse ;inverse matrix ;matrix nonsingular ;nonsingular matrix ;matrix compute ;compute numbers ;numbers xij ;xij ann ;ann xnn ;xnn unknowns ;unknowns solving ;solving systems ;systems linear ;linear equations ;equations coefficient ;coefficient matrix ;matrix vector ;vector unknowns ;unknowns column ;column inverse ;inverse vector ;vector column ;column identity ;identity matrix ;matrix axj ;axj solve ;solve systems ;systems applying ;applying gaussian ;gaussian elimination ;elimination matrix ;matrix aug ;aug mented ;mented identity ;identity matrix ;matrix forward ;forward elimina ;elimina tion ;tion decomposition ;decomposition solve ;solve systems ;systems explained ;explained earlier ;earlier computing ;computing determinant ;determinant problem ;problem solved ;solved gaussian ;gaussian elimination ;elimination computing ;computing determinant ;determinant matrix ;matrix denoted ;denoted det ;det defined ;defined recursively ;recursively consists ;consists single ;single element ;element det ;det equal ;equal det ;det computed ;computed recursive ;recursive formula ;formula det ;det odd ;odd element ;element row ;row column ;column matrix ;matrix obtained ;obtained matrix ;matrix deleting ;deleting row ;row column ;column matrix ;matrix definition ;definition implies ;implies formula ;formula easy ;easy det ;det words ;words determinant ;determinant matrix ;matrix simply ;simply equal ;equal difference ;difference products ;products diagonal ;diagonal elements ;elements matrix ;matrix det ;det incidentally ;incidentally formula ;formula handy ;handy variety ;variety applications ;applications section ;section quickhull ;quickhull algorithm ;algorithm compute ;compute determinant ;determinant large ;large matrix ;matrix task ;task rarely ;rarely needed ;needed practice ;practice discussing ;discussing recursive ;recursive definition ;definition implies ;implies computing ;computing sum ;sum terms ;terms gaussian ;gaussian elimination ;elimination central ;central fact ;fact determinant ;determinant upper ;upper triangular ;triangular matrix ;matrix equal ;equal product ;product elements ;elements main ;main diagonal ;diagonal easy ;easy elementary ;elementary operations ;operations employed ;employed elimination ;elimination algorithm ;algorithm determinant ;determinant basically ;basically remains ;remains unchanged ;unchanged multiplied ;multiplied constant ;constant elimination ;elimination algorithm ;algorithm result ;result compute ;compute determinant ;determinant matrix ;matrix cubic ;cubic determinants ;determinants important ;important role ;role theory ;theory systems ;systems linear ;linear equations ;equations specifically ;specifically linear ;linear equations ;equations unknowns ;unknowns unique ;unique solution ;solution determinant ;determinant coefficient ;coefficient matrix ;matrix det ;det equal ;equal solution ;solution formulas ;formulas called ;called cramer ;cramer det ;det determinant ;determinant matrix ;matrix obtained ;obtained replacing ;replacing column ;column asked ;asked investigate ;investigate exercises ;exercises cramer ;cramer good ;good algorithm ;algorithm solving ;solving systems ;systems linear ;linear equations ;equations exercises ;exercises solve ;solve gaussian ;gaussian elimination ;elimination solve ;solve previous ;previous decomposition ;decomposition method ;method standpoint ;standpoint general ;general algorithm ;algorithm design ;design techniques ;techniques classify ;classify decomposition ;decomposition method ;method solve ;solve problem ;problem computing ;computing inverse ;inverse coefficient ;coefficient matrix ;matrix multiplying ;multiplying vector ;vector efficiency ;efficiency class ;class forward ;forward elimination ;elimination stage ;stage gaussian ;gaussian elimination ;elimination write ;write pseudocode ;pseudocode substitution ;substitution stage ;stage gaussian ;gaussian elimination ;elimination running ;running assuming ;assuming division ;division numbers ;numbers takes ;takes times ;times longer ;longer multiplication ;multiplication estimate ;estimate faster ;faster betterforwardelimination ;betterforwardelimination forwardelimination ;forwardelimination assume ;assume compiler ;compiler eliminate ;eliminate inefficiency ;inefficiency forwardelimination ;forwardelimination linear ;linear equations ;equations unknowns ;unknowns unique ;unique solution ;solution solve ;solve gaussian ;gaussian elimination ;elimination linear ;linear equations ;equations unknowns ;unknowns solution ;solution apply ;apply gaussian ;gaussian elimination ;elimination linear ;linear equations ;equations unknowns ;unknowns infinitely ;infinitely solutions ;solutions apply ;apply gaussian ;gaussian elimination ;elimination gauss ;gauss jordan ;jordan elimination ;elimination method ;method differs ;differs gaussian ;gaussian elimination ;elimination elements ;elements main ;main diagonal ;diagonal coefficient ;coefficient matrix ;matrix pivot ;pivot row ;row elements ;elements main ;main diagonal ;diagonal apply ;apply gauss ;gauss jordan ;jordan method ;method problem ;problem exercises ;exercises general ;general design ;design strategy ;strategy algorithm ;algorithm based ;based general ;general multiplications ;multiplications method ;method solving ;solving equations ;equations unknowns ;unknowns multiplications ;multiplications gaussian ;gaussian elimination ;elimination method ;method elimination ;elimination substitution ;substitution stages ;stages linear ;linear equations ;equations unknowns ;unknowns unique ;unique solution ;solution det ;det good ;good idea ;idea condition ;condition applying ;applying gaussian ;gaussian elimination ;elimination apply ;apply cramer ;cramer solve ;solve problem ;problem exercises ;exercises estimate ;estimate times ;times longer ;longer solve ;solve linear ;linear equations ;equations unknowns ;unknowns cramer ;cramer gaussian ;gaussian elimination ;elimination assume ;assume determinants ;determinants cramer ;cramer formulas ;formulas computed ;computed independently ;independently gaussian ;gaussian elimination ;elimination lights ;lights person ;person game ;game played ;played board ;board composed ;composed light ;light panels ;panels panel ;panel turned ;turned toggling ;toggling state ;state vertically ;vertically horizontally ;horizontally adjacent ;adjacent panels ;panels toggling ;toggling corner ;corner square ;square affects ;affects total ;total panels ;panels toggling ;toggling noncorner ;noncorner panel ;panel board ;board border ;border affects ;affects total ;total squares ;squares initial ;initial subset ;subset lighted ;lighted squares ;squares goal ;goal lights ;lights solving ;solving linear ;linear equations ;equations coefficients ;coefficients sides ;sides modulo ;modulo arithmetic ;arithmetic gaussian ;gaussian elimination ;elimination solve ;solve instance ;instance problem ;problem panels ;panels board ;board initially ;initially lit ;lit gaussian ;gaussian elimination ;elimination solve ;solve instance ;instance problem ;problem panels ;panels board ;board initially ;initially lit ;lit balanced ;balanced trees ;trees sections ;sections discussed ;discussed binary ;binary tree ;tree prin ;prin cipal ;cipal data ;data structures ;structures implementing ;implementing dictionaries ;dictionaries binary ;binary tree ;tree nodes ;nodes elements ;elements set ;set orderable ;orderable items ;items element ;element node ;node ele ;ele ments ;ments left ;left subtree ;subtree smaller ;smaller element ;element subtree ;subtree root ;root elements ;elements subtree ;subtree greater ;greater transformation ;transformation set ;set binary ;binary tree ;tree representation ;representation tech ;tech nique ;nique gain ;gain transformation ;transformation compared ;compared straightforward ;straightforward implementation ;implementation dictionary ;dictionary array ;array gain ;gain efficiency ;efficiency searching ;searching insertion ;insertion deletion ;deletion log ;log erage ;erage case ;case worst ;worst case ;case operations ;operations tree ;tree degenerate ;degenerate severely ;severely unbalanced ;unbalanced height ;height equal ;equal scientists ;scientists expended ;expended lot ;lot effort ;effort structure ;structure preserves ;preserves good ;good properties ;properties classical ;classical binary ;binary tree ;tree principally ;principally logarithmic ;logarithmic efficiency ;efficiency dictionary ;dictionary operations ;operations set ;set ele ;ele ments ;ments sorted ;sorted avoids ;avoids worst ;worst case ;case degeneracy ;degeneracy approaches ;approaches approach ;approach instance ;instance simplification ;simplification variety ;variety unbalanced ;unbalanced binary ;binary tree ;tree transformed ;transformed balanced ;balanced trees ;trees called ;called balancing ;balancing specific ;specific implementations ;implementations idea ;idea differ ;differ definition ;definition avl ;avl tree ;tree requires ;requires difference ;difference heights ;heights left ;left subtrees ;subtrees node ;node exceed ;exceed red ;red black ;black tree ;tree tolerates ;tolerates height ;height subtree ;subtree large ;large subtree ;subtree node ;node insertion ;insertion deletion ;deletion node ;node creates ;creates tree ;tree violated ;violated requirement ;requirement tree ;tree restructured ;restructured family ;family special ;special transformations ;transformations called ;called rotations ;rotations restore ;restore required ;required section ;section discuss ;discuss avl ;avl trees ;trees information ;information types ;types binary ;binary trees ;trees utilize ;utilize idea ;idea rebalancing ;rebalancing rotations ;rotations red ;red black ;black trees ;trees splay ;splay trees ;trees references ;references cor ;cor sed ;sed tar ;tar approach ;approach representation ;representation variety ;variety element ;element node ;node tree ;tree specific ;specific cases ;cases trees ;trees general ;general important ;important trees ;trees differ ;differ elements ;elements admissible ;admissible single ;single node ;node tree ;tree perfectly ;perfectly balanced ;balanced discuss ;discuss simplest ;simplest case ;case trees ;trees tree ;tree section ;section leaving ;leaving discussion ;discussion trees ;trees chapter ;chapter avl ;avl trees ;trees avl ;avl trees ;trees invented ;invented russian ;russian scientists ;scientists adelson ;adelson velsky ;velsky landis ;landis ade ;ade data ;data structure ;structure named ;named figure ;figure avl ;avl tree ;tree binary ;binary tree ;tree avl ;avl tree ;tree numbers ;numbers nodes ;nodes factors ;factors definition ;definition avl ;avl tree ;tree binary ;binary tree ;tree factor ;factor node ;node defined ;defined difference ;difference heights ;heights node ;node left ;left subtrees ;subtrees height ;height tree ;tree defined ;defined factor ;factor computed ;computed difference ;difference numbers ;numbers levels ;levels height ;height difference ;difference node ;node left ;left subtrees ;subtrees binary ;binary tree ;tree figure ;figure avl ;avl tree ;tree figure ;figure insertion ;insertion node ;node makes ;makes avl ;avl tree ;tree unbalanced ;unbalanced transform ;transform tree ;tree rotation ;rotation avl ;avl tree ;tree local ;local transformation ;transformation subtree ;subtree rooted ;rooted node ;node nodes ;nodes rotate ;rotate tree ;tree rooted ;rooted unbalanced ;unbalanced node ;node closest ;closest newly ;newly inserted ;inserted leaf ;leaf types ;types rotations ;rotations fact ;fact mirror ;mirror images ;images simplest ;simplest rotations ;rotations shown ;shown figure ;figure rotation ;rotation called ;called single ;single rotation ;rotation rotating ;rotating edge ;edge connecting ;connecting root ;root left ;left child ;child binary ;binary tree ;tree figure ;figure presents ;presents single ;single rotation ;rotation general ;general rotation ;rotation performed ;performed key ;key inserted ;inserted left ;left subtree ;subtree left ;left child ;child tree ;tree root ;root insertion ;insertion symmetric ;symmetric single ;single left ;left rotation ;rotation mirror ;mirror image ;image single ;single rotation ;rotation performed ;performed key ;key inserted ;inserted subtree ;subtree child ;child tree ;tree root ;root insertion ;insertion asked ;asked draw ;draw diagram ;diagram general ;general case ;case single ;single rotation ;rotation exercises ;exercises figure ;figure rotation ;rotation types ;types avl ;avl trees ;trees nodes ;nodes single ;single rotation ;rotation single ;single rotation ;rotation called ;called left ;left rotation ;rotation fact ;fact combination ;combination rotations ;rotations rotation ;rotation left ;left subtree ;subtree root ;root rotation ;rotation tree ;tree rooted ;rooted figure ;figure performed ;performed key ;key inserted ;inserted subtree ;subtree left ;left child ;child tree ;tree root ;root insertion ;insertion single ;single rotation ;rotation figure ;figure general ;general rotation ;rotation avl ;avl tree ;tree shaded ;shaded node ;node inserted ;inserted rotation ;rotation figure ;figure general ;general rotation ;rotation avl ;avl tree ;tree shaded ;shaded node ;node inserted ;inserted left ;left subtree ;subtree root ;root grandchild ;grandchild left ;left rotation ;rotation mirror ;mirror image ;image rotation ;rotation left ;left exercises ;exercises rotations ;rotations trivial ;trivial transformations ;transformations fortunately ;fortunately constant ;constant resulting ;resulting tree ;tree balanced ;balanced basic ;basic requirements ;requirements binary ;binary tree ;tree initial ;initial tree ;tree figure ;figure keys ;keys subtree ;subtree smaller ;smaller keys ;keys subtree ;subtree smaller ;smaller keys ;keys subtree ;subtree relationships ;relationships key ;key values ;values hold ;hold balanced ;balanced tree ;tree rotation ;rotation figure ;figure construction ;construction avl ;avl tree ;tree successive ;successive insertions ;insertions parenthesized ;parenthesized rotation ;rotation abbreviation ;abbreviation root ;root tree ;tree reorganized ;reorganized constructing ;constructing avl ;avl tree ;tree numbers ;numbers shown ;shown figure ;figure algorithm ;algorithm operations ;operations mind ;mind nodes ;nodes rotation ;rotation tree ;tree rooted ;rooted unbalanced ;unbalanced node ;node closest ;closest newly ;newly inserted ;inserted leaf ;leaf efficient ;efficient avl ;avl trees ;trees tree ;tree critical ;critical charac ;charac teristic ;teristic tree ;tree height ;height turns ;turns bounded ;bounded logarithmic ;logarithmic functions ;functions specifically ;specifically height ;height avl ;avl tree ;tree nodes ;nodes satisfies ;satisfies inequalities ;inequalities log ;log weird ;weird constants ;constants offs ;offs irrational ;irrational numbers ;numbers related ;related fibonacci ;fibonacci numbers ;numbers golden ;golden ratio ;ratio section ;section inequalities ;inequalities immediately ;immediately imply ;imply operations ;operations searching ;searching insertion ;insertion log ;log worst ;worst case ;case exact ;exact formula ;formula average ;average height ;height avl ;avl tree ;tree constructed ;constructed random ;random lists ;lists keys ;keys proved ;proved difficult ;difficult extensive ;extensive experiments ;experiments log ;log small ;small knuiii ;knuiii searching ;searching avl ;avl tree ;tree requires ;requires average ;average comparisons ;comparisons searching ;searching sorted ;sorted array ;array binary ;binary operation ;operation key ;key deletion ;deletion avl ;avl tree ;tree considerably ;considerably difficult ;difficult insertion ;insertion fortunately ;fortunately turns ;turns efficiency ;efficiency class ;class insertion ;insertion logarithmic ;logarithmic impressive ;impressive efficiency ;efficiency characteristics ;characteristics price ;price drawbacks ;drawbacks avl ;avl trees ;trees frequent ;frequent rotations ;rotations maintain ;maintain balances ;balances nodes ;nodes drawbacks ;drawbacks prevented ;prevented avl ;avl trees ;trees standard ;standard structure ;structure implementing ;implementing dictionaries ;dictionaries underlying ;underlying idea ;idea rebalancing ;rebalancing binary ;binary tree ;tree rotations ;rotations proved ;proved fruitful ;fruitful led ;led discoveries ;discoveries interesting ;interesting variations ;variations classical ;classical binary ;binary tree ;tree trees ;trees mentioned ;mentioned beginning ;beginning section ;section idea ;idea balancing ;balancing tree ;tree key ;key node ;node tree ;tree simplest ;simplest implementation ;implementation idea ;idea trees ;trees introduced ;introduced scientist ;scientist john ;john hopcroft ;hopcroft tree ;tree nodes ;nodes kinds ;kinds nodes ;nodes node ;node single ;single key ;key children ;children left ;left child ;child serves ;serves root ;root subtree ;subtree keys ;keys child ;child serves ;serves root ;root subtree ;subtree keys ;keys greater ;greater words ;words node ;node kind ;kind node ;node classical ;classical binary ;binary tree ;tree node ;node ordered ;ordered keys ;keys children ;children leftmost ;leftmost child ;child serves ;serves root ;root subtree ;subtree keys ;keys middle ;middle child ;child serves ;serves root ;root subtree ;subtree keys ;keys rightmost ;rightmost child ;child serves ;serves root ;root subtree ;subtree keys ;keys greater ;greater figure ;figure requirement ;requirement tree ;tree leaves ;leaves words ;words tree ;tree perfectly ;perfectly height ;height balanced ;balanced length ;length path ;path root ;root leaf ;leaf property ;property buy ;buy allowing ;allowing key ;key node ;node tree ;tree searching ;searching key ;key tree ;tree straightforward ;straightforward root ;root node ;node act ;act binary ;binary tree ;tree equal ;equal root ;root key ;key left ;left node ;node figure ;figure kinds ;kinds nodes ;nodes tree ;tree subtree ;subtree smaller ;smaller larger ;larger root ;root key ;key root ;root node ;node key ;key comparisons ;comparisons stopped ;stopped equal ;equal root ;root keys ;keys root ;root subtrees ;subtrees continued ;continued inserting ;inserting key ;key tree ;tree insert ;insert key ;key leaf ;leaf tree ;tree leaf ;leaf performing ;performing leaf ;leaf node ;node insert ;insert key ;key depending ;depending smaller ;smaller larger ;larger node ;node key ;key leaf ;leaf node ;node split ;split leaf ;leaf smallest ;smallest keys ;keys key ;key leaf ;leaf largest ;largest key ;key leaf ;leaf middle ;middle key ;key promoted ;promoted leaf ;leaf parent ;parent leaf ;leaf tree ;tree root ;root created ;created middle ;middle key ;key promotion ;promotion middle ;middle key ;key parent ;parent node ;node lead ;lead node ;node splits ;splits chain ;chain leaf ;leaf ancestors ;ancestors tree ;tree construction ;construction figure ;figure tree ;tree efficiency ;efficiency dictionary ;dictionary operations ;operations depends ;depends tree ;tree height ;height upper ;upper bound ;bound tree ;tree height ;height smallest ;smallest keys ;keys tree ;tree nodes ;nodes final ;final tree ;tree figure ;figure tree ;tree height ;height nodes ;nodes inequality ;inequality log ;log tree ;tree height ;height largest ;largest keys ;keys tree ;tree nodes ;nodes keys ;keys children ;children tree ;tree nodes ;nodes figure ;figure construction ;construction tree ;tree log ;log lower ;lower upper ;upper bounds ;bounds height ;height log ;log imply ;imply efficiencies ;efficiencies searching ;searching insertion ;insertion deletion ;deletion log ;log worst ;worst average ;average case ;case important ;important generalization ;generalization trees ;trees called ;called trees ;trees section ;section exercises ;exercises binary ;binary trees ;trees avl ;avl trees ;trees draw ;draw binary ;binary trees ;trees nodes ;nodes requirement ;requirement avl ;avl trees ;trees draw ;draw binary ;binary tree ;tree height ;height avl ;avl tree ;tree smallest ;smallest nodes ;nodes trees ;trees draw ;draw diagrams ;diagrams single ;single rotation ;rotation general ;general lists ;lists construct ;construct avl ;avl tree ;tree inserting ;inserting ele ;ele ments ;ments successively ;successively starting ;starting tree ;tree avl ;avl tree ;tree real ;real numbers ;numbers design ;design algorithm ;algorithm comput ;comput ing ;ing range ;range difference ;difference largest ;largest smallest ;smallest numbers ;numbers tree ;tree determine ;determine worst ;worst case ;case efficiency ;efficiency true ;true false ;false smallest ;smallest largest ;largest keys ;keys avl ;avl tree ;tree write ;write constructing ;constructing avl ;avl tree ;tree distinct ;distinct integers ;integers construct ;construct tree ;tree alphabetical ;alphabetical letters ;letters insert ;insert successively ;successively starting ;starting tree ;tree assuming ;assuming probabilities ;probabilities searching ;searching keys ;keys letters ;letters largest ;largest average ;average key ;key comparisons ;comparisons successful ;successful searches ;searches tree ;tree classical ;classical binary ;binary tree ;tree constructed ;constructed keys ;keys inserted ;inserted trees ;trees true ;true false ;false searching ;searching key ;key takes ;takes key ;key comparisons ;comparisons searching ;searching tree ;tree real ;real numbers ;numbers design ;design algorithm ;algorithm computing ;computing range ;range difference ;difference largest ;largest smallest ;smallest numbers ;numbers tree ;tree determine ;determine worst ;worst case ;case efficiency ;efficiency write ;write constructing ;constructing tree ;tree integers ;integers heaps ;heaps heapsort ;heapsort data ;data structure ;structure called ;called disordered ;disordered pile ;pile items ;items word ;word definition ;definition standard ;standard dictionary ;dictionary clever ;clever partially ;partially ordered ;ordered data ;data structure ;structure suitable ;suitable implementing ;implementing priority ;priority queues ;queues recall ;recall priority ;priority multiset ;multiset items ;items orderable ;orderable characteristic ;characteristic called ;called item ;item priority ;priority operations ;operations figure ;figure illustration ;illustration definition ;definition leftmost ;leftmost tree ;tree finding ;finding item ;item highest ;highest largest ;largest priority ;priority deleting ;deleting item ;item highest ;highest priority ;priority adding ;adding item ;item multiset ;multiset primarily ;primarily efficient ;efficient implementation ;implementation operations ;operations makes ;makes interesting ;interesting priority ;priority queues ;queues arise ;arise naturally ;naturally plications ;plications scheduling ;scheduling job ;job executions ;executions operating ;operating systems ;systems traf ;traf fic ;fic management ;management communication ;communication networks ;networks arise ;arise impor ;impor tant ;tant algorithms ;algorithms prim ;prim algorithm ;algorithm section ;section dijkstra ;dijkstra algorithm ;algorithm sec ;sec tion ;tion huffman ;huffman encoding ;encoding section ;section bound ;bound applications ;applications section ;section data ;data structure ;structure serves ;serves cornerstone ;cornerstone theoretically ;theoretically important ;important sorting ;sorting algorithm ;algorithm called ;called heapsort ;heapsort discuss ;discuss algo ;algo rithm ;rithm define ;define investigate ;investigate basic ;basic properties ;properties notion ;notion definition ;definition defined ;defined binary ;binary tree ;tree keys ;keys assigned ;assigned nodes ;nodes key ;key node ;node provided ;provided conditions ;conditions met ;met shape ;shape property ;property binary ;binary tree ;tree essentially ;essentially simply ;simply plete ;plete levels ;levels possibly ;possibly rightmost ;rightmost leaves ;leaves missing ;missing parental ;parental dominance ;dominance property ;property key ;key node ;node greater ;greater equal ;equal keys ;keys children ;children condition ;condition considered ;considered auto ;auto matically ;matically satisfied ;satisfied leaves ;leaves trees ;trees figure ;figure tree ;tree shape ;shape property ;property violated ;violated parental ;parental dominance ;dominance fails ;fails node ;node key ;key values ;values ordered ;ordered sequence ;sequence values ;values path ;path root ;root leaf ;leaf decreasing ;decreasing nonincreasing ;nonincreasing equal ;equal keys ;keys allowed ;allowed left ;left key ;key values ;values authors ;authors require ;require key ;key node ;node equal ;equal keys ;keys children ;children variation ;variation min ;min array ;array representation ;representation index ;index parents ;parents leaves ;leaves figure ;figure array ;array representation ;representation relationship ;relationship key ;key values ;values nodes ;nodes tree ;tree generally ;generally left ;left subtrees ;subtrees node ;node important ;important properties ;properties heaps ;heaps difficult ;difficult prove ;prove properties ;properties figure ;figure exists ;exists essentially ;essentially binary ;binary tree ;tree nodes ;nodes height ;height equal ;equal log ;log root ;root largest ;largest element ;element node ;node considered ;considered descendants ;descendants implemented ;implemented array ;array recording ;recording elements ;elements left ;left fashion ;fashion convenient ;convenient elements ;elements positions ;positions array ;array leaving ;leaving unused ;unused putting ;putting sentinel ;sentinel greater ;greater element ;element representation ;representation parental ;parental node ;node keys ;keys positions ;positions array ;array leaf ;leaf keys ;keys occupy ;occupy positions ;positions children ;children key ;key array ;array parental ;parental position ;position positions ;positions correspondingly ;correspondingly parent ;parent key ;key position ;position define ;define array ;array element ;element position ;position half ;half array ;array greater ;greater equal ;equal elements ;elements positions ;positions max ;max satisfied ;satisfied ideas ;ideas majority ;majority algorithms ;algorithms dealing ;dealing heaps ;heaps easier ;easier understand ;understand heaps ;heaps binary ;binary trees ;trees actual ;actual implementations ;implementations simpler ;simpler efficient ;efficient arrays ;arrays construct ;construct keys ;keys principal ;principal alternatives ;alternatives construction ;construction algorithm ;algorithm illustrated ;illustrated figure ;figure initializes ;initializes essentially ;essentially binary ;binary tree ;tree nodes ;nodes placing ;placing keys ;keys heapifies ;heapifies tree ;tree starting ;starting parental ;parental node ;node algorithm ;algorithm checks ;checks parental ;parental figure ;figure construction ;construction headed ;headed arrows ;arrows key ;key comparisons ;comparisons verifying ;verifying parental ;parental dominance ;dominance holds ;holds key ;key node ;node algorithm ;algorithm exchanges ;exchanges node ;node key ;key larger ;larger key ;key children ;children checks ;checks parental ;parental dominance ;dominance holds ;holds position ;position process ;process continues ;continues parental ;parental dominance ;dominance satisfied ;satisfied eventually ;eventually holds ;holds automatically ;automatically key ;key leaf ;leaf completing ;completing heapification ;heapification subtree ;subtree rooted ;rooted current ;current parental ;parental node ;node algorithm ;algorithm proceeds ;proceeds node ;node predecessor ;predecessor algorithm ;algorithm stops ;stops root ;root tree ;tree algorithm ;algorithm heapbottomup ;heapbottomup constructs ;constructs elements ;elements array ;array algorithm ;algorithm input ;input array ;array orderable ;orderable items ;items output ;output downto ;downto false ;false children ;children true ;true efficient ;efficient algorithm ;algorithm worst ;worst case ;case assume ;assume simplicity ;simplicity tree ;tree largest ;largest nodes ;nodes occurs ;occurs height ;height tree ;tree property ;property heaps ;heaps beginning ;beginning section ;section log ;log specific ;specific values ;values key ;key tree ;tree leaf ;leaf worst ;worst case ;case construction ;construction algorithm ;algorithm moving ;moving requires ;requires comparisons ;comparisons larger ;larger child ;child determine ;determine exchange ;exchange required ;required total ;total key ;key comparisons ;comparisons involving ;involving key ;key total ;total key ;key comparisons ;comparisons worst ;worst case ;case cworst ;cworst log ;log keys ;keys validity ;validity equality ;equality proved ;proved closed ;closed formula ;formula sum ;sum appendix ;appendix mathematical ;mathematical induction ;induction algorithm ;algorithm size ;size constructed ;constructed comparisons ;comparisons alternative ;alternative efficient ;efficient algorithm ;algorithm constructs ;constructs successive ;successive insertions ;insertions key ;key previously ;previously constructed ;constructed people ;people construction ;construction algorithm ;algorithm insert ;insert key ;key node ;node key ;key leaf ;leaf existing ;existing sift ;sift parent ;parent key ;key greater ;greater equal ;equal structure ;structure swap ;swap keys ;keys parent ;parent swapping ;swapping continues ;continues greater ;greater parent ;parent reaches ;reaches root ;root illustrated ;illustrated figure ;figure insertion ;insertion operation ;operation require ;require key ;key comparisons ;comparisons height ;height nodes ;nodes log ;log efficiency ;efficiency insertion ;insertion log ;log delete ;delete item ;item important ;important case ;case deleting ;deleting root ;root key ;key leaving ;leaving deleting ;deleting arbitrary ;arbitrary key ;key exercises ;exercises authors ;authors textbooks ;textbooks things ;things readers ;readers deleting ;deleting root ;root key ;key algorithm ;algorithm illustrated ;illustrated figure ;figure inserting ;inserting key ;key constructed ;constructed figure ;figure key ;key sifted ;sifted swap ;swap parent ;parent larger ;larger parent ;parent root ;root figure ;figure deleting ;deleting root ;root key ;key deleted ;deleted swapped ;swapped key ;key smaller ;smaller tree ;tree heapified ;heapified exchanging ;exchanging key ;key root ;root larger ;larger key ;key children ;children parental ;parental dominance ;dominance requirement ;requirement satisfied ;satisfied maximum ;maximum key ;key deletion ;deletion exchange ;exchange root ;root key ;key decrease ;decrease size ;size heapify ;heapify smaller ;smaller tree ;tree sifting ;sifting tree ;tree construction ;construction algorithm ;algorithm verify ;verify parental ;parental dominance ;dominance holds ;holds swap ;swap larger ;larger children ;children operation ;operation parental ;parental dominance ;dominance condition ;condition holds ;holds position ;position efficiency ;efficiency deletion ;deletion determined ;determined key ;key comparisons ;comparisons needed ;needed heapify ;heapify tree ;tree swap ;swap size ;size tree ;tree decreased ;decreased require ;require key ;key comparisons ;comparisons height ;height efficiency ;efficiency deletion ;deletion log ;log heapsort ;heapsort interesting ;interesting sorting ;sorting algorithm ;algorithm discovered ;discovered williams ;williams wil ;wil stage ;stage algorithm ;algorithm works ;works stage ;stage construction ;construction construct ;construct array ;array stage ;stage maximum ;maximum deletions ;deletions apply ;apply root ;root deletion ;deletion operation ;operation times ;times remaining ;remaining result ;result array ;array elements ;elements eliminated ;eliminated decreasing ;decreasing array ;array implementation ;implementation heaps ;heaps element ;element deleted ;deleted resulting ;resulting array ;array original ;original array ;array sorted ;sorted increasing ;increasing heapsort ;heapsort traced ;traced specific ;specific input ;input figure ;figure input ;input stage ;stage construction ;construction stage ;stage maximum ;maximum deletions ;deletions figure ;figure sorting ;sorting array ;array heapsort ;heapsort figure ;figure intentionally ;intentionally tree ;tree array ;array implementations ;implementations construction ;construction algorithm ;algorithm construction ;construction stage ;stage algorithm ;algorithm investigate ;investigate efficiency ;efficiency stage ;stage key ;key comparisons ;comparisons needed ;needed eliminating ;eliminating root ;root keys ;keys heaps ;heaps diminishing ;diminishing sizes ;sizes inequality ;inequality log ;log means ;means log ;log stage ;stage heapsort ;heapsort stages ;stages log ;log detailed ;detailed analysis ;analysis shows ;shows efficiency ;efficiency heapsort ;heapsort fact ;fact log ;log worst ;worst average ;average cases ;cases heapsort ;heapsort efficiency ;efficiency falls ;falls class ;class mergesort ;mergesort heapsort ;heapsort require ;require extra ;extra storage ;storage timing ;timing experiments ;experiments random ;random files ;files heapsort ;heapsort runs ;runs slowly ;slowly quicksort ;quicksort competitive ;competitive mergesort ;mergesort exercises ;exercises construct ;construct algorithm ;algorithm construct ;construct successive ;successive key ;key insertions ;insertions algorithm ;algorithm true ;true algorithms ;algorithms yield ;yield input ;input outline ;outline algorithm ;algorithm checking ;checking array ;array determine ;determine efficiency ;efficiency smallest ;smallest largest ;largest keys ;keys height ;height prove ;prove height ;height nodes ;nodes equal ;equal log ;log prove ;prove equality ;equality section ;section log ;log design ;design efficient ;efficient algorithm ;algorithm finding ;finding deleting ;deleting element ;element smallest ;smallest determine ;determine efficiency ;efficiency design ;design efficient ;efficient algorithm ;algorithm finding ;finding deleting ;deleting element ;element determine ;determine efficiency ;efficiency classes ;classes main ;main operations ;operations priority ;priority implemented ;implemented unsorted ;unsorted array ;array sorted ;sorted array ;array binary ;binary tree ;tree avl ;avl tree ;tree sort ;sort lists ;lists heapsort ;heapsort array ;array representation ;representation heaps ;heaps increasing ;increasing alphabetical ;alphabetical heapsort ;heapsort stable ;stable sorting ;sorting algorithm ;algorithm variety ;variety transform ;transform conquer ;conquer technique ;technique heapsort ;heapsort repre ;repre sorting ;sorting algorithm ;algorithm heapsort ;heapsort priority ;priority implement ;implement advanced ;advanced sorting ;sorting algorithms ;algorithms mergesort ;mergesort quicksort ;quicksort heapsort ;heapsort language ;language choice ;choice investigate ;investigate performance ;performance arrays ;arrays sizes ;sizes randomly ;randomly generated ;generated files ;files integers ;integers range ;range increasing ;increasing files ;files integers ;integers decreasing ;decreasing files ;files integers ;integers spaghetti ;spaghetti sort ;sort handful ;handful uncooked ;uncooked spaghetti ;spaghetti individual ;individual rods ;rods lengths ;lengths represent ;represent numbers ;numbers sorted ;sorted outline ;outline spaghetti ;spaghetti sort ;sort sorting ;sorting algorithm ;algorithm takes ;takes advantage ;advantage unorthodox ;unorthodox representation ;representation science ;science folklore ;folklore dew ;dew topic ;topic chapter ;chapter general ;general heapsort ;heapsort horner ;horner binary ;binary exponentiation ;exponentiation section ;section discuss ;discuss problem ;problem computing ;computing polynomial ;polynomial anxn ;anxn important ;important special ;special case ;case computing ;computing polynomials ;polynomials constitute ;constitute important ;important class ;class functions ;functions wealth ;wealth good ;good properties ;properties approximating ;approximating types ;types functions ;functions problem ;problem manipulating ;manipulating polynomials ;polynomials efficiently ;efficiently important ;important centuries ;centuries discoveries ;discoveries years ;years important ;important fast ;fast fourier ;fourier transform ;transform fft ;fft practical ;practical importance ;importance remarkable ;remarkable algorithm ;algorithm based ;based representing ;representing polynomial ;polynomial values ;values specially ;specially chosen ;chosen points ;points people ;people important ;important algorithmic ;algorithmic discoveries ;discoveries relative ;relative complexity ;complexity discuss ;discuss fft ;fft algorithm ;algorithm interested ;interested reader ;reader wealth ;wealth literature ;literature subject ;subject accessible ;accessible treatments ;treatments textbooks ;textbooks kle ;kle cor ;cor horner ;horner elegant ;elegant efficient ;efficient algorithm ;algorithm evaluating ;evaluating polynomial ;polynomial named ;named british ;british mathematician ;mathematician horner ;horner pub ;pub lished ;lished early ;early century ;century knuth ;knuth knuii ;knuii method ;method isaac ;isaac newton ;newton years ;years horner ;horner method ;method design ;design algorithm ;algorithm polynomial ;polynomial evalu ;evalu ation ;ation problem ;problem investigate ;investigate efficiency ;efficiency problems ;problems section ;section exercises ;exercises horner ;horner good ;good representation ;representation technique ;technique based ;based representing ;representing formula ;formula obtained ;obtained successively ;successively taking ;taking common ;common factor ;factor remaining ;remaining polynomials ;polynomials diminishing ;diminishing degrees ;degrees anx ;anx polynomial ;polynomial formula ;formula substitute ;substitute polynomial ;polynomial evaluated ;evaluated hard ;hard efficient ;efficient algorithm ;algorithm unpleasant ;unpleasant appearance ;appearance formula ;formula appearance ;appearance explicitly ;explicitly transformation ;transformation leading ;leading original ;original polynomial ;polynomial coefficients ;coefficients pen ;pen pencil ;pencil calculation ;calculation conveniently ;conveniently organized ;organized tworow ;tworow table ;table row ;row polynomial ;polynomial coefficients ;coefficients equal ;equal listed ;listed highest ;highest lowest ;lowest entry ;entry row ;row filled ;filled left ;left entry ;entry computed ;computed times ;times entry ;entry row ;row coefficient ;coefficient row ;row final ;final entry ;entry computed ;computed fashion ;fashion sought ;sought evaluate ;evaluate coefficients ;coefficients comparing ;comparing table ;table entries ;entries formula ;formula finally ;finally pseudocode ;pseudocode algorithm ;algorithm shortest ;shortest imaginable ;imaginable nontrivial ;nontrivial algorithm ;algorithm horner ;horner evaluates ;evaluates polynomial ;polynomial horner ;horner input ;input array ;array coefficients ;coefficients polynomial ;polynomial degree ;degree stored ;stored lowest ;lowest highest ;highest output ;output polynomial ;polynomial downto ;downto multiplications ;multiplications additions ;additions sum ;sum efficient ;efficient horner ;horner term ;term polynomial ;polynomial degree ;degree anxn ;anxn computing ;computing single ;single term ;term brute ;brute algorithm ;algorithm require ;require multiplications ;multiplications horner ;horner computes ;computes addition ;addition term ;term terms ;terms multiplications ;multiplications surprising ;surprising horner ;horner optimal ;optimal algorithm ;algorithm polynomial ;polynomial evaluation ;evaluation preprocessing ;preprocessing polynomial ;polynomial coefficients ;coefficients scientists ;scientists years ;years horner ;horner publication ;publication realization ;realization investigating ;investigating horner ;horner byproducts ;byproducts intermediate ;intermediate numbers ;numbers generated ;generated algorithm ;algorithm process ;process evaluating ;evaluating coefficients ;coefficients quotient ;quotient division ;division final ;final result ;result addition ;addition equal ;equal remainder ;remainder division ;division quotient ;quotient remainder ;remainder division ;division algorithm ;algorithm synthetic ;synthetic division ;division convenient ;convenient called ;called division ;division binary ;binary exponentiation ;exponentiation amazing ;amazing efficiency ;efficiency horner ;horner fades ;fades method ;method applied ;applied comput ;comput ing ;ing fact ;fact degenerates ;degenerates brute ;brute multiplication ;multiplication wasteful ;wasteful additions ;additions zeros ;zeros computing ;computing mod ;mod essential ;essential operation ;operation important ;important primality ;primality testing ;testing encryption ;encryption methods ;methods algorithms ;algorithms computing ;computing based ;based representation ;representation idea ;idea exploit ;exploit binary ;binary representation ;representation exponent ;exponent processes ;processes binary ;binary string ;string left ;left bit ;bit string ;string representing ;representing positive ;positive integer ;integer binary ;binary means ;means computed ;computed polynomial ;polynomial bixi ;bixi binary ;binary representation ;representation compute ;compute polynomial ;polynomial applying ;applying horner ;horner method ;method operations ;operations imply ;imply computing ;computing power ;power abi ;abi horner ;horner binary ;binary polynomial ;polynomial implications ;implications leading ;leading digit ;digit downto ;downto abi ;abi initializing ;initializing accumulator ;accumulator scan ;scan bit ;bit string ;string representing ;representing exponent ;exponent square ;square accumulator ;accumulator current ;current binary ;binary digit ;digit observations ;observations lead ;lead left ;left binary ;binary exponentiation ;exponentiation method ;method computing ;computing algorithm ;algorithm leftrightbinaryexponentiation ;leftrightbinaryexponentiation computes ;computes left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm input ;input binary ;binary digits ;digits binary ;binary expansion ;expansion positive ;positive integer ;integer output ;output product ;product downto ;downto product ;product compute ;compute left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm binary ;binary digits ;digits product ;product accumulator ;accumulator algorithm ;algorithm makes ;makes multiplications ;multiplications repetition ;repetition loop ;loop total ;total multiplications ;multiplications computing ;computing length ;length bit ;bit string ;string representing ;representing exponent ;exponent taking ;taking account ;account log ;log conclude ;conclude efficiency ;efficiency leftto ;leftto binary ;binary exponentiation ;exponentiation logarithmic ;logarithmic algorithm ;algorithm efficiency ;efficiency class ;class brute ;brute exponentiation ;exponentiation requires ;requires multiplications ;multiplications left ;left binary ;binary exponentiation ;exponentiation binary ;binary polynomial ;polynomial yielding ;yielding applying ;applying horner ;horner previous ;previous method ;method exploits ;exploits differently ;differently abi ;abi computed ;computed product ;product terms ;terms abi ;abi product ;product consecutive ;consecutive terms ;terms skipping ;skipping binary ;binary digit ;digit addition ;addition compute ;compute simply ;simply squaring ;squaring term ;term computed ;computed previous ;previous compute ;compute powers ;powers smallest ;smallest largest ;largest left ;left product ;product accumulator ;accumulator binary ;binary digit ;digit pseudocode ;pseudocode algorithm ;algorithm rightleftbinaryexponentiation ;rightleftbinaryexponentiation computes ;computes left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm input ;input binary ;binary digits ;digits binary ;binary expansion ;expansion nonnegative ;nonnegative integer ;integer output ;output term ;term initializes ;initializes product ;product term ;term product ;product term ;term product ;product compute ;compute left ;left binary ;binary exponentiation ;exponentiation method ;method table ;table filled ;filled left ;left binary ;binary digits ;digits terms ;terms product ;product accumulator ;accumulator algorithm ;algorithm efficiency ;efficiency logarithmic ;logarithmic reason ;reason left ;left binary ;binary multiplication ;multiplication usefulness ;usefulness binary ;binary exponentia ;exponentia tion ;tion algorithms ;algorithms reduced ;reduced reliance ;reliance availability ;availability explicit ;explicit binary ;binary expansion ;expansion exponent ;exponent problem ;problem section ;section exercises ;exercises asks ;asks design ;design algorithm ;algorithm shortcoming ;shortcoming exercises ;exercises brute ;brute algorithm ;algorithm evaluating ;evaluating polynomial ;polynomial algorithm ;algorithm bruteforcepolynomialevaluation ;bruteforcepolynomialevaluation computes ;computes polynomial ;polynomial highest ;highest lowest ;lowest term ;term brute ;brute algorithm ;algorithm input ;input array ;array coefficients ;coefficients polynomial ;polynomial degree ;degree stored ;stored lowest ;lowest highest ;highest output ;output polynomial ;polynomial downto ;downto power ;power total ;total multiplications ;multiplications total ;total additions ;additions algorithm ;algorithm write ;write pseudocode ;pseudocode brute ;brute polynomial ;polynomial evaluation ;evaluation stems ;stems substituting ;substituting variable ;variable polynomial ;polynomial formula ;formula evaluating ;evaluating lowest ;lowest term ;term highest ;highest determine ;determine multiplications ;multiplications additions ;additions algorithm ;algorithm estimate ;estimate faster ;faster horner ;horner compared ;compared lowest ;lowest highest ;highest term ;term brute ;brute algorithm ;algorithm problem ;problem multiplication ;multiplication significantly ;significantly larger ;larger addition ;addition multiplication ;multiplication addition ;addition horner ;horner efficient ;efficient expense ;expense space ;space efficient ;efficient brute ;brute algorithm ;algorithm apply ;apply horner ;horner evaluate ;evaluate polynomial ;polynomial results ;results application ;application horner ;horner quo ;quo tient ;tient remainder ;remainder division ;division apply ;apply horner ;horner convert ;convert binary ;binary decimal ;decimal multiplications ;multiplications additions ;additions subtractions ;subtractions needed ;needed division ;division polynomial ;polynomial anxn ;anxn constant ;constant operations ;operations synthetic ;synthetic division ;division apply ;apply left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm compute ;compute left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm nonnegative ;nonnegative integer ;integer exponent ;exponent apply ;apply left ;left binary ;binary exponentiation ;exponentiation algorithm ;algorithm compute ;compute design ;design nonrecursive ;nonrecursive algorithm ;algorithm computing ;computing mimics ;mimics left ;left binary ;binary exponentiation ;exponentiation explicitly ;explicitly binary ;binary representation ;representation good ;good idea ;idea general ;general purpose ;purpose polynomial ;polynomial evaluation ;evaluation algorithm ;algorithm horner ;horner evaluate ;evaluate polynomial ;polynomial corollary ;corollary fundamental ;fundamental theorem ;theorem algebra ;algebra polynomial ;polynomial anxn ;anxn represented ;represented roots ;roots polynomial ;polynomial generally ;generally complex ;complex necessarily ;necessarily distinct ;distinct discuss ;discuss representations ;representations convenient ;convenient operations ;operations polynomial ;polynomial evaluation ;evaluation addition ;addition polynomials ;polynomials multiplication ;multiplication polynomials ;polynomials polynomial ;polynomial interpolation ;interpolation set ;set data ;data points ;points polynomial ;polynomial degree ;degree problem ;problem reduction ;reduction version ;version mathematicians ;mathematicians professor ;professor noted ;noted mathematician ;mathematician noticed ;noticed wife ;wife wanted ;wanted tea ;tea kettle ;kettle cupboard ;cupboard filled ;filled stove ;stove wife ;wife signing ;signing seller ;seller local ;local bookstore ;bookstore professor ;professor kettle ;kettle sitting ;sitting kitchen ;kitchen counter ;counter professor ;professor kettle ;kettle cupboard ;cupboard proceeded ;proceeded wife ;wife routine ;routine reduction ;reduction alg ;alg problem ;problem solution ;solution solved ;solved solvable ;solvable alg ;alg problem ;problem figure ;figure problem ;problem reduction ;reduction strategy ;strategy professor ;professor approached ;approached task ;task important ;important problem ;problem solving ;solving strategy ;strategy called ;called problem ;problem reduction ;reduction solve ;solve problem ;problem solve ;solve figure ;figure professor ;professor idea ;idea problem ;problem reduction ;reduction plays ;plays central ;central role ;role theoretical ;theoretical science ;science classify ;classify problems ;problems complexity ;complexity classification ;classification chapter ;chapter strategy ;strategy actual ;actual problem ;problem solving ;solving practical ;practical difficulty ;difficulty applying ;applying lies ;lies finding ;finding problem ;problem reduced ;reduced efforts ;efforts practical ;practical reduction ;reduction based ;based algorithm ;algorithm efficient ;efficient solving ;solving original ;original problem ;problem directly ;directly encountered ;encountered technique ;technique earlier ;earlier section ;section mentioned ;mentioned called ;called synthetic ;synthetic division ;division applying ;applying horner ;horner polynomial ;polynomial evaluation ;evaluation section ;section fact ;fact analytical ;analytical geometry ;geometry arbitrary ;arbitrary points ;points plane ;plane determinant ;determinant positive ;positive left ;left directed ;directed line ;line points ;points words ;words reduced ;reduced geometric ;geometric relative ;relative locations ;locations points ;points determinant ;determinant fact ;fact entire ;entire idea ;idea analytical ;analytical geometry ;geometry based ;based reducing ;reducing geometric ;geometric problems ;problems algebraic ;algebraic vast ;vast majority ;majority geometric ;geometric algorithms ;algorithms advantage ;advantage historic ;historic insight ;insight rene ;rene descartes ;descartes section ;section examples ;examples algorithms ;algorithms based ;based strategy ;strategy problem ;problem reduction ;reduction computing ;computing common ;common multiple ;multiple recall ;recall common ;common multiple ;multiple positive ;positive integers ;integers denoted ;denoted lcm ;lcm defined ;defined smallest ;smallest integer ;integer divisible ;divisible lcm ;lcm common ;common multiple ;multiple important ;important notions ;notions elementary ;elementary arithmetic ;arithmetic algebra ;algebra middle ;middle school ;school method ;method computing ;computing prime ;prime factorizations ;factorizations compute ;compute product ;product common ;common prime ;prime factors ;factors prime ;prime factors ;factors prime ;prime factors ;factors lcm ;lcm computational ;computational procedure ;procedure algorithm ;algorithm drawbacks ;drawbacks middle ;middle school ;school algorithm ;algorithm computing ;computing greatest ;greatest common ;common divisor ;divisor discussed ;discussed section ;section inefficient ;inefficient requires ;requires consecutive ;consecutive primes ;primes efficient ;efficient algorithm ;algorithm computing ;computing common ;common multiple ;multiple devised ;devised problem ;problem reduction ;reduction efficient ;efficient algorithm ;algorithm euclid ;euclid algorithm ;algorithm finding ;finding greatest ;greatest common ;common divisor ;divisor product ;product common ;common prime ;prime factors ;factors formula ;formula relating ;relating lcm ;lcm gcd ;gcd difficult ;difficult product ;product lcm ;lcm gcd ;gcd includes ;includes factor ;factor simply ;simply equal ;equal product ;product observation ;observation leads ;leads formula ;formula lcm ;lcm gcd ;gcd computed ;computed efficiently ;efficiently euclid ;euclid algorithm ;algorithm counting ;counting paths ;paths graph ;graph problem ;problem counting ;counting paths ;paths vertices ;vertices graph ;graph difficult ;difficult prove ;prove mathematical ;mathematical induction ;induction paths ;paths length ;length ith ;ith vertex ;vertex graph ;graph undirected ;undirected directed ;directed equals ;equals element ;element adjacency ;adjacency matrix ;matrix graph ;graph problem ;problem counting ;counting graph ;graph paths ;paths solved ;solved algorithm ;algorithm computing ;computing power ;power adjacency ;adjacency matrix ;matrix exponentiation ;exponentiation algorithms ;algorithms discussed ;discussed computing ;computing powers ;powers numbers ;numbers applicable ;applicable matrices ;matrices specific ;specific graph ;graph figure ;figure adjacency ;adjacency matrix ;matrix square ;square numbers ;numbers paths ;paths length ;length vertices ;vertices graph ;graph figure ;figure graph ;graph adjacency ;adjacency matrix ;matrix square ;square elements ;elements numbers ;numbers paths ;paths lengths ;lengths paths ;paths length ;length vertex ;vertex path ;path length ;length reduction ;reduction optimization ;optimization problems ;problems deals ;deals solving ;solving optimization ;optimization problems ;problems problem ;problem asks ;asks maximum ;maximum function ;function maximization ;maximization problem ;problem asks ;asks function ;function minimum ;minimum called ;called minimization ;minimization problem ;problem minimum ;minimum function ;function algorithm ;algorithm function ;function maximization ;maximization advantage ;advantage lies ;lies simple ;simple formula ;formula min ;min max ;max words ;words minimize ;minimize function ;function maximize ;maximize negative ;negative minimal ;minimal function ;function property ;property illustrated ;illustrated function ;function real ;real variable ;variable figure ;figure formula ;formula max ;max min ;min valid ;valid shows ;shows maximization ;maximization problem ;problem reduced ;reduced equivalent ;equivalent minimization ;minimization problem ;problem relationship ;relationship minimization ;minimization maximization ;maximization problems ;problems general ;general holds ;holds functions ;functions defined ;defined domain ;domain figure ;figure relationship ;relationship minimization ;minimization maximization ;maximization problems ;problems min ;min max ;max apply ;apply functions ;functions variables ;variables subject ;subject additional ;additional constraints ;constraints important ;important class ;class problems ;problems introduced ;introduced section ;section topic ;topic function ;function optimization ;optimization pointing ;pointing standard ;standard calculus ;calculus procedure ;procedure finding ;finding extremum ;extremum points ;points function ;function fact ;fact based ;based problem ;problem reduction ;reduction suggests ;suggests finding ;finding function ;function derivative ;derivative solving ;solving equation ;equation function ;function critical ;critical points ;points words ;words optimization ;optimization problem ;problem reduced ;reduced problem ;problem solving ;solving equation ;equation principal ;principal finding ;finding extremum ;extremum points ;points calling ;calling calculus ;calculus procedure ;procedure algorithm ;algorithm defined ;defined fact ;fact general ;general method ;method solving ;solving equations ;equations secret ;secret calculus ;calculus textbooks ;textbooks problems ;problems carefully ;carefully selected ;selected critical ;critical points ;points difficulty ;difficulty makes ;makes lives ;lives students ;students instructors ;instructors easier ;easier process ;process unintentionally ;unintentionally create ;create wrong ;wrong impression ;impression students ;students minds ;minds linear ;linear programming ;programming problems ;problems optimal ;optimal decision ;decision making ;making reduced ;reduced instance ;instance linear ;linear programming ;programming problem ;problem optimizing ;optimizing linear ;linear function ;function variables ;variables subject ;subject constraints ;constraints linear ;linear equations ;equations linear ;linear inequalities ;inequalities university ;university endowment ;endowment invest ;invest sum ;sum split ;split types ;types investments ;investments stocks ;stocks bonds ;bonds cash ;cash endowment ;endowment managers ;managers annual ;annual stock ;stock bond ;bond cash ;cash investments ;investments stocks ;stocks risky ;risky bonds ;bonds endowment ;endowment rules ;rules require ;require invested ;invested stocks ;stocks moneys ;moneys invested ;invested bonds ;bonds addition ;addition total ;total invested ;invested stocks ;stocks bonds ;bonds invested ;invested cash ;cash managers ;managers invest ;invest money ;money maximize ;maximize create ;create mathematical ;mathematical model ;model problem ;problem amounts ;amounts millions ;millions dollars ;dollars invested ;invested stocks ;stocks bonds ;bonds cash ;cash variables ;variables pose ;pose optimization ;optimization problem ;problem maximize ;maximize subject ;subject small ;small simple ;simple problem ;problem optimal ;optimal decision ;decision making ;making reduced ;reduced instance ;instance general ;general linear ;linear programming ;programming problem ;problem maximize ;maximize minimize ;minimize cnxn ;cnxn subject ;subject ainxn ;ainxn group ;group constraints ;constraints called ;called nonnegativity ;nonnegativity constraints ;constraints strictly ;strictly speaking ;speaking unnecessary ;unnecessary special ;special cases ;cases general ;general constraints ;constraints ainxn ;ainxn convenient ;convenient separately ;separately linear ;linear programming ;programming proved ;proved flexible ;flexible model ;model wide ;wide variety ;variety important ;important applications ;applications airline ;airline crew ;crew scheduling ;scheduling transportation ;transportation communication ;communication network ;network planning ;planning oil ;oil exploration ;exploration refining ;refining industrial ;industrial production ;production optimization ;optimization fact ;fact linear ;linear programming ;programming considered ;considered important ;important achievements ;achievements history ;history applied ;applied mathematics ;mathematics classic ;classic algorithm ;algorithm problem ;problem called ;called simplex ;simplex method ;method section ;section discovered ;discovered mathematician ;mathematician george ;george dantzig ;dantzig dan ;dan worst ;worst case ;case efficiency ;efficiency algorithm ;algorithm exponential ;exponential performs ;performs typical ;typical inputs ;inputs recent ;recent algorithm ;algorithm narendra ;narendra karmarkar ;karmarkar kar ;kar proven ;proven polynomial ;polynomial worstcase ;worstcase efficiency ;efficiency performed ;performed competitively ;competitively simplex ;simplex method ;method empirical ;empirical tests ;tests important ;important stress ;stress simplex ;simplex method ;method karmarkar ;karmarkar algorithm ;algorithm successfully ;successfully linear ;linear programming ;programming problems ;problems limit ;limit variables ;variables integer ;integer values ;values variables ;variables linear ;linear programming ;programming problem ;problem required ;required integers ;integers linear ;linear programming ;programming problem ;problem integer ;integer linear ;linear programming ;programming problem ;problem special ;special cases ;cases assignment ;assignment problem ;problem problems ;problems discussed ;discussed sections ;sections integer ;integer linear ;linear programming ;programming problems ;problems difficult ;difficult polynomial ;polynomial algorithm ;algorithm solving ;solving arbitrary ;arbitrary instance ;instance general ;general integer ;integer linear ;linear programming ;programming problem ;problem chapter ;chapter algorithm ;algorithm possibly ;possibly approaches ;approaches bound ;bound technique ;technique discussed ;discussed section ;section typically ;typically solving ;solving integer ;integer linear ;linear programming ;programming problems ;problems knapsack ;knapsack problem ;problem reduced ;reduced linear ;linear programming ;programming problem ;problem recall ;recall section ;section knapsack ;knapsack problem ;problem posed ;posed knapsack ;knapsack capacity ;capacity items ;items weights ;weights values ;values valuable ;valuable subset ;subset items ;items fits ;fits knapsack ;knapsack continuous ;continuous fractional ;fractional version ;version problem ;problem fraction ;fraction item ;item knapsack ;knapsack variable ;variable representing ;representing fraction ;fraction item ;item knapsack ;knapsack inequality ;inequality total ;total weight ;weight selected ;selected items ;items expressed ;expressed sum ;sum total ;total sum ;sum continuous ;continuous version ;version knapsack ;knapsack problem ;problem posed ;posed linear ;linear programming ;programming problem ;problem maximize ;maximize subject ;subject apply ;apply general ;general method ;method solving ;solving linear ;linear programming ;programming problems ;problems problem ;problem solved ;solved simple ;simple special ;special algorithm ;algorithm introduced ;introduced section ;section reduction ;reduction knapsack ;knapsack problem ;problem instance ;instance linear ;linear programming ;programming problem ;problem prove ;prove correctness ;correctness algorithm ;algorithm discrete ;discrete version ;version knapsack ;knapsack problem ;problem allowed ;allowed item ;item integer ;integer linear ;linear programming ;programming problem ;problem version ;version maximize ;maximize subject ;subject seemingly ;seemingly minor ;minor modification ;modification makes ;makes drastic ;drastic difference ;difference plexity ;plexity similar ;similar problems ;problems constrained ;constrained discrete ;discrete values ;values potential ;potential ranges ;ranges fact ;fact version ;version eas ;eas ier ;ier subset ;subset continuous ;continuous version ;version fractional ;fractional item ;item version ;version fact ;fact complicated ;complicated tinuous ;tinuous counterpart ;counterpart reader ;reader interested ;interested specific ;specific algorithms ;algorithms solving ;solving problem ;problem wealth ;wealth literature ;literature subject ;subject monographs ;monographs mar ;mar kel ;kel reduction ;reduction graph ;graph problems ;problems pointed ;pointed section ;section problems ;problems solved ;solved reduction ;reduction standard ;standard graph ;graph problems ;problems true ;true variety ;variety puzzles ;puzzles games ;games applications ;applications vertices ;vertices graph ;graph typically ;typically represent ;represent states ;states problem ;problem edges ;edges permitted ;permitted transi ;transi tions ;tions states ;states graph ;graph vertices ;vertices represents ;represents initial ;initial state ;state represents ;represents goal ;goal state ;state problem ;problem vertices ;vertices kind ;kind graph ;graph called ;called state ;state space ;space graph ;graph transfor ;transfor mation ;mation reduces ;reduces problem ;problem path ;path initial ;initial state ;state vertex ;vertex goal ;goal state ;state vertex ;vertex pwgc ;pwgc pwc ;pwc pwg ;pwg pgc ;pgc pwg ;pwg pwc ;pwc pwgc ;pwgc figure ;figure state ;state space ;space graph ;graph peasant ;peasant wolf ;wolf goat ;goat cabbage ;cabbage puzzle ;puzzle revisit ;revisit classic ;classic river ;river crossing ;crossing puzzle ;puzzle included ;included exercises ;exercises section ;section peasant ;peasant finds ;finds river ;river bank ;bank wolf ;wolf goat ;goat cabbage ;cabbage river ;river boat ;boat room ;room peasant ;peasant item ;item wolf ;wolf goat ;goat cabbage ;cabbage absence ;absence wolf ;wolf eat ;eat goat ;goat eat ;eat cabbage ;cabbage peasant ;peasant solve ;solve problem ;problem prove ;prove solution ;solution state ;state space ;space graph ;graph problem ;problem figure ;figure vertices ;vertices labeled ;labeled states ;states represent ;represent stand ;stand peasant ;peasant wolf ;wolf goat ;goat cabbage ;cabbage bars ;bars denote ;denote river ;river convenience ;convenience edges ;edges indicating ;indicating boat ;boat occupants ;occupants crossing ;crossing terms ;terms graph ;graph interested ;interested finding ;finding path ;path initial ;initial state ;state vertex ;vertex labeled ;labeled pwgc ;pwgc final ;final state ;state vertex ;vertex labeled ;labeled pwgc ;pwgc easy ;easy distinct ;distinct simple ;simple paths ;paths initialstate ;initialstate vertex ;vertex final ;final state ;state vertex ;vertex applying ;applying breadth ;breadth formal ;formal proof ;proof paths ;paths smallest ;smallest edges ;edges puzzle ;puzzle solutions ;solutions requiring ;requiring river ;river crossings ;crossings minimum ;minimum crossings ;crossings needed ;needed success ;success solving ;solving simple ;simple puzzle ;puzzle lead ;lead generating ;generating investigating ;investigating state ;state space ;space graphs ;graphs straightforward ;straightforward task ;task appreciation ;appreciation consult ;consult books ;books artificial ;artificial intelligence ;intelligence science ;science state ;state space ;space graphs ;graphs principal ;principal subject ;subject deal ;deal important ;important special ;special case ;case state ;state space ;space graphs ;graphs sections ;sections exercises ;exercises prove ;prove equality ;equality lcm ;lcm gcd ;gcd underlies ;underlies algorithm ;algorithm computing ;computing lcm ;lcm euclid ;euclid algorithm ;algorithm log ;log algorithm ;algorithm computing ;computing gcd ;gcd efficiency ;efficiency algorithm ;algorithm computing ;computing lcm ;lcm numbers ;numbers construct ;construct min ;min binary ;binary tree ;tree key ;key equal ;equal keys ;keys children ;children algorithm ;algorithm constructing ;constructing max ;max defined ;defined section ;section construct ;construct min ;min prove ;prove paths ;paths length ;length ith ;ith vertex ;vertex graph ;graph undirected ;undirected directed ;directed equals ;equals element ;element adjacency ;adjacency matrix ;matrix graph ;graph design ;design algorithm ;algorithm efficiency ;efficiency cubic ;cubic checking ;checking graph ;graph vertices ;vertices length ;length algorithm ;algorithm problem ;problem starting ;starting arbi ;arbi trary ;trary vertex ;vertex traverse ;traverse graph ;graph depth ;depth forest ;forest vertex ;vertex edge ;edge leading ;leading grand ;grand parent ;parent graph ;graph triangle ;triangle graph ;graph triangle ;triangle subgraph ;subgraph algorithm ;algorithm points ;points coordinate ;coordinate plane ;plane design ;design algorithm ;algorithm points ;points triangle ;triangle vertices ;vertices points ;points design ;design algorithm ;algorithm problem ;problem algorithm ;algorithm problem ;problem finding ;finding positive ;positive integer ;integer pair ;pair integers ;integers sum ;sum product ;product large ;large design ;design efficient ;efficient algorithm ;algorithm problem ;problem efficiency ;efficiency class ;class assignment ;assignment problem ;problem introduced ;introduced section ;section stated ;stated people ;people assigned ;assigned execute ;execute jobs ;jobs person ;person job ;job person ;person assigned ;assigned job ;job assigned ;assigned person ;person cost ;cost accrue ;accrue ith ;ith person ;person assigned ;assigned job ;job quantity ;quantity pair ;pair problem ;problem assign ;assign people ;people jobs ;jobs minimize ;minimize total ;total cost ;cost assignment ;assignment express ;express assignment ;assignment problem ;problem linear ;linear programming ;programming problem ;problem solve ;solve instance ;instance linear ;linear programming ;programming problem ;problem section ;section maximize ;maximize subject ;subject graph ;graph coloring ;coloring problem ;problem stated ;stated vertex ;vertex coloring ;coloring prob ;prob lem ;lem assign ;assign smallest ;smallest colors ;colors vertices ;vertices graph ;graph adjacent ;adjacent vertices ;vertices color ;color edge ;edge coloring ;coloring problem ;problem assign ;assign smallest ;smallest colors ;colors edges ;edges graph ;graph edges ;edges endpoint ;endpoint color ;color plain ;plain edge ;edge coloring ;coloring problem ;problem reduced ;reduced vertex ;vertex coloring ;coloring problem ;problem dimensional ;dimensional office ;office location ;location problem ;problem points ;points cartesian ;cartesian plane ;plane location ;location average ;average manhattan ;manhattan dis ;dis office ;office minimizes ;minimizes tance ;tance office ;office points ;points problem ;problem efficiently ;efficiently solved ;solved problem ;problem reduction ;reduction technique ;technique provided ;provided office ;office located ;located input ;input points ;points jealous ;jealous husbands ;husbands married ;married couples ;couples river ;river boat ;boat hold ;hold people ;people complicate ;complicate matters ;matters husbands ;husbands jealous ;jealous crossing ;crossing procedure ;procedure wife ;wife bank ;bank river ;river woman ;woman husband ;husband wife ;wife husband ;husband people ;people bank ;bank river ;river constraints ;constraints solve ;solve problem ;problem solve ;solve problem ;problem classical ;classical version ;version problem ;problem solution ;solution river ;river crossings ;crossings dominoes ;dominoes small ;small rectangular ;rectangular tiles ;tiles dots ;dots called ;called spots ;spots pips ;pips embossed ;embossed halves ;halves tiles ;tiles standard ;standard domino ;domino set ;set tiles ;tiles unordered ;unordered pair ;pair integers ;integers general ;general domino ;domino set ;set domino ;domino tiles ;tiles unordered ;unordered pair ;pair integers ;integers determine ;determine values ;values constructs ;constructs ring ;ring tiles ;tiles domino ;domino set ;set summary ;summary transform ;transform conquer ;conquer fourth ;fourth general ;general algorithm ;algorithm design ;design problem ;problem solving ;solving strategy ;strategy discussed ;discussed fact ;fact group ;group techniques ;techniques based ;based idea ;idea transformation ;transformation problem ;problem easier ;easier solve ;solve principal ;principal varieties ;varieties transform ;transform conquer ;conquer strategy ;strategy instance ;instance simplification ;simplification representation ;representation problem ;problem reduction ;reduction instance ;instance simplification ;simplification transforming ;transforming instance ;instance problem ;problem instance ;instance problem ;problem special ;special property ;property makes ;makes problem ;problem easier ;easier solve ;solve presorting ;presorting gaussian ;gaussian elimination ;elimination rotations ;rotations avl ;avl trees ;trees good ;good examples ;examples strategy ;strategy representation ;representation implies ;implies changing ;changing representation ;representation problem ;problem instance ;instance representation ;representation instance ;instance examples ;examples discussed ;discussed chapter ;chapter representation ;representation set ;set tree ;tree heaps ;heaps heapsort ;heapsort horner ;horner polynomial ;polynomial evaluation ;evaluation binary ;binary exponentiation ;exponentiation algorithms ;algorithms problem ;problem reduction ;reduction calls ;calls transforming ;transforming problem ;problem solved ;solved algorithm ;algorithm examples ;examples applying ;applying idea ;idea algorithmic ;algorithmic problem ;problem solving ;solving section ;section reductions ;reductions linear ;linear programming ;programming reductions ;reductions graph ;graph problems ;problems important ;important examples ;examples illustrate ;illustrate transform ;transform conquer ;conquer important ;important data ;data structures ;structures algorithms ;algorithms heaps ;heaps heapsort ;heapsort avl ;avl trees ;trees gaussian ;gaussian elimination ;elimination horner ;horner essentially ;essentially binary ;binary tree ;tree keys ;keys node ;node satisfying ;satisfying parental ;parental dominance ;dominance requirement ;requirement defined ;defined binary ;binary trees ;trees heaps ;heaps implemented ;implemented arrays ;arrays heaps ;heaps important ;important efficient ;efficient implementation ;implementation priority ;priority queues ;queues underlie ;underlie heapsort ;heapsort theoretically ;theoretically important ;important sorting ;sorting algorithm ;algorithm based ;based arranging ;arranging elements ;elements array ;array successively ;successively removing ;removing largest ;largest element ;element remaining ;remaining algorithm ;algorithm running ;running log ;log worst ;worst case ;case average ;average case ;case addition ;addition avl ;avl trees ;trees binary ;binary trees ;trees balanced ;balanced extent ;extent binary ;binary tree ;tree maintained ;maintained transformations ;transformations types ;types called ;called rotations ;rotations basic ;basic operations ;operations avl ;avl trees ;trees log ;log eliminates ;eliminates bad ;bad worst ;worst case ;case efficiency ;efficiency classic ;classic binary ;binary trees ;trees achieve ;achieve perfect ;perfect tree ;tree allowing ;allowing node ;node ordered ;ordered keys ;keys children ;children idea ;idea generalized ;generalized yield ;yield important ;important trees ;trees discussed ;discussed gaussian ;gaussian elimination ;elimination algorithm ;algorithm solving ;solving systems ;systems linear ;linear equations ;equations principal ;principal algorithm ;algorithm linear ;linear algebra ;algebra solves ;solves transforming ;transforming equivalent ;equivalent upper ;upper triangular ;triangular coefficient ;coefficient matrix ;matrix easy ;easy solve ;solve substitutions ;substitutions gaussian ;gaussian elimination ;elimination requires ;requires multiplications ;multiplications horner ;horner optimal ;optimal algorithm ;algorithm polynomial ;polynomial evaluation ;evaluation coefficient ;coefficient preprocessing ;preprocessing requires ;requires multiplications ;multiplications additions ;additions evaluate ;evaluate degree ;degree polynomial ;polynomial horner ;horner byproducts ;byproducts synthetic ;synthetic division ;division algorithm ;algorithm binary ;binary exponentiation ;exponentiation algorithms ;algorithms computing ;computing introduced ;introduced section ;section exploit ;exploit binary ;binary representation ;representation exponent ;exponent process ;process directions ;directions left ;left linear ;linear programming ;programming concerns ;concerns optimizing ;optimizing linear ;linear function ;function variables ;variables subject ;subject constraints ;constraints linear ;linear equations ;equations linear ;linear inequalities ;inequalities efficient ;efficient algorithms ;algorithms capable ;capable solving ;solving large ;large instances ;instances problem ;problem thousands ;thousands variables ;variables constraints ;constraints provided ;provided variables ;variables required ;required integers ;integers called ;called integer ;integer linear ;linear programming ;programming constitute ;constitute difficult ;difficult class ;class problems ;prays miracle ;miracle prayer ;prayer reduces ;reduces great ;great god ;god grant ;grant ivan ;ivan turgenev ;turgenev russian ;russian novelist ;novelist short ;short story ;story writer ;writer conquer ;conquer general ;general algorithm ;algorithm design ;design technique ;technique fame ;fame catchy ;catchy deserved ;deserved efficient ;efficient algorithms ;algorithms specific ;specific implementations ;implementations general ;general strategy ;strategy conquer ;conquer algorithms ;algorithms general ;general problem ;problem divided ;divided subproblems ;subproblems ideally ;ideally equal ;equal size ;size subproblems ;subproblems solved ;solved typically ;typically recursively ;recursively dif ;dif ferent ;ferent algorithm ;algorithm employed ;employed subproblems ;subproblems small ;small solutions ;solutions subproblems ;subproblems combined ;combined solution ;solution original ;original problem ;problem conquer ;conquer technique ;technique diagrammed ;diagrammed figure ;figure depicts ;depicts case ;case dividing ;dividing problem ;problem smaller ;smaller subproblems ;subproblems widely ;widely occurring ;occurring case ;case conquer ;conquer algorithms ;algorithms designed ;designed executed ;executed single ;single processor ;processor problem ;problem computing ;computing sum ;sum numbers ;numbers problem ;problem instances ;instances problem ;problem compute ;compute sum ;sum numbers ;numbers compute ;compute sum ;sum remaining ;remaining numbers ;numbers simply ;simply sums ;sums computed ;computed applying ;applying method ;method recursively ;recursively values ;values sum ;sum efficient ;efficient compute ;compute sum ;sum numbers ;numbers moment ;moment reflection ;reflection efficient ;efficient brute ;brute summation ;summation problem ;problem size ;size subproblem ;subproblem size ;size solution ;solution subproblem ;subproblem solution ;solution original ;original problem ;problem figure ;figure conquer ;conquer technique ;technique typical ;typical case ;case small ;small summing ;summing numbers ;numbers algorithm ;algorithm formal ;formal analysis ;analysis common ;common sense ;sense compute ;compute sums ;sums lead ;lead negative ;negative conquer ;conquer algorithm ;algorithm necessarily ;necessarily efficient ;efficient brute ;brute solution ;solution prayers ;prayers goddess ;goddess algorithmics ;algorithmics chapter ;chapter epigraph ;epigraph answered ;answered spent ;spent executing ;executing conquer ;conquer turns ;turns significantly ;significantly smaller ;smaller solving ;solving problem ;problem method ;method fact ;fact conquer ;conquer approach ;approach yields ;yields important ;important efficient ;efficient algorithms ;algorithms science ;science discuss ;discuss classic ;classic examples ;examples algorithms ;algorithms chapter ;chapter sequential ;sequential algorithms ;algorithms keeping ;keeping mind ;mind conquer ;conquer technique ;technique ideally ;ideally suited ;suited parallel ;parallel computations ;computations subproblem ;subproblem solved ;solved simultaneously ;simultaneously processor ;processor conquer ;conquer algorithm ;algorithm called ;called pairwise ;pairwise summation ;summation substantially ;substantially accumulated ;accumulated error ;error sum ;sum numbers ;numbers represented ;represented approximately ;approximately digital ;digital hig ;hig mentioned ;mentioned typical ;typical case ;case conquer ;conquer problem ;problem instance ;instance size ;size divided ;divided instances ;instances size ;size generally ;generally instance ;instance size ;size divided ;divided instances ;instances size ;size needing ;needing solved ;solved constants ;constants assuming ;assuming size ;size power ;power simplify ;simplify analysis ;analysis recurrence ;recurrence running ;running function ;function accounts ;accounts spent ;spent dividing ;dividing instance ;instance size ;size instances ;instances size ;size combining ;combining solutions ;solutions sum ;sum recurrence ;recurrence called ;called general ;general conquer ;conquer recurrence ;recurrence growth ;growth solution ;solution depends ;depends values ;values constants ;constants growth ;growth function ;function efficiency ;efficiency analysis ;analysis conquer ;conquer algorithms ;algorithms greatly ;greatly simplified ;simplified theorem ;theorem appendix ;appendix master ;master theorem ;theorem recurrence ;recurrence log ;log nlogb ;nlogb analogous ;analogous results ;results hold ;hold notations ;notations recurrence ;recurrence additions ;additions conquer ;conquer sum ;sum computation ;computation algorithm ;algorithm inputs ;inputs size ;size nlogb ;nlogb nlog ;nlog solution ;solution efficiency ;efficiency class ;class drudgery ;drudgery solving ;solving recurrence ;recurrence approach ;approach establish ;establish solution ;solution growth ;growth unknown ;unknown multiplicative ;multiplicative constant ;constant solving ;solving recurrence ;recurrence equation ;equation specific ;specific initial ;initial condition ;condition yields ;yields exact ;exact powers ;powers pointing ;pointing recurrence ;recurrence covers ;covers decreaseby ;decreaseby constant ;constant factor ;factor algorithms ;algorithms discussed ;discussed previous ;previous chapter ;chapter fact ;fact people ;people algorithms ;algorithms binary ;binary degenerate ;degenerate cases ;cases andconquer ;andconquer subproblems ;subproblems half ;half size ;size solved ;solved decrease ;decrease constant ;constant factor ;factor divideand ;divideand conquer ;conquer design ;design paradigms ;paradigms mergesort ;mergesort perfect ;perfect successful ;successful application ;application conquer ;conquer technique ;technique sorts ;sorts array ;array dividing ;dividing halves ;halves sorting ;sorting recursively ;recursively merging ;merging smaller ;smaller sorted ;sorted arrays ;arrays single ;single sorted ;sorted algorithm ;algorithm mergesort ;mergesort sorts ;sorts array ;array recursive ;recursive mergesort ;mergesort input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array sorted ;sorted nondecreasing ;nondecreasing mergesort ;mergesort merge ;merge merging ;merging sorted ;sorted arrays ;arrays pointers ;pointers array ;array indices ;indices initialized ;initialized elements ;elements arrays ;arrays merged ;merged elements ;elements pointed ;pointed compared ;compared smaller ;smaller added ;added array ;array constructed ;constructed index ;index smaller ;smaller element ;element incremented ;incremented successor ;successor array ;array copied ;copied operation ;operation repeated ;repeated arrays ;arrays exhausted ;exhausted remaining ;remaining elements ;elements array ;array copied ;copied array ;array algorithm ;algorithm merge ;merge merges ;merges sorted ;sorted arrays ;arrays sorted ;sorted array ;array input ;input arrays ;arrays sorted ;sorted output ;output sorted ;sorted array ;array elements ;elements operation ;operation algorithm ;algorithm illustrated ;illustrated figure ;figure mergesort ;mergesort operation ;operation efficient ;efficient mergesort ;mergesort assuming ;assuming simplicity ;simplicity power ;power recurrence ;recurrence relation ;relation key ;key comparisons ;comparisons cmerge ;cmerge analyze ;analyze cmerge ;cmerge key ;key comparisons ;comparisons performed ;performed merging ;merging stage ;stage comparison ;comparison total ;total elements ;elements arrays ;arrays needing ;needing processed ;processed reduced ;reduced worst ;worst case ;case arrays ;arrays element ;element smaller ;smaller elements ;elements alternating ;alternating arrays ;arrays worst ;worst case ;case cmerge ;cmerge recurrence ;recurrence cworst ;cworst master ;master theorem ;theorem cworst ;cworst log ;log fact ;fact easy ;easy exact ;exact solution ;solution worst ;worst case ;case recurrence ;recurrence cworst ;cworst log ;log key ;key comparisons ;comparisons mergesort ;mergesort worst ;worst case ;case theoretical ;theoretical minimum ;minimum general ;general comparison ;comparison based ;based sorting ;sorting algorithm ;algorithm large ;large comparisons ;comparisons algo ;algo rithm ;rithm average ;average case ;case turns ;turns gon ;gon log ;log noteworthy ;noteworthy advantage ;advantage mergesort ;mergesort quick ;quick sort ;sort heapsort ;heapsort important ;important advanced ;advanced sorting ;sorting algorithms ;algorithms discussed ;discussed stability ;stability problem ;problem section ;section exercises ;exercises principal ;principal short ;short coming ;coming mergesort ;mergesort linear ;linear extra ;extra storage ;storage algorithm ;algorithm requires ;requires merging ;merging resulting ;resulting algorithm ;algorithm complicated ;complicated theoretical ;theoretical main ;main ideas ;ideas leading ;leading variations ;variations mergesort ;mergesort algorithm ;algorithm implemented ;implemented merging ;merging pairs ;pairs array ;array elements ;elements merging ;merging sorted ;sorted pairs ;pairs power ;power slight ;slight bookkeeping ;bookkeeping complications ;complications arise ;arise avoids ;avoids space ;space overhead ;overhead stack ;stack recursive ;recursive calls ;calls sorted ;sorted parts ;parts sort ;sort recursively ;recursively merge ;merge scheme ;scheme sorting ;sorting files ;files residing ;residing secondary ;secondary memory ;memory devices ;devices called ;called multiway ;multiway mergesort ;mergesort exercises ;exercises write ;write pseudocode ;pseudocode conquer ;conquer algorithm ;algorithm finding ;finding sition ;sition largest ;largest element ;element array ;array numbers ;numbers algorithm ;algorithm output ;output arrays ;arrays elements ;elements largest ;largest set ;set solve ;solve recurrence ;recurrence relation ;relation key ;key comparisons ;comparisons algorithm ;algorithm brute ;brute algorithm ;algorithm problem ;problem write ;write pseudocode ;pseudocode conquer ;conquer algorithm ;algorithm finding ;finding values ;values largest ;largest smallest ;smallest elements ;elements array ;array numbers ;numbers set ;set solve ;solve recurrence ;recurrence relation ;relation key ;key comparisons ;comparisons algorithm ;algorithm brute ;brute algorithm ;algorithm problem ;problem write ;write pseudocode ;pseudocode conquer ;conquer algorithm ;algorithm exponenti ;exponenti ation ;ation problem ;problem computing ;computing positive ;positive integer ;integer set ;set solve ;solve recurrence ;recurrence relation ;relation multiplications ;multiplications algorithm ;algorithm section ;section theoretical ;theoretical minimum ;minimum log ;log algorithm ;algorithm brute ;brute algorithm ;algorithm problem ;problem mentioned ;mentioned chapter ;chapter logarithm ;logarithm bases ;bases irrelevant ;irrelevant contexts ;contexts arising ;arising analyzing ;analyzing algorithm ;algorithm efficiency ;efficiency class ;class true ;true asser ;asser tions ;tions master ;master theorem ;theorem logarithms ;logarithms growth ;growth solutions ;solutions recurrences ;recurrences apply ;apply mergesort ;mergesort sort ;sort alphabetical ;alphabetical mergesort ;mergesort stable ;stable sorting ;sorting algorithm ;algorithm solve ;solve recurrence ;recurrence relation ;relation key ;key comparisons ;comparisons mergesort ;mergesort worst ;worst case ;case assume ;assume set ;set recurrence ;recurrence relation ;relation key ;key comparisons ;comparisons mergesort ;mergesort case ;case inputs ;inputs solve ;solve set ;set recurrence ;recurrence relation ;relation key ;key moves ;moves version ;version mergesort ;mergesort section ;section taking ;taking key ;key moves ;moves account ;account algorithm ;algorithm efficiency ;efficiency class ;class array ;array real ;real numbers ;numbers pair ;pair inversion ;inversion numbers ;numbers design ;design log ;log algorithm ;algorithm counting ;counting inversions ;inversions implement ;implement version ;version mergesort ;mergesort language ;language choice ;choice tromino ;tromino puzzle ;puzzle tromino ;tromino accurately ;accurately tromino ;tromino shaped ;shaped tile ;tile formed ;formed squares ;squares problem ;problem chess ;chess board ;board missing ;missing square ;square trominoes ;trominoes oriented ;oriented arbitrary ;arbitrary squares ;squares board ;board missing ;missing overlaps ;overlaps gol ;gol design ;design conquer ;conquer algorithm ;algorithm problem ;problem quicksort ;quicksort important ;important sorting ;sorting algorithm ;algorithm based ;based conquer ;conquer approach ;approach mergesort ;mergesort divides ;divides input ;input elements ;elements position ;position array ;array quicksort ;quicksort divides ;divides encountered ;encountered idea ;idea array ;array partition ;partition section ;section discussed ;discussed selection ;selection problem ;problem partition ;partition arrangement ;arrangement array ;array elements ;elements left ;left element ;element equal ;equal elements ;elements greater ;greater equal ;equal partition ;partition achieved ;achieved final ;final position ;position sorted ;sorted array ;array sorting ;sorting subarrays ;subarrays left ;left independently ;independently method ;method difference ;difference mergesort ;mergesort division ;division problem ;problem subproblems ;subproblems entire ;entire combining ;combining solutions ;solutions entire ;entire division ;division stage ;stage required ;required combine ;combine solutions ;solutions subproblems ;subproblems pseudocode ;pseudocode quicksort ;quicksort algorithm ;algorithm quicksort ;quicksort sorts ;sorts subarray ;subarray quicksort ;quicksort input ;input subarray ;subarray array ;array defined ;defined left ;left indices ;indices output ;output subarray ;subarray sorted ;sorted nondecreasing ;nondecreasing partition ;partition split ;split position ;position quicksort ;quicksort partition ;partition algorithm ;algorithm lomuto ;lomuto partition ;partition discussed ;discussed section ;section alternatively ;alternatively partition ;partition generally ;generally subarray ;subarray sophisticated ;sophisticated method ;method suggested ;suggested hoare ;hoare prominent ;prominent british ;british scientist ;scientist invented ;invented quicksort ;quicksort hoare ;hoare age ;age invented ;invented algorithm ;algorithm sort ;sort words ;words machine ;machine translation ;translation project ;project russian ;russian english ;english hoare ;hoare thought ;thought bubblesort ;bubblesort amazing ;amazing luck ;luck thought ;thought quicksort ;quicksort hard ;hard assessment ;assessment lucky ;lucky wonderful ;wonderful career ;career computing ;computing discovering ;discovering sorting ;sorting algorithm ;algorithm hoa ;hoa years ;years received ;received turing ;turing award ;award fundamental ;fundamental contributions ;contributions definition ;definition design ;design programming ;programming languages ;languages knighted ;knighted services ;services education ;education science ;science selecting ;selecting pivot ;pivot element ;element respect ;respect subarray ;subarray strategies ;strategies selecting ;selecting pivot ;pivot issue ;issue analyze ;analyze algorithm ;algorithm efficiency ;efficiency simplest ;simplest strategy ;strategy selecting ;selecting subarray ;subarray element ;element lomuto ;lomuto algorithm ;algorithm scan ;scan subarray ;subarray ends ;ends comparing ;comparing subarray ;subarray elements ;elements pivot ;pivot left ;left scan ;scan denoted ;denoted index ;index pointer ;pointer starts ;starts element ;element elements ;elements smaller ;smaller pivot ;pivot left ;left subarray ;subarray scan ;scan skips ;skips elements ;elements smaller ;smaller pivot ;pivot stops ;stops encountering ;encountering element ;element greater ;greater equal ;equal pivot ;pivot left ;left scan ;scan denoted ;denoted index ;index pointer ;pointer starts ;starts element ;element subarray ;subarray elements ;elements larger ;larger pivot ;pivot subarray ;subarray scan ;scan skips ;skips elements ;elements larger ;larger pivot ;pivot stops ;stops encountering ;encountering element ;element smaller ;smaller equal ;equal pivot ;pivot stopping ;stopping scans ;scans encountering ;encountering element ;element equal ;equal pivot ;pivot yield ;yield splits ;splits arrays ;arrays lot ;lot duplicates ;duplicates makes ;makes algorithm ;algorithm run ;run faster ;faster array ;array equal ;equal elements ;elements split ;split subarrays ;subarrays sizes ;sizes reducing ;reducing problem ;problem size ;size scanning ;scanning entire ;entire array ;array scans ;scans situations ;situations arise ;arise depending ;depending scanning ;scanning indices ;indices crossed ;crossed scanning ;scanning indices ;indices crossed ;crossed simply ;simply exchange ;exchange resume ;resume scans ;scans incrementing ;incrementing decrementing ;decrementing scanning ;scanning indices ;indices crossed ;crossed partitioned ;partitioned subarray ;subarray exchanging ;exchanging pivot ;pivot finally ;finally scanning ;scanning indices ;indices pointing ;pointing element ;element pointing ;pointing equal ;equal subarray ;subarray partitioned ;partitioned split ;split position ;position combine ;combine case ;case crossed ;crossed indices ;indices exchanging ;exchanging pivot ;pivot pseudocode ;pseudocode implementing ;implementing partitioning ;partitioning procedure ;procedure algorithm ;algorithm hoarepartition ;hoarepartition partitions ;partitions subarray ;subarray hoare ;hoare algorithm ;algorithm element ;element pivot ;pivot input ;input subarray ;subarray array ;array defined ;defined left ;left indices ;indices output ;output partition ;partition split ;split position ;position returned ;returned function ;function swap ;swap undo ;undo swap ;swap index ;index subarray ;subarray bounds ;bounds pseudocode ;pseudocode checking ;checking possibility ;possibility index ;index incremented ;incremented append ;append array ;array sentinel ;sentinel index ;index advancing ;advancing position ;position sophisticated ;sophisticated method ;method pivot ;pivot selection ;selection mentioned ;mentioned section ;section makes ;makes sentinel ;sentinel unnecessary ;unnecessary sorting ;sorting array ;array quicksort ;quicksort figure ;figure discussion ;discussion quicksort ;quicksort efficiency ;efficiency noting ;noting key ;key comparisons ;comparisons partition ;partition achieved ;achieved scanning ;scanning indices ;indices coincide ;coincide splits ;splits middle ;middle subarrays ;subarrays case ;case key ;key comparisons ;comparisons case ;case satisfies ;satisfies recurrence ;recurrence cbest ;cbest master ;master theorem ;theorem cbest ;cbest log ;log solving ;solving yields ;yields cbest ;cbest log ;log worst ;worst case ;case splits ;splits skewed ;skewed extreme ;extreme subarrays ;subarrays size ;size subarray ;subarray partitioned ;partitioned unfortunate ;unfortunate situation ;situation increasing ;increasing arrays ;arrays inputs ;inputs problem ;problem solved ;solved strictly ;strictly increasing ;increasing array ;array pivot ;pivot left ;left scan ;scan left ;left scan ;scan indicating ;indicating split ;split position ;position figure ;figure quicksort ;quicksort operation ;operation array ;array transformations ;transformations pivots ;pivots shown ;shown bold ;bold tree ;tree recursive ;recursive calls ;calls quicksort ;quicksort input ;input values ;values subarray ;subarray bounds ;bounds split ;split position ;position partition ;partition obtained ;obtained making ;making comparisons ;comparisons partition ;partition exchanging ;exchanging pivot ;pivot algorithm ;algorithm left ;left strictly ;strictly increasing ;increasing array ;array sort ;sort sorting ;sorting strictly ;strictly increasing ;increasing arrays ;arrays diminishing ;diminishing sizes ;sizes processed ;processed total ;total key ;key comparisons ;comparisons equal ;equal cworst ;cworst utility ;utility quicksort ;quicksort average ;average case ;case behavior ;behavior cavg ;cavg average ;average key ;key comparisons ;comparisons quicksort ;quicksort randomly ;randomly ordered ;ordered array ;array size ;size partition ;partition position ;position comparisons ;comparisons achieve ;achieve partition ;partition left ;left subarrays ;subarrays elements ;elements assuming ;assuming partition ;partition split ;split position ;position probability ;probability recurrence ;recurrence relation ;relation cavg ;cavg solution ;solution trickier ;trickier worst ;worst case ;case analyses ;analyses turns ;turns cavg ;cavg log ;log average ;average quicksort ;quicksort makes ;makes comparisons ;comparisons case ;case innermost ;innermost loop ;loop efficient ;efficient runs ;runs faster ;faster mergesort ;mergesort heapsort ;heapsort log ;log algorithm ;algorithm discuss ;discuss chapter ;chapter randomly ;randomly ordered ;ordered arrays ;arrays nontrivial ;nontrivial sizes ;sizes justifies ;justifies algorithm ;algorithm inventor ;inventor quicksort ;quicksort importance ;importance persistent ;persistent efforts ;efforts years ;years refine ;refine basic ;basic algorithm ;algorithm improvements ;improvements discovered ;discovered researchers ;researchers pivot ;pivot selection ;selection methods ;methods randomized ;randomized quicksort ;quicksort random ;random element ;element median ;median method ;method median ;median leftmost ;leftmost rightmost ;rightmost middle ;middle element ;element array ;array switching ;switching insertion ;insertion sort ;sort small ;small subarrays ;subarrays elements ;elements systems ;systems sorting ;sorting small ;small subarrays ;subarrays finishing ;finishing algorithm ;algorithm insertion ;insertion sort ;sort applied ;applied entire ;entire sorted ;sorted array ;array modifications ;modifications partitioning ;partitioning algorithm ;algorithm partition ;partition segments ;segments smaller ;smaller equal ;equal larger ;larger pivot ;pivot problem ;problem section ;section exercises ;exercises robert ;robert sedgewick ;sedgewick sed ;sed world ;world leading ;leading expert ;expert quicksort ;quicksort improvements ;improvements combination ;combination cut ;cut running ;running algorithm ;algorithm sorting ;sorting algorithm ;algorithm quicksort ;quicksort weaknesses ;weaknesses stable ;stable requires ;requires stack ;stack parameters ;parameters subarrays ;subarrays sorted ;sorted size ;size stack ;stack log ;log sorting ;sorting smaller ;smaller subarrays ;subarrays obtained ;obtained partitioning ;partitioning worse ;worse space ;space efficiency ;efficiency heapsort ;heapsort sophisticated ;sophisticated ways ;ways choosing ;choosing pivot ;pivot make ;make quadratic ;quadratic running ;running worst ;worst case ;case eliminate ;eliminate completely ;completely performance ;performance randomly ;randomly ordered ;ordered arrays ;arrays sensitive ;sensitive implementation ;implementation details ;details algorithm ;algorithm architecture ;architecture data ;data february ;february issue ;issue computing ;computing science ;science engineering ;engineering joint ;joint publication ;publication american ;american institute ;institute physics ;physics ieee ;ieee society ;society selected ;selected quicksort ;quicksort algorithms ;algorithms greatest ;greatest development ;development practice ;practice science ;science engineering ;engineering century ;century exercises ;exercises apply ;apply quicksort ;quicksort sort ;sort alphabetical ;alphabetical draw ;draw tree ;tree recursive ;recursive calls ;calls partitioning ;partitioning procedure ;procedure outlined ;outlined section ;section prove ;prove scanning ;scanning indices ;indices pointing ;pointing element ;element pointing ;pointing equal ;equal prove ;prove scanning ;scanning indices ;indices element ;element position ;position left ;left pointed ;pointed showing ;showing quicksort ;quicksort stable ;stable sorting ;sorting algorithm ;algorithm array ;array elements ;elements sentinel ;sentinel mentioned ;mentioned text ;text needed ;needed single ;single sentinel ;sentinel suffices ;suffices input ;input version ;version quicksort ;quicksort section ;section arrays ;arrays equal ;equal elements ;elements worst ;worst case ;case input ;input case ;case input ;input strictly ;strictly decreasing ;decreasing arrays ;arrays worst ;worst case ;case input ;input case ;case input ;input quicksort ;quicksort median ;median pivot ;pivot selection ;selection strictly ;strictly increas ;increas ing ;ing arrays ;arrays worst ;worst case ;case input ;input case ;case input ;input strictly ;strictly decreasing ;decreasing arrays ;arrays estimate ;estimate times ;times faster ;faster quicksort ;quicksort sort ;sort array ;array random ;random numbers ;numbers insertion ;insertion sort ;sort true ;true false ;false element ;element arrays ;arrays sorted ;sorted faster ;faster insertion ;insertion sort ;sort quicksort ;quicksort design ;design algorithm ;algorithm rearrange ;rearrange elements ;elements array ;array real ;real num ;num bers ;bers negative ;negative elements ;elements positive ;positive elements ;elements algorithm ;algorithm efficient ;efficient space ;space efficient ;efficient dutch ;dutch national ;national flag ;flag problem ;problem rearrange ;rearrange array ;array characters ;characters red ;red white ;white blue ;blue colors ;colors dutch ;dutch national ;national flag ;flag dij ;dij design ;design linear ;linear algorithm ;algorithm problem ;problem solution ;solution dutch ;dutch national ;national flag ;flag problem ;problem quicksort ;quicksort implement ;implement quicksort ;quicksort language ;language choice ;choice run ;run sample ;sample inputs ;inputs verify ;verify theoretical ;theoretical assertions ;assertions algorithm ;algorithm efficiency ;efficiency nuts ;nuts bolts ;bolts collection ;collection bolts ;bolts widths ;widths nuts ;nuts allowed ;allowed nut ;nut determine ;determine nut ;nut larger ;larger smaller ;smaller matches ;matches nuts ;nuts bolts ;bolts problem ;problem nut ;nut design ;design algorithm ;algorithm problem ;problem average ;average case ;case efficiency ;efficiency log ;log raw ;raw binary ;binary tree ;tree traversals ;traversals related ;related properties ;properties section ;section conquer ;conquer technique ;technique applied ;applied binary ;binary trees ;trees binary ;binary tree ;tree defined ;defined finite ;finite set ;set nodes ;nodes consists ;consists root ;root disjoint ;disjoint binary ;binary trees ;trees called ;called left ;left subtree ;subtree root ;root binary ;binary tree ;tree special ;special case ;case ordered ;ordered tree ;tree figure ;figure standard ;standard interpretation ;interpretation alternative ;alternative definition ;definition binary ;binary tree ;tree section ;section definition ;definition divides ;divides binary ;binary tree ;tree smaller ;smaller structures ;structures left ;left subtree ;subtree problems ;problems binary ;binary trees ;trees solved ;solved applying ;applying conquer ;conquer technique ;technique recursive ;recursive algorithm ;algorithm computing ;computing height ;height binary ;binary tree ;tree recall ;recall height ;height defined ;defined length ;length longest ;longest path ;path root ;root leaf ;leaf computed ;computed maximum ;maximum heights ;heights root ;root left ;left tleft ;tleft tright ;tright figure ;figure standard ;standard representation ;representation binary ;binary tree ;tree subtrees ;subtrees account ;account extra ;extra root ;root convenient ;convenient define ;define height ;height tree ;tree recursive ;recursive algorithm ;algorithm height ;height computes ;computes recursively ;recursively height ;height binary ;binary tree ;tree input ;input binary ;binary tree ;tree output ;output height ;height max ;max height ;height tlef ;tlef height ;height tright ;tright problem ;problem instance ;instance size ;size nodes ;nodes binary ;binary tree ;tree comparisons ;comparisons compute ;compute maximum ;maximum numbers ;numbers additions ;additions algorithm ;algorithm recurrence ;recurrence relation ;relation tlef ;tlef tright ;tright solve ;solve recurrence ;recurrence solution ;solution addition ;addition frequently ;frequently executed ;executed operation ;operation algorithm ;algorithm checking ;checking typical ;typical binary ;binary tree ;tree algorithms ;algorithms tree ;tree comparison ;comparison executed ;executed additions ;additions single ;single node ;node tree ;tree comparison ;comparison addition ;addition numbers ;numbers helps ;helps analysis ;analysis tree ;tree algorithms ;algorithms draw ;draw tree ;tree extension ;extension replacing ;replacing subtrees ;subtrees special ;special nodes ;nodes extra ;extra nodes ;nodes shown ;shown squares ;squares figure ;figure called ;called external ;external original ;original nodes ;nodes shown ;shown circles ;circles called ;called internal ;internal definition ;definition extension ;extension binary ;binary tree ;tree single ;single external ;external node ;node easy ;easy height ;height algorithm ;algorithm makes ;makes addition ;addition internal ;internal node ;node extended ;extended tree ;tree makes ;makes comparison ;comparison figure ;figure binary ;binary tree ;tree left ;left extension ;extension internal ;internal nodes ;nodes shown ;shown circles ;circles external ;external nodes ;nodes shown ;shown squares ;squares tree ;tree internal ;internal external ;external node ;node ascertain ;ascertain algorithm ;algorithm efficiency ;efficiency external ;external nodes ;nodes extended ;extended binary ;binary tree ;tree internal ;internal nodes ;nodes checking ;checking figure ;figure similar ;similar examples ;examples easy ;easy hypothesize ;hypothesize external ;external nodes ;nodes internal ;internal nodes ;nodes prove ;prove equality ;equality total ;total nodes ;nodes internal ;internal external ;external node ;node root ;root children ;children internal ;internal node ;node equation ;equation immediately ;immediately implies ;implies equality ;equality applies ;applies nonempty ;nonempty binary ;binary tree ;tree definition ;definition node ;node children ;children binary ;binary tree ;tree denote ;denote numbers ;numbers parental ;parental nodes ;nodes leaves ;leaves returning ;returning algorithm ;algorithm height ;height comparisons ;comparisons tree ;tree additions ;additions important ;important conquer ;conquer algorithms ;algorithms binary ;binary trees ;trees classic ;classic traversals ;traversals preorder ;preorder inorder ;inorder postorder ;postorder traversals ;traversals nodes ;nodes binary ;binary tree ;tree recursively ;recursively visiting ;visiting tree ;tree root ;root left ;left subtrees ;subtrees differ ;differ timing ;timing root ;root preorder ;preorder traversal ;traversal root ;root visited ;visited left ;left subtrees ;subtrees visited ;visited inorder ;inorder traversal ;traversal root ;root visited ;visited visiting ;visiting left ;left subtree ;subtree visiting ;visiting subtree ;subtree postorder ;postorder traversal ;traversal root ;root visited ;visited visiting ;visiting left ;left subtrees ;subtrees traversals ;traversals illustrated ;illustrated figure ;figure pseudocodes ;pseudocodes straightforward ;straightforward repeating ;repeating descriptions ;descriptions traversals ;traversals standard ;standard feature ;feature data ;data structures ;structures textbooks ;textbooks efficiency ;efficiency analysis ;analysis identical ;identical analysis ;analysis height ;height algorithm ;algorithm recursive ;recursive node ;node extended ;extended binary ;binary tree ;tree finally ;finally questions ;questions binary ;binary trees ;trees require ;require traversals ;traversals left ;left subtrees ;subtrees insert ;insert operations ;operations binary ;binary tree ;tree require ;require processing ;processing subtrees ;subtrees considered ;considered section ;section applications ;applications conquer ;conquer examples ;examples variable ;variable size ;size decrease ;decrease technique ;technique preorder ;preorder inorder ;inorder postorder ;postorder figure ;figure binary ;binary tree ;tree traversals ;traversals exercises ;exercises design ;design conquer ;conquer algorithm ;algorithm computing ;computing levels ;levels binary ;binary tree ;tree algorithm ;algorithm single ;single node ;node trees ;trees efficiency ;efficiency class ;class algorithm ;algorithm seeks ;seeks compute ;compute leaves ;leaves binary ;binary tree ;tree algorithm ;algorithm leafcounter ;leafcounter computes ;computes recursively ;recursively leaves ;leaves binary ;binary tree ;tree input ;input binary ;binary tree ;tree output ;output leaves ;leaves leafcounter ;leafcounter tlef ;tlef leafcounter ;leafcounter tright ;tright algorithm ;algorithm prove ;prove make ;make correction ;correction compute ;compute height ;height binary ;binary tree ;tree asymptotic ;asymptotic ficiency ;ficiency section ;section conquer ;conquer algorithm ;algorithm stack ;stack explicitly ;explicitly implicitly ;implicitly algorithm ;algorithm altogether ;altogether prove ;prove equality ;equality mathematical ;mathematical induction ;induction traverse ;traverse binary ;binary tree ;tree preorder ;preorder inorder ;inorder postorder ;postorder write ;write pseudocode ;pseudocode classic ;classic traversal ;traversal algorithms ;algorithms preorder ;preorder postorder ;postorder binary ;binary trees ;trees assuming ;assuming algorithm ;algorithm recur ;recur sive ;sive recursive ;recursive calls ;calls classic ;classic traversal ;traversal algorithms ;algorithms yields ;yields sorted ;sorted applied ;applied binary ;binary tree ;tree prove ;prove property ;property draw ;draw binary ;binary tree ;tree nodes ;nodes labeled ;labeled inorder ;inorder postorder ;postorder traversals ;traversals tree ;tree yield ;yield lists ;lists inorder ;inorder postorder ;postorder permutations ;permutations labels ;labels inorder ;inorder postorder ;postorder traversal ;traversal lists ;lists binary ;binary tree ;tree design ;design algorithm ;algorithm constructs ;constructs binary ;binary tree ;tree lists ;lists labels ;labels generated ;generated inorder ;inorder postorder ;postorder traversals ;traversals tree ;tree algorithm ;algorithm inputs ;inputs problem ;problem solution ;solution internal ;internal path ;path length ;length extended ;extended binary ;binary tree ;tree defined ;defined sum ;sum lengths ;lengths paths ;paths internal ;internal nodes ;nodes root ;root internal ;internal node ;node similarly ;similarly external ;external path ;path length ;length extended ;extended binary ;binary tree ;tree defined ;defined sum ;sum lengths ;lengths paths ;paths external ;external nodes ;nodes root ;root external ;external node ;node prove ;prove internal ;internal nodes ;nodes tree ;tree write ;write computing ;computing internal ;internal path ;path length ;length extended ;extended binary ;binary tree ;tree investigate ;investigate empirically ;empirically average ;average key ;key comparisons ;comparisons searching ;searching randomly ;randomly generated ;generated binary ;binary tree ;tree chocolate ;chocolate puzzle ;puzzle chocolate ;chocolate break ;break pieces ;pieces break ;break straight ;straight line ;line broken ;broken design ;design algorithm ;algorithm solves ;solves problem ;problem minimum ;minimum breaks ;breaks minimum ;minimum justify ;justify properties ;properties binary ;binary tree ;tree multiplication ;multiplication large ;large integers ;integers strassen ;strassen matrix ;matrix multiplication ;multiplication section ;section surprising ;surprising algorithms ;algorithms seemingly ;seemingly straightfor ;straightfor ward ;ward tasks ;tasks multiplying ;multiplying integers ;integers multiplying ;multiplying square ;square matrices ;matrices achieve ;achieve asymptotic ;asymptotic efficiency ;efficiency ingenious ;ingenious application ;application conquer ;conquer technique ;technique multiplication ;multiplication large ;large integers ;integers applications ;applications notably ;notably modern ;modern cryptography ;cryptography require ;require manipulation ;manipulation inte ;inte gers ;gers decimal ;decimal digits ;digits integers ;integers single ;single word ;word modern ;modern require ;require special ;special treatment ;treatment practi ;practi cal ;cal supports ;supports investigations ;investigations algorithms ;algorithms efficient ;efficient manipulation ;manipulation large ;large integers ;integers section ;section outline ;outline interesting ;interesting algorithm ;algorithm multiplying ;multiplying numbers ;numbers conventional ;conventional pen ;pen pencil ;pencil algorithm ;algorithm mul ;mul tiplying ;tiplying digit ;digit integers ;integers digits ;digits multiplied ;multiplied digits ;digits total ;total digit ;digit multiplications ;multiplications numbers ;numbers digits ;digits pad ;pad shorter ;shorter leading ;leading zeros ;zeros equalize ;equalize lengths ;lengths impossible ;impossible design ;design algorithm ;algorithm digit ;digit multiplica ;multiplica tions ;tions turns ;turns case ;case miracle ;miracle conquer ;conquer accomplish ;accomplish feat ;feat demonstrate ;demonstrate basic ;basic idea ;idea algorithm ;algorithm case ;case digit ;digit integers ;integers numbers ;numbers represented ;represented formula ;formula yields ;yields digit ;digit multiplications ;multiplications pen ;pen pencil ;pencil algorithm ;algorithm fortunately ;fortunately compute ;compute middle ;middle term ;term digit ;digit multiplication ;multiplication taking ;taking advantage ;advantage products ;products computed ;computed special ;special numbers ;numbers multiplied ;multiplied pair ;pair digit ;digit numbers ;numbers product ;product computed ;computed formula ;formula product ;product digits ;digits product ;product digits ;digits product ;product sum ;sum digits ;digits sum ;sum digits ;digits sum ;sum apply ;apply multiplying ;multiplying digit ;digit integers ;integers positive ;positive numbers ;numbers middle ;middle promised ;promised advantage ;advantage conquer ;conquer technique ;technique denote ;denote half ;half digits ;digits half ;half notations ;notations implies ;implies taking ;taking advantage ;advantage digit ;digit numbers ;numbers product ;product halves ;halves product ;product halves ;halves product ;product sum ;sum halves ;halves sum ;sum halves ;halves sum ;sum apply ;apply method ;method computing ;computing products ;products power ;power recursive ;recursive algorithm ;algorithm computing ;computing product ;product digit ;digit integers ;integers pure ;pure recursion ;recursion stopped ;stopped deem ;deem small ;small numbers ;numbers size ;size directly ;directly digit ;digit multiplications ;multiplications algorithm ;algorithm make ;make multiplica ;multiplica tion ;tion digit ;digit numbers ;numbers requires ;requires multiplications ;multiplications digit ;digit numbers ;numbers recurrence ;recurrence multiplications ;multiplications solving ;solving backward ;backward substitutions ;substitutions yields ;yields log ;log nlog ;nlog advantage ;advantage property ;property logarithms ;logarithms alogb ;alogb clogb ;clogb additions ;additions subtractions ;subtractions decreased ;decreased num ;num ber ;ber multiplications ;multiplications requiring ;requiring operations ;operations digit ;digit additions ;additions subtractions ;subtractions executed ;executed algorithm ;algorithm multiplying ;multiplying digit ;digit decimal ;decimal integers ;integers operations ;operations needed ;needed compute ;compute products ;products digit ;digit numbers ;numbers formulas ;formulas require ;require additions ;additions subtraction ;subtraction recurrence ;recurrence applying ;applying master ;master theorem ;theorem stated ;stated beginning ;beginning chapter ;chapter nlog ;nlog means ;means total ;total additions ;additions subtractions ;subtractions asymptotic ;asymptotic growth ;growth multipli ;multipli cations ;cations asymptotic ;asymptotic advantage ;advantage algorithm ;algorithm practical ;practical depends ;depends quality ;quality implementing ;implementing algorithm ;algorithm wide ;wide disparity ;disparity reported ;reported results ;results machines ;machines conquer ;conquer algorithm ;algorithm reported ;reported outperform ;outperform conventional ;conventional method ;method numbers ;numbers decimal ;decimal digits ;digits run ;run faster ;faster numbers ;numbers decimal ;decimal digits ;digits area ;area importance ;importance modern ;modern cryptography ;cryptography outperformance ;outperformance crossover ;crossover machine ;machine switching ;switching conventional ;conventional algorithm ;algorithm multiplicands ;multiplicands smaller ;smaller crossover ;crossover finally ;finally oriented ;oriented language ;language java ;java smalltalk ;smalltalk aware ;aware languages ;languages special ;special classes ;classes dealing ;dealing large ;large integers ;integers discovered ;discovered year ;year russian ;russian mathematician ;mathematician anatoly ;anatoly karatsuba ;karatsuba conquer ;conquer algorithm ;algorithm proved ;proved wrong ;wrong prevailing ;prevailing opinion ;opinion efficiency ;efficiency integer ;integer multiplication ;multiplication algorithm ;algorithm discovery ;discovery encouraged ;encouraged researchers ;researchers asymptotically ;asymptotically faster ;faster algorithms ;algorithms algebraic ;algebraic problems ;problems algorithm ;algorithm section ;section strassen ;strassen matrix ;matrix multiplication ;multiplication conquer ;conquer approach ;approach digit ;digit multiplications ;multiplications multiplying ;multiplying integers ;integers surprised ;surprised similar ;similar feat ;feat accomplished ;accomplished multiplying ;multiplying matrices ;matrices algorithm ;algorithm published ;published strassen ;strassen str ;str principal ;principal insight ;insight algorithm ;algorithm lies ;lies discovery ;discovery product ;product matrices ;matrices multiplications ;multiplications opposed ;opposed required ;required brute ;brute algorithm ;algorithm section ;section accomplished ;accomplished formulas ;formulas matrices ;matrices strassen ;strassen algorithm ;algorithm makes ;makes multipli ;multipli cations ;cations additions ;additions subtractions ;subtractions brute ;brute algorithm ;algorithm requires ;requires multiplications ;multiplications additions ;additions numbers ;numbers lead ;lead multiplying ;multiplying matrices ;matrices strassen ;strassen algorithm ;algorithm importance ;importance stems ;stems asymptotic ;asymptotic superiority ;superiority matrix ;matrix infinity ;infinity matrices ;matrices power ;power matrices ;matrices padded ;padded rows ;rows columns ;columns zeros ;zeros product ;product submatrices ;submatrices difficult ;difficult verify ;verify submatrices ;submatrices numbers ;numbers product ;product computed ;computed strassen ;strassen formulas ;formulas numbers ;numbers replaced ;replaced submatrices ;submatrices products ;products matrices ;matrices computed ;computed recursively ;recursively method ;method strassen ;strassen algorithm ;algorithm matrix ;matrix multiplication ;multiplication evaluate ;evaluate asymptotic ;asymptotic efficiency ;efficiency algorithm ;algorithm multiplications ;multiplications strassen ;strassen algorithm ;algorithm multiplying ;multiplying matrices ;matrices power ;power recurrence ;recurrence relation ;relation log ;log nlog ;nlog smaller ;smaller required ;required brute ;brute algorithm ;algorithm savings ;savings multiplications ;multiplications achieved ;achieved expense ;expense making ;making extra ;extra additions ;additions strassen ;strassen algorithm ;algorithm matrices ;matrices algorithm ;algorithm matrices ;matrices make ;make additions ;additions subtractions ;subtractions matrices ;matrices size ;size additions ;additions numbers ;numbers simply ;simply multiplied ;multiplied observations ;observations yield ;yield recurrence ;recurrence relation ;relation closed ;closed solution ;solution recurrence ;recurrence problem ;problem section ;section exercises ;exercises simply ;simply establish ;establish solution ;solution growth ;growth master ;master theorem ;theorem nlog ;nlog words ;words additions ;additions growth ;growth multiplications ;multiplications puts ;puts strassen ;strassen algorithm ;algorithm nlog ;nlog efficiency ;efficiency class ;class brute ;brute method ;method strassen ;strassen discovery ;discovery algorithms ;algorithms multiplying ;multiplying matrices ;matrices real ;real numbers ;numbers progressively ;progressively smaller ;smaller constants ;constants invented ;invented fastest ;fastest algorithm ;algorithm coopersmith ;coopersmith winograd ;winograd coo ;coo efficiency ;efficiency decreasing ;decreasing values ;values exponents ;exponents obtained ;obtained expense ;expense increasing ;increasing complexity ;complexity algorithms ;algorithms large ;large multiplicative ;multiplicative constants ;constants practical ;practical interesting ;interesting theoretical ;theoretical view ;view closer ;closer theoretical ;theoretical lower ;lower bound ;bound matrix ;matrix multiplication ;multiplication multiplications ;multiplications gap ;gap bound ;bound algorithm ;algorithm remains ;remains unresolved ;unresolved matrix ;matrix multiplication ;multiplication computationally ;computationally equivalent ;equivalent important ;important problems ;problems solving ;solving systems ;systems linear ;linear equations ;equations discussed ;discussed chapter ;chapter exercises ;exercises smallest ;smallest largest ;largest numbers ;numbers digits ;digits product ;product decimal ;decimal digit ;digit integers ;integers compute ;compute applying ;applying conquer ;conquer algorithm ;algorithm outlined ;outlined text ;text prove ;prove equality ;equality alogb ;alogb clogb ;clogb section ;section nlog ;nlog log ;log closed ;closed formula ;formula multiplications ;multiplications multiplication ;multiplication large ;large integer ;integer multiplication ;multiplication algorithm ;algorithm addition ;addition assuming ;assuming power ;power sake ;sake simplicity ;simplicity subtle ;subtle assumption ;assumption setting ;setting recurrences ;recurrences true ;true final ;final answers ;answers assumption ;assumption digit ;digit additions ;additions pen ;pen pencil ;pencil algorithm ;algorithm multiplying ;multiplying digit ;digit integers ;integers disregard ;disregard potential ;potential carries ;carries verify ;verify formulas ;formulas underlying ;underlying strassen ;strassen algorithm ;algorithm multiplying ;multiplying matrices ;matrices apply ;apply strassen ;strassen algorithm ;algorithm compute ;compute exiting ;exiting recursion ;recursion computing ;computing products ;products matrices ;matrices brute ;brute algorithm ;algorithm solve ;solve recurrence ;recurrence additions ;additions required ;required strassen ;strassen algo ;algo rithm ;rithm assume ;assume power ;power pan ;pan discovered ;discovered conquer ;conquer matrix ;matrix multiplication ;multiplication algorithm ;algorithm based ;based multiplying ;multiplying matrices ;matrices multiplications ;multiplications asymptotic ;asymptotic efficiency ;efficiency pan ;pan algorithm ;algorithm additions ;additions strassen ;strassen algorithm ;algorithm practical ;practical implementations ;implementations strassen ;strassen algorithm ;algorithm brute ;brute method ;method matrix ;matrix sizes ;sizes smaller ;smaller crossover ;crossover run ;run experiment ;experiment determine ;determine crossover ;crossover closest ;closest pair ;pair convex ;convex hull ;hull problems ;problems conquer ;conquer section ;section discussed ;discussed brute ;brute approach ;approach solving ;solving classic ;classic prob ;prob lems ;lems computational ;computational geometry ;geometry closest ;closest pair ;pair problem ;problem convex ;convex hull ;hull problem ;problem dimensional ;dimensional versions ;versions problems ;problems solved ;solved brute ;brute algorithms ;algorithms sec ;sec tion ;tion discuss ;discuss sophisticated ;sophisticated asymptotically ;asymptotically efficient ;efficient algorithms ;algorithms problems ;problems based ;based conquer ;conquer technique ;technique closest ;closest pair ;pair problem ;problem set ;set points ;points cartesian ;cartesian plane ;plane sake ;sake simplicity ;simplicity assume ;assume points ;points distinct ;distinct assume ;assume points ;points ordered ;ordered nondecreasing ;nondecreasing coordinate ;coordinate sort ;sort efficeint ;efficeint sorting ;sorting algorithm ;algorithm mergesort ;mergesort convenient ;convenient points ;points sorted ;sorted nondecreasing ;nondecreasing coordinate ;coordinate denote ;denote problem ;problem solved ;solved obvious ;obvious brute ;brute algorithm ;algorithm points ;points subsets ;subsets points ;points drawing ;drawing vertical ;vertical line ;line median ;median coordinates ;coordinates points ;points left ;left line ;line points ;points line ;line solve ;solve closest ;closest pair ;pair problem ;problem min ;min figure ;figure idea ;idea conquer ;conquer algorithm ;algorithm closest ;closest pair ;pair problem ;problem rectangle ;rectangle points ;points closer ;closer dmin ;dmin recursively ;recursively subsets ;subsets smallest ;smallest distances ;distances pairs ;pairs points ;points min ;min necessarily ;necessarily smallest ;smallest distance ;distance pairs ;pairs points ;points closer ;closer pair ;pair sides ;sides separating ;separating line ;line combining ;combining solutions ;solutions smaller ;smaller subproblems ;subproblems points ;points limit ;limit attention ;attention points ;points symmetric ;symmetric vertical ;vertical width ;width separating ;separating line ;line distance ;distance pair ;pair points ;points figure ;figure points ;points width ;width separating ;separating line ;line obtained ;obtained ordered ;ordered nondecreasing ;nondecreasing coor ;coor dinate ;dinate scan ;scan updating ;updating information ;information dmin ;dmin minimum ;minimum distance ;distance encounter ;encounter closer ;closer pair ;pair points ;points initially ;initially dmin ;dmin subsequently ;subsequently dmin ;dmin chance ;chance closer ;closer dmin ;dmin difference ;difference coordinates ;coordinates dmin ;dmin geometri ;geometri cally ;cally means ;means rectangle ;rectangle shown ;shown figure ;figure principal ;principal insight ;insight exploited ;exploited algorithm ;algorithm observation ;observation rectangle ;rectangle points ;points half ;half left ;left rectangle ;rectangle distance ;distance easy ;easy prove ;prove total ;total points ;points rectangle ;rectangle exceed ;exceed prob ;prob lem ;lem section ;section exercises ;exercises careful ;careful analysis ;analysis reduces ;reduces joh ;joh algorithm ;algorithm points ;points moving ;moving pseudocode ;pseudocode algorithm ;algorithm advice ;advice section ;section computing ;computing square ;square roots ;roots innermost ;innermost loop ;loop algorithm ;algorithm efficientclosestpair ;efficientclosestpair solves ;solves closest ;closest pair ;pair problem ;problem conquer ;conquer input ;input array ;array points ;points cartesian ;cartesian plane ;plane sorted ;sorted nondecreasing ;nondecreasing coordinates ;coordinates array ;array points ;points sorted ;sorted nondecreasing ;nondecreasing coordinates ;coordinates output ;output euclidean ;euclidean distance ;distance closest ;closest pair ;pair points ;points minimal ;minimal distance ;distance brute ;brute algorithm ;algorithm points ;points array ;array points ;points array ;array remaining ;remaining points ;points array ;array points ;points array ;array efficientclosestpair ;efficientclosestpair min ;min points ;points array ;array num ;num dminsq ;dminsq num ;num dminsq ;dminsq min ;min dminsq ;dminsq sqrt ;sqrt dminsq ;dminsq algorithm ;algorithm spends ;spends linear ;linear dividing ;dividing problem ;problem problems ;problems half ;half size ;size combining ;combining obtained ;obtained solutions ;solutions assuming ;assuming usual ;usual power ;power recurrence ;recurrence running ;running algorithm ;algorithm applying ;applying master ;master theorem ;theorem log ;log necessity ;necessity presort ;presort input ;input points ;points efficiency ;efficiency class ;class sorting ;sorting log ;log algorithm ;algorithm mergesort ;mergesort fact ;fact efficiency ;efficiency class ;class achieve ;achieve proved ;proved algorithm ;algorithm problem ;problem log ;log natural ;natural assumptions ;assumptions operations ;operations algorithm ;algorithm pre ;pre convex ;convex hull ;hull problem ;problem revisit ;revisit convex ;convex hull ;hull problem ;problem introduced ;introduced section ;section smallest ;smallest convex ;convex polygon ;polygon points ;points plane ;plane conquer ;conquer algorithm ;algorithm called ;called quickhull ;quickhull resemblance ;resemblance quicksort ;quicksort set ;set points ;points cartesian ;cartesian plane ;plane assume ;assume points ;points sorted ;sorted nondecreasing ;nondecreasing coordinates ;coordinates ties ;ties resolved ;resolved increasing ;increasing coordinates ;coordinates points ;points involved ;involved difficult ;difficult prove ;prove geometrically ;geometrically obvious ;obvious fact ;fact leftmost ;leftmost rightmost ;rightmost distinct ;distinct extreme ;extreme points ;points set ;set convex ;convex hull ;hull figure ;figure straight ;straight line ;line points ;points directed ;directed line ;line separates ;separates points ;points sets ;sets set ;set points ;points left ;left line ;line set ;set points ;points line ;line left ;left line ;line directed ;directed forms ;forms counterclockwise ;counterclockwise cite ;cite analytical ;analytical condition ;condition based ;based checking ;checking determinant ;determinant formed ;formed coordinates ;coordinates points ;points line ;line extreme ;extreme points ;points convex ;convex hull ;hull excluded ;excluded consideration ;consideration boundary ;boundary convex ;convex hull ;hull polygonal ;polygonal chains ;chains upper ;upper boundary ;boundary lower ;lower boundary ;boundary upper ;upper boundary ;boundary called ;called upper ;upper hull ;hull sequence ;sequence line ;line segments ;segments vertices ;vertices points ;points lower ;lower boundary ;boundary called ;called lower ;lower hull ;hull sequence ;sequence line ;line segments ;segments vertices ;vertices points ;points fact ;fact convex ;convex hull ;hull entire ;entire set ;set composed ;composed upper ;upper lower ;lower hulls ;hulls constructed ;constructed independently ;independently similar ;similar fashion ;fashion observation ;observation exploited ;exploited algorithms ;algorithms problem ;problem concreteness ;concreteness discuss ;discuss quickhull ;quickhull proceeds ;proceeds construct ;construct upper ;upper hull ;hull lower ;lower hull ;hull constructed ;constructed manner ;manner figure ;figure upper ;upper lower ;lower hulls ;hulls set ;set points ;points pmax ;pmax figure ;figure idea ;idea quickhull ;quickhull upper ;upper hull ;hull simply ;simply line ;line segment ;segment endpoints ;endpoints algorithm ;algorithm identifies ;identifies pmax ;pmax farthest ;farthest line ;line figure ;figure maximizes ;maximizes angle ;angle pmaxppn ;pmaxppn selected ;selected pmax ;pmax maximizes ;maximizes area ;area triangle ;triangle vertices ;vertices algorithm ;algorithm identifies ;identifies points ;points set ;set left ;left line ;line pmax ;pmax points ;points make ;make set ;set points ;points left ;left line ;line make ;make set ;set difficult ;difficult prove ;prove pmax ;pmax vertex ;vertex upper ;upper hull ;hull points ;points pmaxpn ;pmaxpn vertices ;vertices upper ;upper hull ;hull eliminated ;eliminated consideration ;consideration points ;points left ;left lines ;lines pmax ;pmax algorithm ;algorithm constructing ;constructing upper ;upper hulls ;hulls pmax ;pmax recursively ;recursively simply ;simply concatenate ;concatenate upper ;upper hull ;hull entire ;entire set ;set figure ;figure algorithm ;algorithm geometric ;geometric operations ;operations implemented ;implemented fortunately ;fortunately advantage ;advantage fact ;fact analytical ;analytical geometry ;geometry arbitrary ;arbitrary points ;points cartesian ;cartesian plane ;plane area ;area triangle ;triangle equal ;equal half ;half magnitude ;magnitude determinant ;determinant expression ;expression positive ;positive left ;left line ;line formula ;formula constant ;constant lies ;lies left ;left line ;line determined ;determined points ;points distance ;distance line ;line quickhull ;quickhull worst ;worst case ;case efficiency ;efficiency quicksort ;quicksort problem ;problem section ;section exercises ;exercises average ;average case ;case performance ;performance algorithm ;algorithm benefit ;benefit quicksort ;quicksort savings ;savings average ;average balanced ;balanced split ;split problem ;problem smaller ;smaller subproblems ;subproblems significant ;significant fraction ;fraction points ;points pmaxpn ;pmaxpn figure ;figure eliminated ;eliminated processing ;processing natural ;natural assumption ;assumption points ;points chosen ;chosen randomly ;randomly uniform ;uniform dis ;dis tribution ;tribution convex ;convex region ;region circle ;circle rectangle ;rectangle average ;average case ;case efficiency ;efficiency quickhull ;quickhull turns ;turns linear ;linear ove ;ove exercises ;exercises dimensional ;dimensional version ;version closest ;closest pair ;pair problem ;problem finding ;finding closest ;closest numbers ;numbers set ;set real ;real num ;num bers ;bers design ;design algorithm ;algorithm directly ;directly based ;based conquer ;conquer technique ;technique determine ;determine efficiency ;efficiency class ;class good ;good algorithm ;algorithm problem ;problem prove ;prove conquer ;conquer algorithm ;algorithm closest ;closest pair ;pair problem ;problem examines ;examines vertical ;vertical figures ;figures points ;points closer ;closer dmin ;dmin minimum ;minimum distance ;distance points ;points encountered ;encountered algorithm ;algorithm version ;version conquer ;conquer dimensional ;dimensional closest ;closest pair ;pair algorithm ;algorithm presorting ;presorting input ;input set ;set simply ;simply sort ;sort sets ;sets nondecreasing ;nondecreasing coordinates ;coordinates recursive ;recursive assuming ;assuming sorting ;sorting mergesort ;mergesort set ;set recurrence ;recurrence relation ;relation running ;running worst ;worst case ;case solve ;solve implement ;implement conquer ;conquer closest ;closest pair ;pair algorithm ;algorithm outlined ;outlined section ;section language ;language choice ;choice web ;web visualization ;visualization algorithm ;algorithm closest ;closest pair ;pair problem ;problem algorithm ;algorithm visualization ;visualization represent ;represent voronoi ;voronoi polygon ;polygon set ;set points ;points plane ;plane defined ;defined perimeter ;perimeter set ;set points ;points plane ;plane closer ;closer union ;union voronoi ;voronoi polygons ;polygons points ;points called ;called voronoi ;voronoi diagram ;diagram voronoi ;voronoi diagram ;diagram set ;set points ;points visualization ;visualization algorithm ;algorithm generating ;generating voronoi ;voronoi diagram ;diagram web ;web study ;study examples ;examples diagrams ;diagrams based ;based observations ;observations solution ;solution previous ;previous generalized ;generalized general ;general case ;case pmax ;pmax quickhull ;quickhull algorithm ;algorithm analytically ;analytically case ;case efficiency ;efficiency quickhull ;quickhull specific ;specific inputs ;inputs make ;make quickhull ;quickhull run ;run quadratic ;quadratic implement ;implement quickhull ;quickhull language ;language choice ;choice creating ;creating decagons ;decagons points ;points plane ;plane line ;line devise ;devise algorithm ;algorithm construct ;construct decagons ;decagons vertices ;vertices points ;points decagons ;decagons convex ;convex simple ;simple boundary ;boundary decagons ;decagons common ;common shortest ;shortest path ;path fenced ;fenced area ;area dimensional ;dimensional clidean ;clidean plane ;plane shape ;shape convex ;convex polygon ;polygon vertices ;vertices points ;points necessarily ;necessarily points ;points min ;min max ;max design ;design efficient ;efficient algorithm ;algorithm comput ;comput ing ;ing length ;length shortest ;shortest path ;path oro ;oro summary ;summary conquer ;conquer general ;general algorithm ;algorithm design ;design technique ;technique solves ;solves problem ;problem dividing ;dividing smaller ;smaller subproblems ;subproblems ideally ;ideally equal ;equal size ;size solving ;solving recursively ;recursively combining ;combining solutions ;solutions solution ;solution original ;original problem ;problem efficient ;efficient algorithms ;algorithms based ;based technique ;technique inapplicable ;inapplicable inferior ;inferior simpler ;simpler algorithmic ;algorithmic solutions ;solutions running ;running conquer ;conquer algorithms ;algorithms satisfies ;satisfies recurrence ;recurrence master ;master theorem ;theorem establishes ;establishes growth ;growth solutions ;solutions mergesort ;mergesort conquer ;conquer sorting ;sorting algorithm ;algorithm works ;works dividing ;dividing input ;input array ;array halves ;halves sorting ;sorting recursively ;recursively merging ;merging sorted ;sorted halves ;halves original ;original array ;array sorted ;sorted algorithm ;algorithm efficiency ;efficiency log ;log cases ;cases key ;key comparisons ;comparisons theoretical ;theoretical minimum ;minimum principal ;principal drawback ;drawback significant ;significant extra ;extra storage ;storage requirement ;requirement quicksort ;quicksort conquer ;conquer sorting ;sorting algorithm ;algorithm works ;works partitioning ;partitioning input ;input elements ;elements relative ;relative preselected ;preselected element ;element quicksort ;quicksort noted ;noted superior ;superior efficiency ;efficiency log ;log algorithms ;algorithms sorting ;sorting randomly ;randomly ordered ;ordered arrays ;arrays quadratic ;quadratic worst ;worst case ;case efficiency ;efficiency classic ;classic traversals ;traversals binary ;binary tree ;tree preorder ;preorder inorder ;inorder postorder ;postorder similar ;similar algorithms ;algorithms require ;require recursive ;recursive processing ;processing left ;left subtrees ;subtrees considered ;considered examples ;examples conquer ;conquer technique ;technique analysis ;analysis helped ;helped replacing ;replacing subtrees ;subtrees tree ;tree special ;special external ;external nodes ;nodes conquer ;conquer algorithm ;algorithm multiplying ;multiplying digit ;digit integers ;integers requires ;requires digit ;digit multiplications ;multiplications strassen ;strassen algorithm ;algorithm multiplications ;multiplications matrices ;matrices exploiting ;exploiting conquer ;conquer technique ;technique algorithm ;algorithm matrices ;matrices multiplications ;multiplications conquer ;conquer technique ;technique successfully ;successfully applied ;applied important ;important problems ;problems computational ;computational geometry ;geometry closest ;closest pair ;pair problem ;problem convex ;convex hull ;hull problem ;things mercy ;mercy things ;things johann ;johann wolfgang ;wolfgang von ;von ethe ;ethe space ;space offs ;offs algorithm ;algorithm design ;design issue ;issue theoreticians ;theoreticians practitioners ;practitioners computing ;computing problem ;problem computing ;computing values ;values function ;function points ;points domain ;domain premium ;premium precompute ;precompute function ;function values ;values table ;table human ;human computers ;computers advent ;advent electronic ;electronic computers ;computers process ;process burdening ;burdening libraries ;libraries volumes ;volumes mathematical ;mathematical tables ;tables lost ;lost appeal ;appeal widespread ;widespread electronic ;electronic computers ;computers underlying ;underlying idea ;idea proven ;proven development ;development important ;important algorithms ;algorithms problems ;problems general ;general terms ;terms idea ;idea preprocess ;preprocess problem ;problem input ;input additional ;additional information ;information obtained ;obtained accelerate ;accelerate solving ;solving problem ;problem afterward ;afterward approach ;approach input ;input enhancement ;enhancement discuss ;discuss algorithms ;algorithms based ;based counting ;counting methods ;methods sorting ;sorting section ;section boyer ;boyer moore ;moore algorithm ;algorithm string ;string matching ;matching simplified ;simplified version ;version sug ;sug gested ;gested horspool ;horspool section ;section technique ;technique exploits ;exploits space ;space offs ;offs simply ;simply extra ;extra space ;space facilitate ;facilitate faster ;faster flexible ;flexible access ;access data ;data approach ;approach prestructuring ;prestructuring highlights ;highlights facets ;facets variation ;variation space ;space processing ;processing problem ;problem standard ;standard terms ;terms synonymously ;synonymously technique ;technique preprocessing ;preprocessing preconditioning ;preconditioning confusingly ;confusingly terms ;terms applied ;applied methods ;methods idea ;idea preprocessing ;preprocessing extra ;extra space ;space chapter ;chapter confusion ;confusion input ;input enhancement ;enhancement special ;special space ;space technique ;technique discussed ;discussed solved ;solved input ;input enhancement ;enhancement variety ;variety deals ;deals access ;access structuring ;structuring illustrate ;illustrate approach ;approach hashing ;hashing section ;section indexing ;indexing trees ;trees section ;section algorithm ;algorithm design ;design technique ;technique related ;related space ;space idea ;idea dynamic ;dynamic programming ;programming strategy ;strategy based ;based recording ;recording solu ;solu tions ;tions overlapping ;overlapping subproblems ;subproblems problem ;problem table ;table solu ;solu tion ;tion problem ;problem obtained ;obtained discuss ;discuss developed ;developed technique ;technique separately ;separately chapter ;chapter final ;final comments ;comments interplay ;interplay space ;space algo ;algo rithm ;rithm design ;design resources ;resources space ;space design ;design situations ;situations fact ;fact align ;align bring ;bring algorithmic ;algorithmic solution ;solution minimizes ;minimizes running ;running space ;space consumed ;consumed situation ;situation arises ;arises algorithm ;algorithm space ;space efficient ;efficient data ;data structure ;structure represent ;represent problem ;problem input ;input leads ;leads faster ;faster algorithm ;algorithm problem ;problem traversing ;traversing graphs ;graphs efficiency ;efficiency principal ;principal traversal ;traversal algorithms ;algorithms depth ;depth breadth ;breadth depends ;depends data ;data structure ;structure repre ;repre senting ;senting graphs ;graphs adjacency ;adjacency matrix ;matrix representation ;representation adjacency ;adjacency representation ;representation numbers ;numbers vertices ;vertices edges ;edges input ;input graphs ;graphs sparse ;sparse edges ;edges relative ;relative vertices ;vertices adjacency ;adjacency representation ;representation efficient ;efficient space ;space running ;running points ;points view ;view situation ;situation arises ;arises manipulation ;manipulation sparse ;sparse matrices ;matrices sparse ;sparse polynomi ;polynomi als ;als percentage ;percentage zeros ;zeros objects ;objects sufficiently ;sufficiently high ;high space ;space ignoring ;ignoring zeros ;zeros objects ;objects representation ;representation processing ;processing discuss ;discuss space ;space offs ;offs mentioning ;mentioning hugely ;hugely important ;important area ;area data ;data compression ;compression data ;data compres ;compres sion ;sion size ;size reduction ;reduction goal ;goal technique ;technique solving ;solving problem ;problem discuss ;discuss data ;data compression ;compression algorithm ;algorithm chapter ;chapter reader ;reader interested ;interested topic ;topic wealth ;wealth algorithms ;algorithms books ;books sorting ;sorting counting ;counting applying ;applying input ;input enhancement ;enhancement technique ;technique discuss ;discuss application ;application sorting ;sorting problem ;problem obvious ;obvious idea ;idea element ;element sorted ;sorted total ;total elements ;elements smaller ;smaller element ;element results ;results table ;table numbers ;numbers positions ;positions elements ;elements sorted ;sorted element ;element position ;position index ;index counting ;counting sorted ;sorted array ;array sort ;sort simply ;simply copying ;copying elements ;elements positions ;positions sorted ;sorted algorithm ;algorithm called ;called comparison ;comparison counting ;counting sort ;sort figure ;figure array ;array initially ;initially final ;final state ;state array ;array figure ;figure sorting ;sorting comparison ;comparison counting ;counting algorithm ;algorithm comparisoncountingsort ;comparisoncountingsort sorts ;sorts array ;array comparison ;comparison counting ;counting input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array elements ;elements sorted ;sorted nondecreasing ;nondecreasing efficiency ;efficiency algorithm ;algorithm quadratic ;quadratic algorithm ;algorithm considers ;considers pairs ;pairs element ;element array ;array formally ;formally times ;times basic ;basic operation ;operation comparison ;comparison executed ;executed equal ;equal sum ;sum encountered ;encountered times ;times algorithm ;algorithm makes ;makes key ;key comparisons ;comparisons selection ;selection sort ;sort addition ;addition linear ;linear extra ;extra space ;space positive ;positive algorithm ;algorithm makes ;makes minimum ;minimum key ;key moves ;moves placing ;placing directly ;directly final ;final position ;position sorted ;sorted array ;array counting ;counting idea ;idea productively ;productively situation ;situation elements ;elements sorted ;sorted small ;small set ;set values ;values assume ;assume sort ;sort values ;values applying ;applying general ;general sorting ;sorting algorithm ;algorithm advantage ;advantage additional ;additional information ;information values ;values sorted ;sorted scan ;scan compute ;compute simply ;simply make ;make elements ;elements equal ;equal remaining ;remaining elements ;elements equal ;equal generally ;generally element ;element values ;values integers ;integers lower ;lower bound ;bound upper ;upper bound ;bound compute ;compute frequency ;frequency values ;values array ;array positions ;positions sorted ;sorted filled ;filled positions ;positions overwrite ;overwrite elements ;elements realistic ;realistic situation ;situation sorting ;sorting items ;items information ;information keys ;keys overwrite ;overwrite elements ;elements array ;array hold ;hold sorted ;sorted elements ;elements values ;values equal ;equal lowest ;lowest copied ;copied elements ;elements positions ;positions elements ;elements copied ;copied positions ;positions accumulated ;accumulated sums ;sums frequencies ;frequencies called ;called distribution ;distribution statistics ;statistics method ;method distribution ;distribution counting ;counting sorting ;sorting array ;array values ;values set ;set overwritten ;overwritten process ;process sorting ;sorting frequency ;frequency distribution ;distribution arrays ;arrays array ;array values ;values frequencies ;frequencies distribution ;distribution values ;values distribution ;distribution values ;values proper ;proper positions ;positions rences ;rences elements ;elements final ;final sorted ;sorted array ;array index ;index array ;array positions ;positions distribution ;distribution values ;values reduced ;reduced element ;element positions ;positions convenient ;convenient process ;process input ;input array ;array left ;left element ;element distribution ;distribution position ;position array ;array hold ;hold sorted ;sorted decrease ;decrease distribution ;distribution proceed ;proceed element ;element array ;array entire ;entire processing ;processing depicted ;depicted figure ;figure sorting ;sorting distribution ;distribution counting ;counting distribution ;distribution values ;values decremented ;decremented shown ;shown bold ;bold pseudocode ;pseudocode algorithm ;algorithm distributioncountingsort ;distributioncountingsort sorts ;sorts array ;array integers ;integers range ;range distribution ;distribution counting ;counting input ;input array ;array integers ;integers output ;output array ;array elements ;elements sorted ;sorted nondecreasing ;nondecreasing initialize ;initialize frequencies ;frequencies compute ;compute frequencies ;frequencies reuse ;reuse distribution ;distribution downto ;downto assuming ;assuming range ;range array ;array values ;values fixed ;fixed linear ;linear algorithm ;algorithm makes ;makes consecutive ;consecutive passes ;passes input ;input array ;array efficiency ;efficiency class ;class efficient ;efficient sorting ;sorting algorithms ;algorithms mergesort ;mergesort quicksort ;quicksort heapsort ;heapsort encountered ;encountered important ;important efficiency ;efficiency obtained ;obtained exploiting ;exploiting specific ;specific nature ;nature inputs ;inputs sorting ;sorting distribution ;distribution counting ;counting works ;works addition ;addition trading ;trading space ;space exercises ;exercises exchange ;exchange numeric ;numeric values ;values variables ;variables extra ;extra storage ;storage comparison ;comparison counting ;counting algorithm ;algorithm correctly ;correctly arrays ;arrays equal ;equal values ;values assuming ;assuming set ;set values ;values sort ;sort alphabetical ;alphabetical distribution ;distribution counting ;counting algorithm ;algorithm distribution ;distribution counting ;counting algorithm ;algorithm stable ;stable design ;design line ;line algorithm ;algorithm sorting ;sorting array ;array size ;size values ;values distinct ;distinct integers ;integers ancestry ;ancestry problem ;problem asks ;asks determine ;determine vertex ;vertex ancestor ;ancestor vertex ;vertex binary ;binary generally ;generally rooted ;rooted ordered ;ordered tree ;tree vertices ;vertices design ;design input ;input enhancement ;enhancement algorithm ;algorithm sufficient ;sufficient information ;information solve ;solve problem ;problem pair ;pair tree ;tree vertices ;vertices constant ;constant technique ;technique virtual ;virtual initialization ;initialization efficient ;efficient initialize ;initialize elements ;elements array ;array elements ;elements constant ;constant initialized ;initialized utilizing ;utilizing variable ;variable counter ;counter initialized ;initialized elements ;elements auxiliary ;auxiliary arrays ;arrays size ;size defined ;defined counter ;counter indices ;indices elements ;elements initialized ;initialized index ;index element ;element initialized ;initialized index ;index element ;element initialized ;initialized kth ;kth element ;element counter ;counter initialized ;initialized sketch ;sketch state ;state arrays ;arrays signments ;signments general ;general scheme ;scheme initialized ;initialized distance ;distance sorting ;sorting egyptian ;egyptian stone ;stone statues ;statues standing ;standing row ;row art ;art gallery ;gallery hall ;hall curator ;curator statues ;statues ordered ;ordered height ;height minimize ;minimize total ;total distance ;distance statues ;statues moved ;moved assume ;assume simplicity ;simplicity statues ;statues heights ;heights azi ;azi write ;write multiplying ;multiplying sparse ;sparse matrices ;matrices matrix ;matrix write ;write multiplying ;multiplying sparse ;sparse polynomials ;polynomials degrees ;degrees good ;good idea ;idea write ;write plays ;plays classic ;classic game ;game tic ;tic tac ;tac toe ;toe human ;human user ;user storing ;storing positions ;positions game ;game board ;board input ;input enhancement ;enhancement string ;string matching ;matching section ;section technique ;technique input ;input enhancement ;enhancement applied ;applied problem ;problem string ;string matching ;matching recall ;recall problem ;problem string ;string matching ;matching requires ;requires finding ;finding occurrence ;occurrence string ;string characters ;characters called ;called pattern ;pattern longer ;longer string ;string characters ;characters called ;called text ;text discussed ;discussed brute ;brute algorithm ;algorithm problem ;problem section ;section simply ;simply matches ;matches pairs ;pairs characters ;characters pattern ;pattern text ;text left ;left mismatch ;mismatch occurs ;occurs shifts ;shifts pattern ;pattern position ;position trial ;trial maximum ;maximum trials ;trials worst ;worst case ;case comparisons ;comparisons worst ;worst case ;case efficiency ;efficiency brute ;brute algorithm ;algorithm class ;class average ;average comparisons ;comparisons pattern ;pattern shift ;shift random ;random natural ;natural language ;language texts ;texts average ;average case ;case efficiency ;efficiency turns ;turns faster ;faster algorithms ;algorithms discovered ;discovered exploit ;exploit input ;input enhancement ;enhancement idea ;idea preprocess ;preprocess pattern ;pattern information ;information table ;table information ;information actual ;actual pattern ;pattern text ;text idea ;idea bestknown ;bestknown algorithms ;algorithms knuth ;knuth morris ;morris pratt ;pratt algorithm ;algorithm knu ;knu boyer ;boyer moore ;moore algorithm ;algorithm boy ;boy principal ;principal difference ;difference algorithms ;algorithms lies ;lies characters ;characters pattern ;pattern counterparts ;counterparts text ;text knuthmorris ;knuthmorris pratt ;pratt algorithm ;algorithm left ;left boyer ;boyer moore ;moore algorithm ;algorithm left ;left idea ;idea leads ;leads simpler ;simpler algorithms ;algorithms pursue ;pursue boyer ;boyer moore ;moore algorithm ;algorithm starts ;starts aligning ;aligning pattern ;pattern beginning ;beginning characters ;characters text ;text trial ;trial fails ;fails shifts ;shifts pattern ;pattern comparisons ;comparisons trial ;trial algorithm ;algorithm left ;left starting ;starting character ;character pattern ;pattern underlying ;underlying idea ;idea boyer ;boyer moore ;moore algorithm ;algorithm simple ;simple actual ;actual implementation ;implementation working ;working method ;method discussion ;discussion simplified ;simplified version ;version boyer ;boyer moore ;moore algorithm ;algorithm suggested ;suggested horspool ;horspool hor ;hor addition ;addition simpler ;simpler horspool ;horspool algorithm ;algorithm necessarily ;necessarily efficient ;efficient boyer ;boyer moore ;moore algorithm ;algorithm random ;random strings ;strings horspool ;horspool algorithm ;algorithm searching ;searching pattern ;pattern barber ;barber text ;text starting ;starting pattern ;pattern moving ;moving left ;left pairs ;pairs characters ;characters pattern ;pattern text ;text pattern ;pattern characters ;characters successfully ;successfully matching ;matching substring ;substring stopped ;stopped altogether ;altogether continued ;continued occurrence ;occurrence pattern ;pattern desired ;desired mismatch ;mismatch occurs ;occurs shift ;shift pattern ;pattern make ;make large ;large shift ;shift risking ;risking possibility ;possibility missing ;missing matching ;matching substring ;substring text ;text horspool ;horspool algorithm ;algorithm determines ;determines size ;size shift ;shift character ;character text ;text aligned ;aligned character ;character pattern ;pattern case ;case character ;character matches ;matches counterpart ;counterpart pattern ;pattern general ;general possibilities ;possibilities case ;case pattern ;pattern letter ;letter safely ;safely shift ;shift pattern ;pattern entire ;entire length ;length shift ;shift character ;character pattern ;pattern aligned ;aligned text ;text character ;character pattern ;pattern case ;case occurrences ;occurrences character ;character pattern ;pattern letter ;letter shift ;shift align ;align rightmost ;rightmost occurrence ;occurrence pattern ;pattern text ;text case ;case character ;character pattern ;pattern characters ;characters letter ;letter situation ;situation similar ;similar case ;case pattern ;pattern shifted ;shifted entire ;entire pattern ;pattern length ;length case ;case finally ;finally character ;character pattern ;pattern characters ;characters letter ;letter situation ;situation similar ;similar case ;case rightmost ;rightmost occurrence ;occurrence characters ;characters pattern ;pattern aligned ;aligned text ;text examples ;examples demonstrate ;demonstrate left ;left character ;character comparisons ;comparisons lead ;lead farther ;farther shifts ;shifts pattern ;pattern shifts ;shifts position ;position brute ;brute algorithm ;algorithm characters ;characters pattern ;pattern trial ;trial lose ;lose superiority ;superiority fortunately ;fortunately idea ;idea input ;input enhancement ;enhancement makes ;makes repetitive ;repetitive comparisons ;comparisons unnecessary ;unnecessary precompute ;precompute shift ;shift sizes ;sizes table ;table indexed ;indexed characters ;characters encountered ;encountered text ;text natural ;natural language ;language texts ;texts space ;space punctuation ;punctuation symbols ;symbols special ;special characters ;characters information ;information text ;text eventual ;eventual searching ;searching required ;required table ;table entries ;entries shift ;shift sizes ;sizes computed ;computed formula ;formula pattern ;pattern length ;length characters ;characters pattern ;pattern distance ;distance rightmost ;rightmost characters ;characters pattern ;pattern character ;character pattern ;pattern barber ;barber table ;table entries ;entries equal ;equal entries ;entries simple ;simple algorithm ;algorithm computing ;computing shift ;shift table ;table entries ;entries initialize ;initialize entries ;entries pattern ;pattern length ;length scan ;scan pattern ;pattern left ;left repeating ;repeating times ;times character ;character pattern ;pattern overwrite ;overwrite entry ;entry table ;table character ;character distance ;distance character ;character pattern ;pattern algorithm ;algorithm scans ;scans pattern ;pattern left ;left overwrite ;overwrite character ;character rightmost ;rightmost occurrence ;occurrence algorithm ;algorithm shifttable ;shifttable fills ;fills shift ;shift table ;table horspool ;horspool boyer ;boyer moore ;moore algorithms ;algorithms input ;input pattern ;pattern alphabet ;alphabet characters ;characters output ;output table ;table size ;size indexed ;indexed alphabet ;alphabet characters ;characters filled ;filled shift ;shift sizes ;sizes computed ;computed formula ;formula size ;size table ;table summarize ;summarize algorithm ;algorithm horspool ;horspool algorithm ;algorithm pattern ;pattern length ;length alphabet ;alphabet pattern ;pattern text ;text construct ;construct shift ;shift table ;table align ;align pattern ;pattern beginning ;beginning text ;text matching ;matching substring ;substring pattern ;pattern reaches ;reaches character ;character text ;text starting ;starting character ;character pattern ;pattern characters ;characters pattern ;pattern text ;text characters ;characters matched ;matched mismatching ;mismatching pair ;pair encountered ;encountered case ;case retrieve ;retrieve entry ;entry column ;column shift ;shift table ;table text ;text character ;character aligned ;aligned character ;character pattern ;pattern shift ;shift pattern ;pattern characters ;characters text ;text pseudocode ;pseudocode horspool ;horspool algorithm ;algorithm horspoolmatching ;horspoolmatching implements ;implements horspool ;horspool algorithm ;algorithm string ;string matching ;matching input ;input pattern ;pattern text ;text output ;output index ;index left ;left matching ;matching substring ;substring matches ;matches shifttable ;shifttable generate ;generate table ;table shifts ;shifts position ;position pattern ;pattern matched ;matched characters ;characters table ;table application ;application horspool ;horspool algorithm ;algorithm searching ;searching pattern ;pattern barber ;barber text ;text comprises ;comprises english ;english letters ;letters spaces ;spaces denoted ;denoted underscores ;underscores shift ;shift table ;table mentioned ;mentioned filled ;filled character ;character shift ;shift actual ;actual text ;text proceeds ;proceeds simple ;simple demonstrate ;demonstrate worst ;worst case ;case efficiency ;efficiency hor ;hor spool ;spool algorithm ;algorithm problem ;problem section ;section exercises ;exercises random ;random texts ;texts efficiency ;efficiency class ;class horspool ;horspool algorithm ;algorithm faster ;faster average ;average brute ;brute algorithm ;algorithm fact ;fact mentioned ;mentioned efficient ;efficient sophisticated ;sophisticated predecessor ;predecessor discovered ;discovered boyer ;boyer moore ;moore boyer ;boyer moore ;moore algorithm ;algorithm outline ;outline boyer ;boyer moore ;moore algorithm ;algorithm comparison ;comparison rightmost ;rightmost character ;character pattern ;pattern character ;character text ;text fails ;fails algorithm ;algorithm thing ;thing horspool ;horspool algorithm ;algorithm shifts ;shifts pattern ;pattern characters ;characters retrieved ;retrieved table ;table precomputed ;precomputed explained ;explained earlier ;earlier algorithms ;algorithms act ;act differently ;differently positive ;positive pattern ;pattern characters ;characters matched ;matched successfully ;successfully mismatch ;mismatch encountered ;encountered text ;text pattern ;pattern situation ;situation boyer ;boyer moore ;moore algorithm ;algorithm determines ;determines shift ;shift size ;size quantities ;quantities guided ;guided text ;text character ;character caused ;caused mismatch ;mismatch counterpart ;counterpart pattern ;pattern called ;called badsymbol ;badsymbol shift ;shift reasoning ;reasoning shift ;shift reasoning ;reasoning horspool ;horspool algorithm ;algorithm pattern ;pattern shift ;shift pattern ;pattern text ;text conveniently ;conveniently size ;size shift ;shift computed ;computed formula ;formula entry ;entry precomputed ;precomputed table ;table horspool ;horspool algorithm ;algorithm matched ;matched characters ;characters text ;text pattern ;pattern barber ;barber text ;text characters ;characters failing ;failing letter ;letter text ;text shift ;shift pattern ;pattern positions ;positions formula ;formula mismatching ;mismatching character ;character text ;text occurs ;occurs pattern ;pattern provided ;provided pattern ;pattern barber ;barber text ;text characters ;characters failing ;failing letter ;letter shift ;shift pattern ;pattern positions ;positions shift ;shift pattern ;pattern negative ;negative positions ;positions fall ;fall brute ;brute thinking ;thinking simply ;simply shift ;shift pattern ;pattern position ;position summarize ;summarize bad ;bad symbol ;symbol shift ;shift computed ;computed boyer ;boyer moore ;moore algorithm ;algorithm quantity ;quantity positive ;positive negative ;negative expressed ;expressed compact ;compact formula ;formula max ;max shift ;shift guided ;guided successful ;successful characters ;characters pattern ;pattern refer ;refer ending ;ending portion ;portion pattern ;pattern suffix ;suffix size ;size denote ;denote suff ;suff shift ;shift good ;good suffix ;suffix shift ;shift apply ;apply reasoning ;reasoning guided ;guided filling ;filling bad ;bad symbol ;symbol shift ;shift table ;table based ;based single ;single alphabet ;alphabet character ;character pattern ;pattern suffixes ;suffixes sizes ;sizes good ;good suffix ;suffix shift ;shift table ;table case ;case occurrence ;occurrence suff ;suff pattern ;pattern accurate ;accurate occurrence ;occurrence suff ;suff preceded ;preceded character ;character rightmost ;rightmost occurrence ;occurrence useless ;useless shift ;shift pattern ;pattern occurrence ;occurrence suff ;suff preceded ;preceded character ;character simply ;simply failed ;failed trial ;trial case ;case shift ;shift pattern ;pattern distance ;distance rightmost ;rightmost occurrence ;occurrence preceded ;preceded character ;character rightmost ;rightmost occurrence ;occurrence suff ;suff rightmost ;rightmost occurrence ;occurrence pattern ;pattern abcbab ;abcbab distances ;distances pattern ;pattern abcbab ;abcbab occurrence ;occurrence suff ;suff preceded ;preceded character ;character rightmost ;rightmost occurrence ;occurrence cases ;cases shift ;shift pattern ;pattern entire ;entire length ;length pattern ;pattern dbcbab ;dbcbab shift ;shift pattern ;pattern entire ;entire length ;length characters ;characters shifting ;shifting pattern ;pattern entire ;entire length ;length occurrence ;occurrence suff ;suff preceded ;preceded character ;character rightmost ;rightmost occurrence ;occurrence pattern ;pattern abcbab ;abcbab shifting ;shifting matching ;matching substring ;substring starts ;starts text ;text aligned ;aligned characters ;characters pattern ;pattern shift ;shift pattern ;pattern dbcbab ;dbcbab abcbab ;abcbab pattern ;pattern substring ;substring prefix ;prefix beginning ;beginning pattern ;pattern suffix ;suffix ending ;ending pattern ;pattern erroneous ;erroneous shift ;shift based ;based suffix ;suffix size ;size occurrence ;occurrence pattern ;pattern preceded ;preceded character ;character rightmost ;rightmost occurrence ;occurrence longest ;longest prefix ;prefix size ;size matches ;matches suffix ;suffix size ;size prefix ;prefix exists ;exists shift ;shift size ;size computed ;computed distance ;distance prefix ;prefix suffix ;suffix set ;set pattern ;pattern length ;length values ;values good ;good suffix ;suffix table ;table boyer ;boyer moore ;moore algorithm ;algorithm pattern ;pattern abcbab ;abcbab pattern ;pattern abcbab ;abcbab prepared ;prepared summarize ;summarize boyer ;boyer moore ;moore algorithm ;algorithm entirety ;entirety boyer ;boyer moore ;moore algorithm ;algorithm pattern ;pattern alphabet ;alphabet pattern ;pattern text ;text construct ;construct bad ;bad symbol ;symbol shift ;shift table ;table earlier ;earlier pattern ;pattern construct ;construct good ;good suffix ;suffix shift ;shift table ;table earlier ;earlier align ;align pattern ;pattern beginning ;beginning text ;text matching ;matching substring ;substring pattern ;pattern reaches ;reaches character ;character text ;text starting ;starting character ;character pattern ;pattern characters ;characters pattern ;pattern text ;text character ;character pairs ;pairs matched ;matched mismatching ;mismatching pair ;pair encountered ;encountered character ;character pairs ;pairs matched ;matched successfully ;successfully case ;case retrieve ;retrieve entry ;entry column ;column bad ;bad symbol ;symbol table ;table text ;text mismatched ;mismatched character ;character retrieve ;retrieve entry ;entry good ;good suffix ;suffix table ;table shift ;shift pattern ;pattern positions ;positions computed ;computed formula ;formula max ;max shifting ;shifting maximum ;maximum shifts ;shifts log ;log ical ;ical shifts ;shifts based ;based observations ;observations text ;text mismatched ;mismatched character ;character matched ;matched group ;group pattern ;pattern rightmost ;rightmost characters ;characters imply ;imply shifting ;shifting characters ;characters spectively ;spectively lead ;lead aligning ;aligning pattern ;pattern matching ;matching substring ;substring text ;text interested ;interested shifting ;shifting pattern ;pattern missing ;missing matching ;matching substring ;substring maximum ;maximum numbers ;numbers searching ;searching pattern ;pattern baobab ;baobab text ;text english ;english letters ;letters spaces ;spaces bad ;bad symbol ;symbol table ;table good ;good suffix ;suffix table ;table filled ;filled pattern ;pattern baobab ;baobab actual ;actual pattern ;pattern text ;text figure ;figure proceeds ;proceeds pattern ;pattern fails ;fails counterpart ;counterpart text ;text algorithm ;algorithm retrieves ;retrieves bad ;bad symbol ;symbol table ;table shifts ;shifts tern ;tern max ;max positions ;positions successfully ;successfully matches ;matches pairs ;pairs characters ;characters failure ;failure comparison ;comparison space ;space character ;character text ;text algorithm ;algorithm retrieves ;retrieves bad ;bad symbol ;symbol table ;table good ;good suffix ;suffix table ;table shift ;shift pattern ;pattern max ;max iteration ;iteration good ;good suffix ;suffix leads ;leads farther ;farther shift ;shift pattern ;pattern successfully ;successfully matches ;matches pair ;pair failure ;failure comparison ;comparison space ;space character ;character text ;text algorithm ;algorithm retrieves ;retrieves bad ;bad symbol ;symbol table ;table good ;good suffix ;suffix table ;table shift ;shift max ;max figure ;figure string ;string matching ;matching boyer ;boyer moore ;moore algorithm ;algorithm pattern ;pattern max ;max iteration ;iteration bad ;bad symbol ;symbol leads ;leads farther ;farther shift ;shift pattern ;pattern finds ;finds matching ;matching substring ;substring text ;text successfully ;successfully matching ;matching characters ;characters pattern ;pattern counterparts ;counterparts text ;text searching ;searching occurrence ;occurrence pattern ;pattern worst ;worst case ;case effi ;effi ciency ;ciency boyer ;boyer moore ;moore algorithm ;algorithm linear ;linear algorithm ;algorithm runs ;runs fast ;fast large ;large alphabets ;alphabets relative ;relative length ;length pattern ;pattern people ;people simplified ;simplified versions ;versions horspool ;horspool algorithm ;algorithm dealing ;dealing natural ;natural language ;language strings ;strings exercises ;exercises apply ;apply horspool ;horspool algorithm ;algorithm pattern ;pattern baobab ;baobab text ;text bess ;bess knew ;knew baobabs ;baobabs problem ;problem searching ;searching genes ;genes dna ;dna sequences ;sequences hor ;hor spool ;spool algorithm ;algorithm dna ;dna sequence ;sequence represented ;represented text ;text alphabet ;alphabet gene ;gene segment ;segment pattern ;pattern construct ;construct shift ;shift table ;table gene ;gene segment ;segment chromo ;chromo tcctattctt ;tcctattctt apply ;apply horspool ;horspool algorithm ;algorithm locate ;locate pattern ;pattern dna ;dna sequence ;sequence ttatagatctcgtattcttttatagatctcctattctt ;ttatagatctcgtattcttttatagatctcctattctt character ;character comparisons ;comparisons horspool ;horspool algorithm ;algorithm searching ;searching patterns ;patterns binary ;binary text ;text zeros ;zeros searching ;searching text ;text length ;length pattern ;pattern length ;length horspool ;horspool algorithm ;algorithm worst ;worst case ;case input ;input case ;case input ;input horspool ;horspool algorithm ;algorithm make ;make character ;character comparisons ;comparisons brute ;brute algorithm ;algorithm make ;make searching ;searching pattern ;pattern text ;text horspool ;horspool algorithm ;algorithm discovers ;discovers matching ;matching substring ;substring large ;large shift ;shift make ;make character ;character comparisons ;comparisons boyer ;boyer moore ;moore algorithm ;algorithm make ;make searching ;searching patterns ;patterns binary ;binary text ;text zeros ;zeros boyer ;boyer moore ;moore algorithm ;algorithm correctly ;correctly bad ;bad symbol ;symbol table ;table pattern ;pattern shifts ;shifts boyer ;boyer moore ;moore algorithm ;algorithm correctly ;correctly good ;good suffix ;suffix table ;table pattern ;pattern shifts ;shifts characters ;characters pattern ;pattern counterpart ;counterpart text ;text horspool ;horspool algorithm ;algorithm characters ;characters left ;left boyer ;boyer moore ;moore algorithm ;algorithm implement ;implement horspool ;horspool algorithm ;algorithm boyer ;boyer moore ;moore algorithm ;algorithm brute ;brute algorithm ;algorithm section ;section language ;language choice ;choice run ;run experiment ;experiment efficiencies ;efficiencies matching ;matching random ;random binary ;binary patterns ;patterns random ;random binary ;binary texts ;texts random ;random natural ;natural language ;language patterns ;patterns natural ;natural language ;language texts ;texts strings ;strings characters ;characters establish ;establish cyclic ;cyclic shift ;shift plea ;plea cyclic ;cyclic shift ;shift leap ;leap vice ;vice versa ;versa formally ;formally cyclic ;cyclic shift ;shift obtained ;obtained concatenating ;concatenating character ;character suffix ;suffix character ;character prefix ;prefix design ;design space ;space efficient ;efficient algorithm ;algorithm task ;task space ;space efficiencies ;efficiencies algorithm ;algorithm design ;design efficient ;efficient algorithm ;algorithm task ;task space ;space efficiencies ;efficiencies algorithm ;algorithm hashing ;hashing section ;section efficient ;efficient implement ;implement dictionaries ;dictionaries recall ;recall dictionary ;dictionary abstract ;abstract data ;data set ;set operations ;operations searching ;searching lookup ;lookup insertion ;insertion deletion ;deletion defined ;defined elements ;elements set ;set arbitrary ;arbitrary nature ;nature numbers ;numbers characters ;characters alphabet ;alphabet character ;character strings ;strings practice ;practice important ;important case ;case records ;records student ;student records ;records school ;school citizen ;citizen records ;records governmental ;governmental office ;office records ;records library ;library typically ;typically records ;records comprise ;comprise fields ;fields responsible ;responsible keeping ;keeping information ;information entity ;entity represents ;represents student ;student fields ;fields student ;student date ;date birth ;birth sex ;sex home ;home address ;address major ;major fields ;fields called ;called key ;key identifying ;identifying entities ;entities represented ;represented records ;records student ;student discussion ;discussion assume ;assume implement ;implement dictionary ;dictionary records ;records keys ;keys hashing ;hashing based ;based idea ;idea distributing ;distributing keys ;keys dimensional ;dimensional array ;array called ;called hash ;hash table ;table distribution ;distribution computing ;computing keys ;keys predefined ;predefined function ;function called ;called hash ;hash function ;function assigns ;assigns integer ;integer called ;called hash ;hash address ;address key ;key keys ;keys nonnegative ;nonnegative integers ;integers hash ;hash function ;function mod ;mod remainder ;remainder division ;division keys ;keys letters ;letters alphabet ;alphabet assign ;assign letter ;letter position ;position alphabet ;alphabet denoted ;denoted ord ;ord apply ;apply kind ;kind function ;function integers ;integers finally ;finally character ;character string ;string unsophisticated ;unsophisticated option ;option mod ;mod option ;option compute ;compute ord ;ord mod ;mod constant ;constant larger ;larger ord ;ord general ;general hash ;hash function ;function conflicting ;conflicting require ;require ments ;ments hash ;hash table ;table size ;size excessively ;excessively large ;large compared ;compared keys ;keys sufficient ;sufficient jeopardize ;jeopardize implementation ;implementation efficiency ;efficiency hash ;hash function ;function distribute ;distribute keys ;keys cells ;cells hash ;hash table ;table evenly ;evenly requirement ;requirement makes ;makes desirable ;desirable applications ;applications hash ;hash function ;function dependent ;dependent bits ;bits key ;key hash ;hash function ;function easy ;easy compute ;compute obtained ;obtained treating ;treating ord ;ord digits ;digits based ;based computing ;computing decimal ;decimal horner ;horner finding ;finding remainder ;remainder dividing ;dividing figure ;figure collision ;collision keys ;keys hashing ;hashing choose ;choose hash ;hash table ;table size ;size smaller ;smaller keys ;keys collisions ;collisions phenomenon ;phenomenon keys ;keys hashed ;hashed cell ;cell hash ;hash table ;table figure ;figure collisions ;collisions expected ;expected considerably ;considerably larger ;larger problem ;problem section ;section exercises ;exercises fact ;fact worst ;worst case ;case keys ;keys hashed ;hashed cell ;cell hash ;hash table ;table fortunately ;fortunately appropriately ;appropriately chosen ;chosen hash ;hash table ;table size ;size good ;good hash ;hash function ;function situation ;situation rarely ;rarely hashing ;hashing scheme ;scheme collision ;collision resolution ;resolution mechanism ;mechanism principal ;principal versions ;versions hashing ;hashing called ;called chaining ;chaining closed ;closed hashing ;hashing called ;called addressing ;addressing hashing ;hashing chaining ;chaining hashing ;hashing keys ;keys stored ;stored linked ;linked lists ;lists attached ;attached cells ;cells hash ;hash table ;table keys ;keys hashed ;hashed cell ;cell words ;words money ;money parted ;parted hash ;hash function ;function simple ;simple function ;function strings ;strings mentioned ;mentioned positions ;positions word ;word letters ;letters alphabet ;alphabet compute ;compute sum ;sum remainder ;remainder division ;division table ;table key ;key word ;word hash ;hash mod ;mod key ;key word ;word installed ;installed ninth ;ninth cell ;cell mod ;mod final ;final result ;result process ;process figure ;figure collision ;collision keys ;keys mod ;mod dictionary ;dictionary implemented ;implemented table ;table linked ;linked lists ;lists simply ;simply applying ;applying key ;key procedure ;procedure creating ;creating table ;table illustrate ;illustrate key ;key kid ;kid hash ;hash table ;table figure ;figure compute ;compute hash ;hash function ;function key ;key kid ;kid attached ;attached cell ;cell linked ;linked key ;key collisions ;collisions case ;case traverse ;traverse linked ;linked comparing ;comparing string ;string kid ;kid string ;string unsuccessful ;unsuccessful general ;general efficiency ;efficiency searching ;searching depends ;depends lengths ;lengths linked ;linked lists ;lists dictionary ;dictionary table ;table sizes ;sizes quality ;quality keys ;keys money ;money parted ;parted hash ;hash addresses ;addresses money ;money parted ;parted figure ;figure hash ;hash table ;table construction ;construction chaining ;chaining hash ;hash function ;function hash ;hash function ;function distributes ;distributes keys ;keys cells ;cells hash ;hash table ;table evenly ;evenly keys ;keys ratio ;ratio called ;called factor ;factor hash ;hash table ;table plays ;plays crucial ;crucial role ;role efficiency ;efficiency hashing ;hashing average ;average pointers ;pointers chain ;chain links ;links inspected ;inspected successful ;successful searches ;searches unsuccessful ;unsuccessful searches ;searches turns ;turns standard ;standard assumptions ;assumptions searching ;searching randomly ;randomly selected ;selected element ;element hash ;hash function ;function distributing ;distributing keys ;keys uniformly ;uniformly table ;table cells ;cells results ;results natural ;natural identical ;identical searching ;searching sequentially ;sequentially linked ;linked gained ;gained hashing ;hashing reduction ;reduction average ;average size ;size factor ;factor size ;size hash ;hash table ;table factor ;factor small ;small imply ;imply lot ;lot lists ;lists inefficient ;inefficient space ;space large ;large longer ;longer linked ;linked lists ;lists longer ;longer times ;times factor ;factor amazingly ;amazingly efficient ;efficient scheme ;scheme makes ;makes key ;key average ;average price ;price comparisons ;comparisons true ;true addition ;addition comparisons ;comparisons spend ;spend computing ;computing hash ;hash function ;function key ;key constant ;constant operation ;operation independent ;independent remarkable ;remarkable efficiency ;efficiency result ;result method ;method ingenuity ;ingenuity expense ;expense extra ;extra space ;space dictionary ;dictionary operations ;operations insertion ;insertion deletion ;deletion identical ;identical searching ;searching insertions ;insertions problem ;problem section ;section exercises ;exercises modification ;modification deletion ;deletion performed ;performed searching ;searching key ;key deleted ;deleted removing ;removing efficiency ;efficiency operations ;operations identical ;identical searching ;searching average ;average case ;case keys ;keys equal ;equal hash ;hash table ;table size ;size closed ;closed hashing ;hashing addressing ;addressing closed ;closed hashing ;hashing keys ;keys stored ;stored hash ;hash table ;table linked ;linked lists ;lists implies ;implies table ;table size ;size large ;large keys ;keys strategies ;strategies employed ;employed collision ;collision resolution ;resolution simplest ;simplest called ;called linear ;linear probing ;probing checks ;checks cell ;cell collision ;collision occurs ;occurs cell ;cell key ;key installed ;installed cell ;cell occupied ;occupied availability ;availability cell ;cell successor ;successor checked ;checked hash ;hash table ;table reached ;reached wrapped ;wrapped beginning ;beginning table ;table treated ;treated circular ;circular array ;array method ;method illustrated ;illustrated figure ;figure word ;word hash ;hash function ;function illustrate ;illustrate chaining ;chaining key ;key computing ;computing hash ;hash function ;function table ;table construction ;construction cell ;cell unsuccessful ;unsuccessful cell ;cell occupant ;occupant equal ;equal matching ;matching key ;key cell ;cell manner ;manner encounter ;encounter matching ;matching key ;key successful ;successful cell ;cell unsuccessful ;unsuccessful word ;word lit ;lit table ;table figure ;figure lit ;lit mod ;mod cell ;cell immediately ;immediately kid ;kid mod ;mod kid ;kid parted ;parted declare ;declare unsuccessful ;unsuccessful insertion ;insertion operations ;operations straightforward ;straightforward version ;version hashing ;hashing deletion ;deletion simply ;simply delete ;delete key ;key state ;state hash ;hash table ;table figure ;figure unable ;unable key ;key afterward ;afterward computing ;computing algorithm ;algorithm location ;location unsuccessful ;unsuccessful result ;result simple ;simple solution ;solution keys ;keys money ;money parted ;parted hash ;hash addresses ;addresses money ;money parted ;parted money ;money figure ;figure hash ;hash table ;table construction ;construction linear ;linear probing ;probing lazy ;lazy deletion ;deletion previously ;previously occupied ;occupied locations ;locations special ;special symbol ;symbol distinguish ;distinguish locations ;locations occupied ;occupied mathematical ;mathematical analysis ;analysis linear ;linear probing ;probing difficult ;difficult problem ;problem chaining ;chaining simplified ;simplified versions ;versions results ;results state ;state average ;average times ;times algorithm ;algorithm access ;access hash ;hash table ;table factor ;factor successful ;successful unsuccessful ;unsuccessful searches ;searches accuracy ;accuracy approximations ;approximations increases ;increases larger ;larger sizes ;sizes hash ;hash table ;table numbers ;numbers surprisingly ;surprisingly small ;small densely ;densely populated ;populated tables ;tables large ;large percentage ;percentage values ;values hash ;hash table ;table closer ;closer performance ;performance linear ;linear prob ;prob ing ;ing deteriorates ;deteriorates phenomenon ;phenomenon called ;called clustering ;clustering cluster ;cluster linear ;linear probing ;probing sequence ;sequence contiguously ;contiguously occupied ;occupied cells ;cells wrapping ;wrapping final ;final state ;state hash ;hash table ;table figure ;figure clusters ;clusters clus ;clus ters ;ters bad ;bad news ;news hashing ;hashing make ;make dictionary ;dictionary operations ;operations efficient ;efficient clusters ;clusters larger ;larger probability ;probability element ;element attached ;attached cluster ;cluster increases ;increases addition ;addition large ;large clusters ;clusters probabil ;probabil ity ;ity clusters ;clusters coalesce ;coalesce key ;key insertion ;insertion causing ;causing clustering ;clustering collision ;collision resolution ;resolution strategies ;strategies suggested ;suggested alleviate ;alleviate problem ;problem important ;important hashing ;hashing scheme ;scheme hash ;hash function ;function determine ;determine fixed ;fixed increment ;increment probing ;probing sequence ;sequence collision ;collision location ;location mod ;mod location ;location table ;table probed ;probed sequence ;sequence incre ;incre ment ;ment table ;table size ;size prime ;prime common ;common divisor ;divisor condition ;condition satisfied ;satisfied automatically ;automatically prime ;prime functions ;functions recommended ;recommended literature ;literature mod ;mod small ;small tables ;tables mod ;mod larger ;larger problem ;problem solved ;solved young ;young graduate ;graduate student ;student mathematics ;mathematics named ;named donald ;donald knuth ;knuth important ;important scientists ;scientists multivolume ;multivolume treatise ;treatise art ;art programming ;programming knui ;knui knuii ;knuii knuiii ;knuiii knuiv ;knuiv remains ;remains comprehensive ;comprehensive influential ;influential algorithmics ;algorithmics published ;published mathematical ;mathematical analysis ;analysis hashing ;hashing proved ;proved difficult ;difficult partial ;partial results ;results considerable ;considerable practical ;practical experience ;experience method ;method good ;good hashing ;hashing functions ;functions primary ;primary secondary ;secondary hashing ;hashing perior ;perior linear ;linear probing ;probing performance ;performance deteriorates ;deteriorates table ;table natural ;natural solution ;solution situation ;situation rehashing ;rehashing current ;current table ;table scanned ;scanned keys ;keys relocated ;relocated larger ;larger table ;table worthwhile ;worthwhile main ;main properties ;properties hashing ;hashing balanced ;balanced trees ;trees principal ;principal competitor ;competitor implementing ;implementing dictionaries ;dictionaries asymptotic ;asymptotic efficiency ;efficiency hashing ;hashing searching ;searching insertion ;insertion deletion ;deletion implemented ;implemented average ;average worst ;worst case ;case balanced ;balanced trees ;trees average ;average efficiencies ;efficiencies log ;log average ;average worst ;worst cases ;cases ordering ;ordering preservation ;preservation balanced ;balanced trees ;trees hashing ;hashing assume ;assume existence ;existence key ;key ordering ;ordering makes ;makes hashing ;hashing suitable ;suitable applications ;applications iterate ;iterate keys ;keys der ;der require ;require range ;range queries ;queries counting ;counting keys ;keys lower ;lower upper ;upper bounds ;bounds discovery ;discovery ibm ;ibm researchers ;researchers hashing ;hashing important ;important applications ;applications standard ;standard technique ;technique stor ;stor ing ;ing symbol ;symbol table ;table symbols ;symbols generated ;generated compilation ;compilation hashing ;hashing handy ;handy applications ;applications checking ;checking positions ;positions generated ;generated chess ;chess playing ;playing sidered ;sidered modifications ;modifications proved ;proved storing ;storing large ;large dictionaries ;dictionaries disks ;disks variation ;variation hashing ;hashing called ;called extendible ;extendible hashing ;hashing disk ;disk access ;access expensive ;expensive compared ;compared probes ;probes performed ;performed main ;main mem ;mem ory ;ory preferable ;preferable make ;make probes ;probes disk ;disk accesses ;accesses location ;location computed ;computed hash ;hash function ;function extendible ;extendible hashing ;hashing disk ;disk bucket ;bucket hold ;hold keys ;keys key ;key bucket ;bucket identified ;identified keys ;keys read ;read main ;main memory ;memory searched ;searched key ;key section ;section discuss ;discuss trees ;trees principal ;principal alternative ;alternative storing ;storing large ;large dictionaries ;dictionaries exercises ;exercises input ;input hash ;hash function ;function mod ;mod construct ;construct hash ;hash table ;table largest ;largest key ;key comparisons ;comparisons successful ;successful table ;table average ;average key ;key comparisons ;comparisons successful ;successful table ;table input ;input hash ;hash function ;function mod ;mod construct ;construct closed ;closed hash ;hash table ;table largest ;largest key ;key comparisons ;comparisons successful ;successful table ;table average ;average key ;key comparisons ;comparisons successful ;successful table ;table good ;good idea ;idea hash ;hash function ;function letter ;letter natural ;natural language ;language word ;word probability ;probability keys ;keys hashed ;hashed cell ;cell hash ;hash table ;table size ;size hash ;hash function ;function distributes ;distributes keys ;keys evenly ;evenly cells ;cells table ;table birthday ;birthday paradox ;paradox birthday ;birthday paradox ;paradox asks ;asks people ;people room ;room chances ;chances birthday ;birthday month ;month day ;day unexpected ;unexpected problem ;problem implication ;implication hashing ;hashing result ;result questions ;questions chaining ;chaining version ;version hashing ;hashing insert ;insert keys ;keys knew ;knew keys ;keys dictionary ;dictionary distinct ;distinct dictionary ;dictionary operations ;operations benefit ;benefit modification ;modification keys ;keys linked ;linked sorted ;sorted dictio ;dictio nary ;nary operations ;operations benefit ;benefit modification ;modification advantage ;advantage keys ;keys stored ;stored entire ;entire table ;table sorted ;sorted hashing ;hashing elements ;elements distinct ;distinct efficiency ;efficiency application ;application efficiency ;efficiency brute ;brute algorithm ;algorithm section ;section presorting ;presorting based ;based algorithm ;algorithm section ;section table ;table average ;average case ;case entry ;entry worst ;worst case ;case entry ;entry efficiency ;efficiency classes ;classes implementations ;implementations adt ;adt dictionary ;dictionary unordered ;unordered ordered ;ordered binary ;binary balanced ;balanced array ;array tree ;tree hashing ;hashing insertion ;insertion deletion ;deletion discussed ;discussed hashing ;hashing context ;context techniques ;techniques based ;based space ;space offs ;offs takes ;takes advantage ;advantage general ;general strategy ;strategy write ;write hashing ;hashing problem ;problem natural ;natural language ;language text ;text generate ;generate distinct ;distinct words ;words occurrences ;occurrences word ;word text ;text insert ;insert counters ;counters pro ;pro gram ;gram empirical ;empirical efficiency ;efficiency hashing ;hashing theoretical ;theoretical results ;results figure ;figure parental ;parental node ;node tree ;tree trees ;trees idea ;idea extra ;extra space ;space facilitate ;facilitate faster ;faster access ;access data ;data set ;set partic ;partic ularly ;ularly important ;important data ;data set ;set large ;large records ;records stored ;stored disk ;disk principal ;principal device ;device organizing ;organizing data ;data sets ;sets index ;index information ;information location ;location records ;records key ;key values ;values data ;data sets ;sets structured ;structured records ;records opposed ;opposed unstruc ;unstruc tured ;tured data ;data text ;text images ;images video ;video important ;important index ;index organization ;organization tree ;tree introduced ;introduced bayer ;bayer mcgreight ;mcgreight bay ;bay extends ;extends idea ;idea tree ;tree section ;section permitting ;permitting single ;single key ;key node ;node tree ;tree version ;version data ;data records ;records keys ;keys stored ;stored leaves ;leaves increasing ;increasing keys ;keys parental ;parental nodes ;nodes indexing ;indexing specifically ;specifically parental ;parental node ;node ordered ;ordered keys ;keys assumed ;assumed sake ;sake simplicity ;simplicity distinct ;distinct keys ;keys interposed ;interposed pointers ;pointers node ;node children ;children keys ;keys subtree ;subtree smaller ;smaller keys ;keys subtree ;subtree greater ;greater equal ;equal smaller ;smaller equal ;equal smallest ;smallest key ;key subtree ;subtree keys ;keys greater ;greater equal ;equal smallest ;smallest key ;key figure ;figure addition ;addition tree ;tree structural ;structural properties ;properties root ;root leaf ;leaf children ;children node ;node root ;root leaves ;leaves children ;children keys ;keys tree ;tree perfectly ;perfectly balanced ;balanced leaves ;leaves node ;node depicted ;depicted figure ;figure called ;called node ;node nodes ;nodes classic ;classic binary ;binary tree ;tree nodes ;nodes tree ;tree introduced ;introduced section ;section comprises ;comprises nodes ;nodes figure ;figure tree ;tree figure ;figure searching ;searching tree ;tree similar ;similar searching ;searching binary ;binary tree ;tree starting ;starting root ;root chain ;chain pointers ;pointers leaf ;leaf key ;key keys ;keys leaf ;leaf keys ;keys stored ;stored sorted ;sorted parental ;parental nodes ;nodes leaves ;leaves binary ;binary keys ;keys node ;node large ;large make ;make worthwhile ;worthwhile key ;key comparisons ;comparisons concerned ;concerned typical ;typical application ;application data ;data structure ;structure storing ;storing large ;large data ;data disk ;disk nodes ;nodes tree ;tree correspond ;correspond disk ;disk pages ;pages needed ;needed access ;access disk ;disk page ;page typically ;typically orders ;orders magnitude ;magnitude larger ;larger needed ;needed keys ;keys fast ;fast memory ;memory disk ;disk accesses ;accesses principal ;principal indicator ;indicator efficiency ;efficiency similar ;similar data ;data structures ;structures nodes ;nodes tree ;tree access ;access key ;key equal ;equal height ;height tree ;tree estimate ;estimate height ;height smallest ;smallest keys ;keys tree ;tree positive ;positive height ;height root ;root tree ;tree key ;key nodes ;nodes keys ;keys total ;total minimum ;minimum keys ;keys nodes ;nodes children ;children nodes ;nodes total ;total minimum ;minimum keys ;keys general ;general nodes ;nodes keys ;keys finally ;finally leaf ;leaf nodes ;nodes key ;key tree ;tree nodes ;nodes height ;height inequality ;inequality series ;series standard ;standard simplifications ;simplifications problem ;problem section ;section exercises ;exercises inequality ;inequality reduces ;reduces yields ;yields upper ;upper bound ;bound height ;height tree ;tree nodes ;nodes log ;log inequality ;inequality immediately ;immediately implies ;implies searching ;searching tree ;tree log ;log operation ;operation important ;important ascertain ;ascertain efficiency ;efficiency class ;class actual ;actual disk ;disk accesses ;accesses implied ;implied formula ;formula table ;table values ;values estimates ;estimates records ;records typical ;typical values ;values tree ;tree upper ;upper bound ;bound mind ;mind table ;table entries ;entries upper ;upper estimates ;estimates disk ;disk accesses ;accesses actual ;actual applications ;applications rarely ;rarely exceeds ;exceeds tree ;tree root ;root nodes ;nodes stored ;stored fast ;fast memory ;memory minimize ;minimize disk ;disk accesses ;accesses operations ;operations insertion ;insertion deletion ;deletion straightforward ;straightforward ing ;ing log ;log outline ;outline insertion ;insertion algorithm ;algorithm deletion ;deletion algorithm ;algorithm references ;references aho ;aho cor ;cor straightforward ;straightforward algorithm ;algorithm inserting ;inserting tree ;tree similar ;similar algorithm ;algorithm insertion ;insertion tree ;tree outlined ;outlined section ;section apply ;apply procedure ;procedure key ;key leaf ;leaf room ;room leaf ;leaf position ;position keys ;keys sorted ;sorted room ;room leaf ;leaf split ;split half ;half sending ;sending half ;half records ;records node ;node smallest ;smallest key ;key node ;node pointer ;pointer inserted ;inserted leaf ;leaf parent ;parent immediately ;immediately key ;key pointer ;pointer leaf ;leaf recursive ;recursive procedure ;procedure percolate ;percolate tree ;tree root ;root created ;created halves ;halves root ;root keys ;keys split ;split children ;children root ;root figure ;figure shows ;shows result ;result inserting ;inserting tree ;tree figure ;figure restriction ;restriction leaves ;leaves items ;items aware ;aware algorithms ;algorithms implementing ;implementing inser ;inser tions ;tions tree ;tree possibility ;possibility recursive ;recursive node ;node splits ;splits split ;split nodes ;nodes encountered ;encountered searching ;searching leaf ;leaf possibility ;possibility node ;node splits ;splits moving ;moving key ;key node ;node sibling ;sibling inserting ;inserting tree ;tree figure ;figure moving ;moving smallest ;smallest key ;key leaf ;leaf sibling ;sibling keys ;keys replacing ;replacing key ;key parent ;parent smallest ;smallest figure ;figure tree ;tree obtained ;obtained inserting ;inserting tree ;tree figure ;figure child ;child modification ;modification space ;space expense ;expense slightly ;slightly complicated ;complicated algorithm ;algorithm tree ;tree indexing ;indexing large ;large considered ;considered tree ;tree varieties ;varieties types ;types trees ;trees binary ;binary trees ;trees avl ;avl trees ;trees btree ;btree constructed ;constructed successive ;successive insertions ;insertions data ;data records ;records initially ;initially tree ;tree considered ;considered tree ;tree keys ;keys reside ;reside leaves ;leaves upper ;upper levels ;levels organized ;organized tree ;tree comprising ;comprising index ;index entire ;entire structure ;structure called ;called fact ;fact tree ;tree exercises ;exercises examples ;examples index ;index real ;real life ;life applications ;applications involve ;involve computers ;computers prove ;prove equality ;equality derivation ;derivation upper ;upper bound ;bound height ;height tree ;tree derivation ;derivation inequality ;inequality minimum ;minimum tree ;tree guarantees ;guarantees disk ;disk accesses ;accesses searching ;searching records ;records exceed ;exceed assume ;assume root ;root page ;page stored ;stored main ;main memory ;memory draw ;draw tree ;tree obtained ;obtained inserting ;inserting tree ;tree figure ;figure assume ;assume leaf ;leaf items ;items outline ;outline algorithm ;algorithm finding ;finding largest ;largest key ;key tree ;tree modifica ;modifica tion ;tion insert ;insert operation ;operation leaf ;leaf key ;key encounters ;encounters node ;node keys ;keys node ;node split ;split nodes ;nodes sending ;sending middle ;middle key ;key node ;node parent ;parent node ;node root ;root middle ;middle key ;key created ;created construct ;construct tree ;tree inserting ;inserting keys ;keys initially ;initially tree ;tree principal ;principal advantage ;advantage insertion ;insertion procedure ;procedure compared ;compared trees ;trees section ;section disadvantage ;disadvantage write ;write implementing ;implementing key ;key insertion ;insertion algorithm ;algorithm tree ;tree write ;write visualization ;visualization key ;key insertion ;insertion algorithm ;algorithm tree ;tree summary ;summary space ;space offs ;offs algorithm ;algorithm design ;design issue ;issue theoreticians ;theoreticians practitioners ;practitioners computing ;computing algorithm ;algorithm design ;design technique ;technique trading ;trading space ;space prevalent ;prevalent trading ;trading space ;space input ;input enhancement ;enhancement principal ;principal varieties ;varieties trading ;trading space ;space algorithm ;algorithm design ;design idea ;idea preprocess ;preprocess problem ;problem input ;input additional ;additional information ;information obtained ;obtained accelerate ;accelerate solving ;solving problem ;problem afterward ;afterward sorting ;sorting distribution ;distribution counting ;counting important ;important algorithms ;algorithms string ;string matching ;matching examples ;examples algorithms ;algorithms based ;based technique ;technique distribution ;distribution counting ;counting special ;special method ;method sorting ;sorting lists ;lists elements ;elements small ;small set ;set values ;values horspool ;horspool algorithm ;algorithm string ;string matching ;matching considered ;considered simplified ;simplified version ;version boyer ;boyer moore ;moore algorithm ;algorithm algorithms ;algorithms based ;based ideas ;ideas input ;input enhancement ;enhancement left ;left comparisons ;comparisons pattern ;pattern characters ;characters algorithms ;algorithms bad ;bad symbol ;symbol shift ;shift table ;table boyer ;boyer moore ;moore table ;table called ;called good ;good suffix ;suffix shift ;shift table ;table prestructuring ;prestructuring technique ;technique exploits ;exploits space ;space offs ;offs extra ;extra space ;space facilitate ;facilitate faster ;faster flexible ;flexible access ;access data ;data hashing ;hashing trees ;trees important ;important examples ;examples prestructuring ;prestructuring hashing ;hashing efficient ;efficient approach ;approach implementing ;implementing dictionaries ;dictionaries based ;based idea ;idea mapping ;mapping keys ;keys dimensional ;dimensional table ;table size ;size limitations ;limitations table ;table make ;make collision ;collision resolution ;resolution mechanism ;mechanism principal ;principal varieties ;varieties hashing ;hashing chaining ;chaining keys ;keys stored ;stored linked ;linked lists ;lists hash ;hash table ;table closed ;closed hashing ;hashing addressing ;addressing keys ;keys stored ;stored table ;table enable ;enable searching ;searching insertion ;insertion deletion ;deletion average ;average tree ;tree balanced ;balanced tree ;tree generalizes ;generalizes idea ;idea tree ;tree allowing ;allowing multiple ;multiple keys ;keys node ;node principal ;principal application ;application called ;called tree ;tree keeping ;keeping index ;index information ;information data ;data stored ;stored disk ;disk choosing ;choosing tree ;tree appropriately ;appropriately implement ;implement operations ;operations searching ;searching insertion ;insertion deletion ;deletion disk ;disk accesses ;accesses extremely ;extremely large ;large files ;successful men ;men success ;success result ;result steady ;steady accretion ;accretion alexander ;alexander graham ;graham bell ;bell greedy ;greedy strategy ;strategy considered ;considered preceding ;preceding chapter ;chapter constructs ;constructs solution ;solution optimization ;optimization problem ;problem piece ;piece adding ;adding locally ;locally optimal ;optimal piece ;piece partially ;partially constructed ;constructed solution ;solution chapter ;chapter discuss ;discuss approach ;approach designing ;designing algorithms ;algorithms optimization ;optimization problems ;problems starts ;starts feasible ;feasible solution ;solution satisfies ;satisfies constraints ;constraints problem ;problem proceeds ;proceeds repeated ;repeated applications ;applications simple ;simple typically ;typically involves ;involves small ;small localized ;localized yielding ;yielding feasible ;feasible solution ;solution improved ;improved objective ;objective function ;function improves ;improves objective ;objective function ;function algorithm ;algorithm returns ;returns feasible ;feasible solution ;solution optimal ;optimal stops ;stops obstacles ;obstacles successful ;successful implementation ;implementation idea ;idea initial ;initial feasible ;feasible solution ;solution problems ;problems trivial ;trivial solution ;solution approximate ;approximate solution ;solution obtained ;obtained greedy ;greedy algorithm ;algorithm finding ;finding initial ;initial solution ;solution require ;require effort ;effort solving ;solving problem ;problem feasible ;feasible solution ;solution identified ;identified allowed ;allowed feasible ;feasible solution ;solution efficiently ;efficiently current ;current solution ;solution locally ;locally optimal ;optimal fundamental ;fundamental difficulty ;difficulty issue ;issue local ;local global ;global extremum ;extremum maximum ;maximum minimum ;minimum problem ;problem finding ;finding highest ;highest hilly ;hilly area ;area map ;map foggy ;foggy day ;day logical ;logical thing ;thing walking ;walking hill ;hill impossible ;impossible direction ;direction lead ;lead reached ;reached local ;local highest ;highest feasibility ;feasibility simple ;simple highest ;highest global ;global maximum ;maximum entire ;entire area ;area fortunately ;fortunately important ;important problems ;problems solved ;solved iterativeimprovement ;iterativeimprovement algorithms ;algorithms important ;important linear ;linear programming ;programming encountered ;encountered topic ;topic section ;section simplex ;simplex method ;method classic ;classic algorithm ;algorithm linear ;linear programming ;programming discovered ;discovered mathematician ;mathematician george ;george dantzig ;dantzig algorithm ;algorithm proved ;proved consequential ;consequential achievements ;achievements history ;history algorithmics ;algorithmics section ;section important ;important problem ;problem maximizing ;maximizing network ;network links ;links capacities ;capacities problem ;problem special ;special case ;case linear ;linear programming ;programming special ;special structure ;structure makes ;makes solve ;solve problem ;problem algorithms ;algorithms efficient ;efficient simplex ;simplex method ;method outline ;outline classic ;classic iterative ;iterative improvement ;improvement algorithm ;algorithm problem ;problem discovered ;discovered american ;american mathematicians ;mathematicians ford ;ford fulkerson ;fulkerson sections ;sections chapter ;chapter deal ;deal bipartite ;bipartite matching ;matching problem ;problem finding ;finding optimal ;optimal pairing ;pairing elements ;elements disjoint ;disjoint sets ;sets examples ;examples matching ;matching workers ;workers jobs ;jobs high ;high school ;school graduates ;graduates colleges ;colleges men ;men women ;women marriage ;marriage section ;section deals ;deals problem ;problem maximizing ;maximizing matched ;matched pairs ;pairs section ;section concerned ;concerned matching ;matching stability ;stability discuss ;discuss iterative ;iterative improvement ;improvement algorithms ;algorithms section ;section approximation ;approximation algorithms ;algorithms traveling ;traveling salesman ;salesman knap ;knap problems ;problems examples ;examples iterative ;iterative improvement ;improvement algorithms ;algorithms textbook ;textbook moret ;moret shapiro ;shapiro mor ;mor books ;books continuous ;continuous discrete ;discrete optimization ;optimization nem ;nem literature ;literature heuristic ;heuristic mic ;mic simplex ;simplex method ;method encountered ;encountered linear ;linear programming ;programming section ;section general ;general problem ;problem optimizing ;optimizing linear ;linear function ;function variables ;variables subject ;subject set ;set linear ;linear constraints ;constraints maximize ;maximize minimize ;minimize cnxn ;cnxn subject ;subject ainxn ;ainxn mentioned ;mentioned important ;important practical ;practical problems ;problems modeled ;modeled instances ;instances linear ;linear programming ;programming researchers ;researchers kantorovich ;kantorovich soviet ;soviet union ;union dutch ;dutch american ;american koopmans ;koopmans awarded ;awarded nobel ;nobel prize ;prize contributions ;contributions linear ;linear programming ;programming theory ;theory applications ;applications economics ;economics apparently ;apparently nobel ;nobel prize ;prize mathematics ;mathematics royal ;royal swedish ;swedish academy ;academy sciences ;sciences failed ;failed honor ;honor mathematician ;mathematician dantzig ;dantzig universally ;universally recognized ;recognized father ;father linear ;linear programming ;programming modern ;modern inventor ;inventor simplex ;simplex method ;method classic ;classic algorithm ;algorithm solving ;solving problems ;problems geometric ;geometric interpretation ;interpretation linear ;linear programming ;programming general ;general method ;method solving ;solving linear ;linear programming ;programming problems ;problems small ;small fundamental ;fundamental prop ;prop erties ;erties problems ;problems linear ;linear programming ;programming problem ;problem vari ;vari ables ;ables maximize ;maximize subject ;subject definition ;definition feasible ;feasible solution ;solution problem ;problem satisfies ;satisfies constraints ;constraints problem ;problem feasible ;feasible region ;region set ;set feasible ;feasible points ;points instructive ;instructive sketch ;sketch feasible ;feasible region ;region cartesian ;cartesian plane ;plane recall ;recall equation ;equation coefficients ;coefficients equal ;equal defines ;defines straight ;straight line ;line divides ;divides plane ;plane half ;half planes ;planes points ;points easy ;easy determine ;determine half ;half planes ;planes line ;line inequalities ;inequalities hold ;hold set ;set points ;points defined ;defined inequality ;inequality comprises ;comprises points ;points line ;line set ;set points ;points defined ;defined inequality ;inequality comprises ;comprises points ;points line ;line points ;points feasible ;feasible region ;region constraints ;constraints problem ;problem feasible ;feasible region ;region obtained ;obtained intersection ;intersection half ;half planes ;planes quadrant ;quadrant cartesian ;cartesian plane ;plane defined ;defined nonnegativity ;nonnegativity constraints ;constraints figure ;figure feasible ;feasible region ;region problem ;problem convex ;convex polygon ;polygon vertices ;vertices intersection ;intersection lines ;lines obtained ;obtained solving ;solving linear ;linear equations ;equations task ;task optimal ;optimal solution ;solution feasible ;feasible region ;region largest ;largest objective ;objective function ;function feasible ;feasible solutions ;solutions objective ;objective function ;function equals ;equals points ;points objective ;objective function ;function equal ;equal line ;line common ;common points ;points george ;george dantzig ;dantzig received ;received honors ;honors national ;national medal ;medal science ;science presented ;presented president ;president united ;united states ;states citation ;citation states ;states national ;national medal ;medal awarded ;awarded inventing ;inventing linear ;linear programming ;programming discovering ;discovering methods ;methods led ;led wide ;wide scale ;scale scientific ;scientific technical ;technical applications ;applications important ;important problems ;problems logistics ;logistics scheduling ;scheduling network ;network optimization ;optimization computers ;computers making ;making efficient ;efficient mathematical ;mathematical theory ;theory figure ;figure feasible ;feasible region ;region problem ;problem feasible ;feasible region ;region figure ;figure posed ;posed infinitely ;infinitely feasible ;feasible points ;points objective ;objective function ;function equal ;equal intersection ;intersection points ;points line ;line feasible ;feasible region ;region lines ;lines slope ;slope line ;line defined ;defined equation ;equation constant ;constant lines ;lines called ;called lines ;lines objective ;objective function ;function problem ;problem restated ;restated finding ;finding largest ;largest parameter ;parameter line ;line common ;common feasible ;feasible region ;region line ;line shifting ;shifting line ;line south ;south west ;west changing ;changing slope ;slope feasible ;feasible region ;region hits ;hits region ;region shifting ;shifting line ;line north ;north east ;east hits ;hits feasible ;feasible region ;region means ;means optimal ;optimal solution ;solution linear ;linear programming ;programming problem ;problem maximal ;maximal objective ;objective function ;function equal ;equal maximize ;maximize objective ;objective function ;function problem ;problem line ;line largest ;largest coincide ;coincide boundary ;boundary line ;line segment ;segment slope ;slope lines ;lines draw ;draw line ;line figure ;figure points ;points line ;line segment ;segment vertices ;vertices optimal ;optimal solutions ;solutions yielding ;yielding maximal ;maximal objective ;objective function ;function figure ;figure solving ;solving dimensional ;dimensional linear ;linear programming ;programming problem ;problem geometrically ;geometrically linear ;linear programming ;programming problem ;problem optimal ;optimal solution ;solution vertex ;vertex feasible ;feasible region ;region qualifications ;qualifications begin ;begin feasible ;feasible region ;region linear ;linear programming ;programming problem ;problem constraints ;constraints contradictory ;contradictory requirements ;requirements points ;points problem ;problem feasible ;feasible region ;region linear ;linear programming ;programming problems ;problems feasible ;feasible region ;region called ;called infeasible ;infeasible problems ;problems optimal ;optimal solutions ;solutions complication ;complication arise ;arise problem ;problem feasible ;feasible region ;region unbounded ;unbounded demonstrates ;demonstrates reverse ;reverse inequalities ;inequalities problem ;problem feasible ;feasible region ;region problem ;problem unbounded ;unbounded figure ;figure feasible ;feasible region ;region linear ;linear programming ;programming problem ;problem unbounded ;unbounded objective ;objective function ;function attain ;attain finite ;finite optimal ;optimal problem ;problem maximizing ;maximizing subject ;subject constraints ;constraints optimal ;optimal solution ;solution points ;points feasible ;feasible region ;region making ;making large ;large problems ;problems called ;called unbounded ;unbounded problem ;problem minimizing ;minimizing subject ;subject constraints ;constraints optimal ;optimal solution ;solution figure ;figure unbounded ;unbounded feasible ;feasible region ;region linear ;linear programming ;programming problem ;problem constraints ;constraints lines ;lines function ;function fortunately ;fortunately important ;important features ;features examples ;examples considered ;considered hold ;hold problems ;problems variables ;variables feasible ;feasible region ;region typical ;typical linear ;linear programming ;programming problem ;problem ways ;ways similar ;similar convex ;convex polygons ;polygons dimensional ;dimensional cartesian ;cartesian plane ;plane specifically ;specifically finite ;finite vertices ;vertices mathematicians ;mathematicians extreme ;extreme points ;points section ;section optimal ;optimal solution ;solution linear ;linear programming ;programming problem ;problem extreme ;extreme points ;points feasible ;feasible region ;region reiterate ;reiterate properties ;properties theorem ;theorem extreme ;extreme theorem ;theorem linear ;linear programming ;programming problem ;problem nonempty ;nonempty bounded ;bounded feasible ;feasible region ;region optimal ;optimal solution ;solution timal ;timal solution ;solution extreme ;extreme problem ;problem feasible ;feasible region ;region theorem ;theorem implies ;implies solve ;solve linear ;linear programming ;programming problem ;problem case ;case bounded ;bounded feasible ;feasible region ;region finite ;finite degenerate ;degenerate instances ;instances maximizing ;maximizing subject ;subject linear ;linear programming ;programming problem ;problem unbounded ;unbounded feasible ;feasible region ;region optimal ;optimal solution ;solution extreme ;extreme feasible ;feasible region ;region points ;points feasible ;feasible region ;region principle ;principle solve ;solve problem ;problem computing ;computing objective ;objective function ;function extreme ;extreme selecting ;selecting major ;major obstacles ;obstacles implementing ;implementing lies ;lies mechanism ;mechanism generating ;generating extreme ;extreme points ;points feasible ;feasible region ;region straightforward ;straightforward algebraic ;algebraic procedure ;procedure task ;task discovered ;discovered obstacle ;obstacle lies ;lies extreme ;extreme points ;points typical ;typical feasible ;feasible region ;region news ;news bad ;bad extreme ;extreme points ;points grow ;grow exponentially ;exponentially size ;size problem ;problem makes ;makes exhaustive ;exhaustive inspection ;inspection extreme ;extreme points ;points unrealistic ;unrealistic linear ;linear programming ;programming problems ;problems nontrivial ;nontrivial sizes ;sizes fortunately ;fortunately turns ;turns exists ;exists algorithm ;algorithm typically ;typically inspects ;inspects small ;small fraction ;fraction extreme ;extreme points ;points feasible ;feasible region ;region reaching ;reaching optimal ;optimal famous ;famous algorithm ;algorithm called ;called simplex ;simplex method ;method idea ;idea algorithm ;algorithm geometric ;geometric terms ;terms identifying ;identifying extreme ;extreme feasible ;feasible region ;region improved ;improved objective ;objective function ;function adjacent ;adjacent extreme ;extreme case ;case current ;current optimal ;optimal case ;case proceed ;proceed adjacent ;adjacent extreme ;extreme improved ;improved objective ;objective function ;function finite ;finite steps ;steps algorithm ;algorithm extreme ;extreme optimal ;optimal solution ;solution occurs ;occurs determine ;determine optimal ;optimal solution ;solution exists ;exists outline ;outline simplex ;simplex method ;method task ;task translate ;translate geometric ;geometric description ;description simplex ;simplex method ;method algorithmically ;algorithmically precise ;precise language ;language algebra ;algebra begin ;begin apply ;apply simplex ;simplex method ;method linear ;linear programming ;programming problem ;problem represented ;represented special ;special called ;called standard ;standard requirements ;requirements maximization ;maximization problem ;problem constraints ;constraints nonnegativity ;nonnegativity constraints ;constraints linear ;linear equations ;equations nonnegative ;nonnegative sides ;sides variables ;variables required ;required nonnegative ;nonnegative general ;general linear ;linear programming ;programming problem ;problem standard ;standard constraints ;constraints unknowns ;unknowns maximize ;maximize cnxn ;cnxn subject ;subject ainxn ;ainxn written ;written compact ;compact matrix ;matrix notations ;notations maximize ;maximize subject ;subject amn ;amn linear ;linear programming ;programming problem ;problem transformed ;transformed equivalent ;equivalent problem ;problem standard ;standard objective ;objective function ;function minimized ;minimized replaced ;replaced equivalent ;equivalent problem ;problem maximizing ;maximizing objective ;objective function ;function coefficients ;coefficients replaced ;replaced section ;section general ;general discussion ;discussion transformations ;transformations constraint ;constraint inequality ;inequality replaced ;replaced equivalent ;equivalent equation ;equation adding ;adding slack ;slack variable ;variable representing ;representing difference ;difference sides ;sides original ;original inequality ;inequality inequalities ;inequalities problem ;problem transformed ;transformed equations ;equations finally ;finally linear ;linear programming ;programming problems ;problems variables ;variables required ;required nonnegative ;nonnegative begin ;begin represent ;represent physical ;physical quantities ;quantities case ;case initial ;initial statement ;statement problem ;problem unconstrained ;unconstrained variable ;variable replaced ;replaced difference ;difference nonnegative ;nonnegative variables ;variables problem ;problem standard ;standard linear ;linear programming ;programming problem ;problem variables ;variables maximize ;maximize subject ;subject easy ;easy optimal ;optimal solution ;solution problem ;problem optimal ;optimal solution ;solution problem ;problem simply ;simply ignoring ;ignoring coordinates ;coordinates principal ;principal advantage ;advantage standard ;standard lies ;lies simple ;simple mechanism ;mechanism identifying ;identifying extreme ;extreme points ;points feasible ;feasible region ;region problem ;problem set ;set variables ;variables straint ;straint equations ;equations linear ;linear equations ;equations unknowns ;unknowns solve ;solve general ;general case ;case problem ;problem equations ;equations unknowns ;unknowns variables ;variables set ;set equations ;equations unknowns ;unknowns obtained ;obtained unique ;unique solution ;solution nondegenerate ;nondegenerate linear ;linear equations ;equations equal ;equal unknowns ;unknowns basic ;basic solution ;solution coordinates ;coordinates set ;set solving ;solving called ;called nonbasic ;nonbasic coordinates ;coordinates obtained ;obtained solving ;solving called ;called basic ;basic terminology ;terminology linear ;linear algebra ;algebra specifically ;specifically rewrite ;rewrite constraint ;constraint equations ;equations basis ;basis dimensional ;dimensional vector ;vector space ;space composed ;composed vectors ;vectors proportional ;proportional basis ;basis chosen ;chosen vector ;vector uniquely ;uniquely expressed ;expressed sum ;sum multiples ;multiples basis ;basis vectors ;vectors basic ;basic nonbasic ;nonbasic variables ;variables vectors ;vectors included ;included excluded ;excluded basis ;basis choice ;choice coordinates ;coordinates basic ;basic solution ;solution nonnegative ;nonnegative basic ;basic solution ;solution called ;called basic ;basic feasible ;feasible solution ;solution set ;set variables ;variables solve ;solve resulting ;resulting basic ;basic feasible ;feasible solution ;solution set ;set variables ;variables solve ;solve resulting ;resulting basic ;basic solution ;solution feasible ;feasible importance ;importance basic ;basic feasible ;feasible solutions ;solutions lies ;lies correspondence ;correspondence extreme ;extreme points ;points feasible ;feasible region ;region extreme ;extreme feasible ;feasible region ;region problem ;problem figure ;figure projection ;projection plane ;plane incidentally ;incidentally natural ;natural starting ;starting simplex ;simplex method ;method application ;application problem ;problem mentioned ;mentioned simplex ;simplex method ;method progresses ;progresses series ;series adjacent ;adjacent extreme ;extreme points ;points basic ;basic feasible ;feasible solutions ;solutions increasing ;increasing values ;values objective ;objective function ;function represented ;represented simplex ;simplex tableau ;tableau table ;table storing ;storing information ;information basic ;basic feasible ;feasible solution ;solution extreme ;extreme simplex ;simplex tableau ;tableau problem ;problem presented ;presented general ;general simplex ;simplex tableau ;tableau linear ;linear programming ;programming problem ;problem standard ;standard unknowns ;unknowns linear ;linear equality ;equality constraints ;constraints rows ;rows columns ;columns rows ;rows table ;table coefficients ;coefficients constraint ;constraint equation ;equation column ;column entry ;entry equation ;equation columns ;columns labeled ;labeled names ;names variables ;variables rows ;rows labeled ;labeled basic ;basic variables ;variables basic ;basic feasible ;feasible solution ;solution tableau ;tableau represents ;represents values ;values basic ;basic variables ;variables solution ;solution column ;column columns ;columns labeled ;labeled basic ;basic variables ;variables identity ;identity matrix ;matrix row ;row simplex ;simplex tableau ;tableau called ;called objective ;objective row ;row initialized ;initialized coefficients ;coefficients objective ;objective function ;function signs ;signs reversed ;reversed columns ;columns objective ;objective function ;function initial ;initial column ;column subsequent ;subsequent iterations ;iterations objective ;objective row ;row transformed ;transformed rows ;rows objective ;objective row ;row simplex ;simplex method ;method current ;current tableau ;tableau represents ;represents optimal ;optimal solution ;solution entries ;entries objective ;objective row ;row possibly ;possibly column ;column nonnegative ;nonnegative case ;case negative ;negative entries ;entries nonbasic ;nonbasic variable ;variable basic ;basic tableau ;tableau criterion ;criterion basic ;basic feasible ;feasible solution ;solution represented ;represented tableau ;tableau optimal ;optimal negative ;negative column ;column signals ;signals fact ;fact objective ;objective function ;function increasing ;increasing coordinate ;coordinate current ;current basic ;basic feasible ;feasible solution ;solution coefficient ;coefficient objective ;objective function ;function positive ;positive larger ;larger function ;function compensate ;compensate adjusting ;adjusting values ;values basic ;basic variables ;variables feasible ;feasible case ;case conditions ;conditions satisfied ;satisfied means ;means min ;min largest ;largest adjacent ;adjacent extreme ;extreme feasible ;feasible region ;region similarly ;similarly negative ;negative column ;column objective ;objective row ;row signals ;signals fact ;fact objective ;objective function ;function increasing ;increasing coordinate ;coordinate initial ;initial basic ;basic feasible ;feasible solution ;solution requires ;requires means ;means min ;min largest ;largest adjacent ;adjacent extreme ;extreme negative ;negative entries ;entries objective ;objective row ;row commonly ;commonly select ;select negative ;negative largest ;largest absolute ;absolute motivated ;motivated observation ;observation choice ;choice yields ;yields largest ;largest objective ;objective function ;function unit ;unit variable ;variable feasibility ;feasibility constraints ;constraints impose ;impose limits ;limits variables ;variables choice ;choice variable ;variable leads ;leads smaller ;smaller objective ;objective function ;function commonly ;commonly select ;select variable ;variable basic ;basic variable ;variable called ;called entering ;entering variable ;variable column ;column referred ;referred pivot ;pivot column ;column pivot ;pivot column ;column choose ;choose departing ;departing variable ;variable basic ;basic variable ;variable nonbasic ;nonbasic tableau ;tableau total ;total basic ;basic variables ;variables basic ;basic solution ;solution equal ;equal equality ;equality constraints ;constraints adjacent ;adjacent extreme ;extreme larger ;larger objective ;objective function ;function entering ;entering variable ;variable largest ;largest make ;make basic ;basic variables ;variables preserving ;preserving nonnegativity ;nonnegativity translate ;translate observation ;observation choosing ;choosing departing ;departing variable ;variable simplex ;simplex tableau ;tableau positive ;positive entry ;entry pivot ;pivot column ;column compute ;compute ratio ;ratio dividing ;dividing row ;row entry ;entry pivot ;pivot column ;column tableau ;tableau ratios ;ratios row ;row smallest ;smallest ratio ;ratio determines ;determines departing ;departing variable ;variable nonbasic ;nonbasic ties ;ties broken ;broken arbitrarily ;arbitrarily variable ;variable row ;row departing ;departing variable ;variable called ;called pivot ;pivot row ;row denote ;denote positive ;positive entries ;entries pivot ;pivot column ;column ratio ;ratio computed ;computed problem ;problem unbounded ;unbounded algorithm ;algorithm stops ;stops finally ;finally steps ;steps transform ;transform current ;current tableau ;tableau transformation ;transformation called ;called pivoting ;pivoting similar ;similar principal ;principal gauss ;gauss jordan ;jordan elimination ;elimination algorithm ;algorithm solving ;solving systems ;systems linear ;linear equations ;equations problem ;problem exercises ;exercises entries ;entries pivot ;pivot row ;row pivot ;pivot entry ;entry pivot ;pivot column ;column tableau ;tableau rows ;rows objective ;objective row ;row difference ;difference row ;row entry ;entry pivot ;pivot column ;column tableau ;tableau yields ;yields row ;row simplex ;simplex method ;method transforms ;transforms tableau ;tableau represents ;represents basic ;basic feasible ;feasible solution ;solution increased ;increased objective ;objective function ;function equal ;equal optimal ;optimal iteration ;iteration good ;good yields ;yields tableau ;tableau represents ;represents basic ;basic feasible ;feasible solution ;solution optimal ;optimal entries ;entries objective ;objective row ;row tableau ;tableau nonnegative ;nonnegative maximal ;maximal objective ;objective function ;function equal ;equal entry ;entry objective ;objective row ;row summarize ;summarize steps ;steps simplex ;simplex method ;method summary ;summary simplex ;simplex method ;method initialization ;initialization linear ;linear programming ;programming problem ;problem stan ;stan dard ;dard set ;set initial ;initial tableau ;tableau nonnegative ;nonnegative entries ;entries rightmost ;rightmost column ;column columns ;columns composing ;composing identity ;identity matrix ;matrix entries ;entries objective ;objective row ;row disregarded ;disregarded verifying ;verifying requirements ;requirements columns ;columns define ;define basic ;basic variables ;variables initial ;initial basic ;basic feasible ;feasible solution ;solution labels ;labels tableau ;tableau rows ;rows optimality ;optimality entries ;entries objective ;objective row ;row possibly ;possibly rightmost ;rightmost column ;column represents ;represents objective ;objective function ;function nonnegative ;nonnegative tableau ;tableau represents ;represents optimal ;optimal solution ;solution basic ;basic variables ;variables values ;values rightmost ;rightmost column ;column remaining ;remaining nonbasic ;nonbasic variables ;variables values ;values zeros ;zeros finding ;finding entering ;entering variable ;variable select ;select negative ;negative entry ;entry elements ;elements objective ;objective row ;row commonly ;commonly select ;select negative ;negative entry ;entry largest ;largest absolute ;absolute ties ;ties broken ;broken arbitrarily ;arbitrarily column ;column entering ;entering variable ;variable pivot ;pivot column ;column finding ;finding departing ;departing variable ;variable positive ;positive entry ;entry pivot ;pivot column ;column ratio ;ratio dividing ;dividing row ;row entry ;entry column ;column entry ;entry pivot ;pivot column ;column entries ;entries pivot ;pivot column ;column negative ;negative problem ;problem unbounded ;unbounded row ;row smallest ;smallest ratio ;ratio ties ;ties broken ;broken arbitrarily ;arbitrarily row ;row departing ;departing variable ;variable pivot ;pivot row ;row forming ;forming tableau ;tableau entries ;entries pivot ;pivot row ;row entry ;entry pivot ;pivot column ;column rows ;rows objective ;objective row ;row pivot ;pivot row ;row multiplied ;multiplied entry ;entry pivot ;pivot column ;column row ;row make ;make entries ;entries pivot ;pivot column ;column pivot ;pivot row ;row pivot ;pivot row ;row variable ;variable pivot ;pivot column ;column notes ;notes simplex ;simplex method ;method formal ;formal proofs ;proofs validity ;validity simplex ;simplex method ;method steps ;steps books ;books devoted ;devoted detailed ;detailed discussion ;discussion linear ;linear programming ;programming dan ;dan important ;important remarks ;remarks method ;method generally ;generally speaking ;speaking iteration ;iteration simplex ;simplex method ;method leads ;leads extreme ;extreme problem ;problem feasible ;feasible region ;region greater ;greater objective ;objective function ;function degenerate ;degenerate cases ;cases arise ;arise basic ;basic variables ;variables equal ;equal simplex ;simplex method ;method objective ;objective function ;function extreme ;extreme greater ;greater equal ;equal previous ;previous opens ;opens door ;door possibility ;possibility objective ;objective function ;function values ;values stall ;stall iterations ;iterations row ;row algorithm ;algorithm previously ;previously considered ;considered terminate ;terminate phenomenon ;phenomenon called ;called cycling ;cycling rarely ;rarely practice ;practice specific ;specific examples ;examples problems ;problems cycling ;cycling constructed ;constructed simple ;simple modification ;modification steps ;steps simplex ;simplex method ;method called ;called bland ;bland eliminates ;eliminates theoretical ;theoretical possibility ;possibility cycling ;cycling assuming ;assuming variables ;variables denoted ;denoted subscripted ;subscripted letter ;letter stated ;stated modified ;modified columns ;columns negative ;negative entry ;entry objective ;objective row ;row select ;select column ;column smallest ;smallest subscript ;subscript modified ;modified resolve ;resolve smallest ;smallest ratios ;ratios selecting ;selecting row ;row labeled ;labeled basic ;basic variable ;variable smallest ;smallest subscript ;subscript caveat ;caveat deals ;deals assumptions ;assumptions automat ;automat ically ;ically satisfied ;satisfied problem ;problem constraints ;constraints imposed ;imposed nonnegative ;nonnegative variables ;variables inequalities ;inequalities ainxn ;ainxn adding ;adding nonnegative ;nonnegative slack ;slack variable ;variable ith ;ith constraint ;constraint equality ;equality ainxn ;ainxn quirements ;quirements imposed ;imposed initial ;initial tableau ;tableau simplex ;simplex method ;method satisfied ;satisfied obvious ;obvious basic ;basic feasible ;feasible solution ;solution problem ;problem finding ;finding initial ;initial basic ;basic feasible ;feasible solution ;solution nontrivial ;nontrivial obstacle ;obstacle problems ;problems feasible ;feasible region ;region initial ;initial basic ;basic feasible ;feasible solution ;solution exists ;exists algorithmic ;algorithmic problems ;problems ways ;ways address ;address issues ;issues exten ;exten sion ;sion classic ;classic simplex ;simplex method ;method called ;called phase ;phase simplex ;simplex method ;method kol ;kol nutshell ;nutshell method ;method adds ;adds set ;set artificial ;artificial variables ;variables equality ;equality constraints ;constraints problem ;problem obvious ;obvious basic ;basic fea ;fea sible ;sible solution ;solution solves ;solves linear ;linear programming ;programming problem ;problem minimizing ;minimizing sum ;sum artificial ;artificial variables ;variables simplex ;simplex method ;method optimal ;optimal solution ;solution problem ;problem yields ;yields initial ;initial tableau ;tableau original ;original problem ;problem feasible ;feasible region ;region original ;original problem ;problem efficient ;efficient simplex ;simplex method ;method algorithm ;algorithm progresses ;progresses sequence ;sequence adjacent ;adjacent points ;points feasible ;feasible region ;region bad ;bad news ;news extreme ;extreme points ;points grow ;grow exponentially ;exponentially problem ;problem size ;size worst ;worst case ;case efficiency ;efficiency simplex ;simplex method ;method shown ;shown exponential ;exponential fortunately ;fortunately half ;half century ;century practical ;practical experience ;experience algorithm ;algorithm shown ;shown iterations ;iterations typical ;typical application ;application ranges ;ranges operations ;operations iteration ;iteration proportional ;proportional numbers ;numbers equality ;equality constraints ;constraints variables ;variables discovery ;discovery simplex ;simplex method ;method subject ;subject intensive ;intensive study ;study researchers ;researchers worked ;worked improvements ;improvements original ;original algorithm ;algorithm details ;details efficient ;efficient implementation ;implementation result ;result efforts ;efforts programs ;programs implementing ;implementing simplex ;simplex method ;method polished ;polished large ;large problems ;problems hundreds ;hundreds thousands ;thousands constraints ;constraints variables ;variables solved ;solved routine ;routine manner ;manner fact ;fact programs ;programs evolved ;evolved sophisticated ;sophisticated software ;software packages ;packages enable ;enable user ;user problem ;problem constraints ;constraints solution ;solution user ;user friendly ;friendly tools ;tools investigating ;investigating important ;important properties ;properties solution ;solution sensitivity ;sensitivity input ;input data ;data investigations ;investigations important ;important applications ;applications economics ;economics spectrum ;spectrum linear ;linear programming ;programming problems ;problems moderate ;moderate size ;size nowadays ;nowadays solved ;solved desktop ;desktop standard ;standard spreadsheet ;spreadsheet facility ;facility taking ;taking advantage ;advantage specialized ;specialized software ;software internet ;internet researchers ;researchers algorithms ;algorithms solving ;solving linear ;linear programming ;programming problems ;problems polynomial ;polynomial efficiency ;efficiency worst ;worst case ;case important ;important mile ;mile stone ;stone history ;history algorithms ;algorithms proof ;proof khachian ;khachian kha ;kha showing ;showing ellipsoid ;ellipsoid method ;method solve ;solve linear ;linear programming ;programming problem ;problem polynomial ;polynomial ellipsoid ;ellipsoid method ;method slower ;slower simplex ;simplex method ;method practice ;practice worst ;worst case ;case efficiency ;efficiency encouraged ;encouraged alternatives ;alternatives simplex ;simplex method ;method narendra ;narendra karmarkar ;karmarkar published ;published algorithm ;algorithm polynomial ;polynomial worst ;worst case ;case efficiency ;efficiency competitive ;competitive simplex ;simplex method ;method empirical ;empirical tests ;tests discuss ;discuss karmarkar ;karmarkar algorithm ;algorithm kar ;kar pointing ;pointing based ;based iterative ;iterative improvement ;improvement idea ;idea karmarkar ;karmarkar algorithm ;algorithm generates ;generates sequence ;sequence feasible ;feasible solutions ;solutions feasible ;feasible region ;region sequence ;sequence adjacent ;adjacent extreme ;extreme points ;points simplex ;simplex method ;method algorithms ;algorithms called ;called interior ;interior methods ;methods arb ;arb exercises ;exercises version ;version office ;office location ;location problem ;problem exercises ;exercises integers ;integers representing ;representing coordinates ;coordinates villages ;villages located ;located straight ;straight road ;road location ;location office ;office minimizes ;minimizes average ;average distance ;distance villages ;villages office ;office required ;required located ;located villages ;villages devise ;devise iterative ;iterative improvement ;improvement algorithm ;algorithm problem ;problem efficient ;efficient solve ;solve problem ;problem solve ;solve linear ;linear programming ;programming problems ;problems geometrically ;geometrically maximize ;maximize subject ;subject maximize ;maximize subject ;subject linear ;linear programming ;programming problem ;problem minimize ;minimize subject ;subject real ;real numbers ;numbers equal ;equal coefficient ;coefficient values ;values problem ;problem unique ;unique optimal ;optimal solution ;solution coefficient ;coefficient values ;values problem ;problem infinitely ;infinitely optimal ;optimal solutions ;solutions coefficient ;coefficient values ;values problem ;problem optimal ;optimal solution ;solution problem ;problem inequality ;inequality constraints ;constraints strict ;strict simplex ;simplex method ;method problem ;problem simplex ;simplex method ;method problem ;problem section ;section implementations ;implementations internet ;internet determine ;determine iterations ;iterations simplex ;simplex method ;method solve ;solve problem ;problem maximize ;maximize subject ;subject apply ;apply simplex ;simplex method ;method solve ;solve knapsack ;knapsack problem ;problem exam ;exam ple ;ple section ;section good ;good algorithm ;algorithm problem ;problem prove ;prove linear ;linear programming ;programming problem ;problem optimal ;optimal solutions ;solutions linear ;linear programming ;programming problem ;problem maximize ;maximize subject ;subject aij ;aij considered ;considered primal ;primal dual ;dual defined ;defined linear ;linear programming ;programming problem ;problem minimize ;minimize subject ;subject aij ;aij express ;express primal ;primal dual ;dual problems ;problems matrix ;matrix notations ;notations dual ;dual linear ;linear programming ;programming problem ;problem maximize ;maximize subject ;subject solve ;solve primal ;primal dual ;dual problems ;problems optimal ;optimal values ;values objective ;objective functions ;functions maximum ;maximum problem ;problem section ;section important ;important problem ;problem maximizing ;maximizing terial ;terial transportation ;transportation network ;network pipeline ;pipeline communication ;communication electrical ;electrical distribution ;distribution assume ;assume transportation ;transportation network ;network represented ;represented connected ;connected weighted ;weighted digraph ;digraph vertices ;vertices numbered ;numbered set ;set edges ;edges properties ;properties vertex ;vertex entering ;entering edges ;edges vertex ;vertex called ;called source ;source assumed ;assumed numbered ;numbered vertex ;vertex leaving ;leaving edges ;edges vertex ;vertex called ;called sink ;sink assumed ;assumed numbered ;numbered weight ;weight uij ;uij directed ;directed edge ;edge positive ;positive integer ;integer called ;called edge ;edge capacity ;capacity represents ;represents upper ;upper bound ;bound material ;material link ;link represented ;represented edge ;edge digraph ;digraph satisfying ;satisfying properties ;properties called ;called network ;network simply ;simply network ;network small ;small instance ;instance network ;network figure ;figure assumed ;assumed source ;source sink ;sink source ;source destination ;destination material ;material vertices ;vertices points ;points redirected ;redirected consuming ;consuming adding ;adding material ;material words ;words total ;total material ;material entering ;entering intermediate ;intermediate vertex ;vertex equal ;equal total ;total material ;material leaving ;leaving vertex ;vertex dition ;dition called ;called conservation ;conservation requirement ;requirement denote ;denote edge ;edge xij ;xij intermediate ;intermediate vertex ;vertex conservation ;conservation requirement ;requirement expressed ;expressed equality ;equality constraint ;constraint xji ;xji xij ;xij slightly ;slightly general ;general model ;model network ;network sources ;sources sinks ;sinks capacities ;capacities uij ;uij infinitely ;infinitely large ;large figure ;figure network ;network graph ;graph vertex ;vertex numbers ;numbers vertex ;vertex names ;names edge ;edge numbers ;numbers edge ;edge capacities ;capacities sums ;sums left ;left sides ;sides express ;express total ;total inflow ;inflow outflow ;outflow entering ;entering leaving ;leaving vertex ;vertex material ;material intermediate ;intermediate vertices ;vertices network ;network stands ;stands reason ;reason total ;total material ;material leaving ;leaving source ;source sink ;sink observation ;observation derived ;derived formally ;formally equalities ;equalities task ;task asked ;asked exercises ;exercises equality ;equality quantity ;quantity total ;total outflow ;outflow source ;source equivalently ;equivalently total ;total inflow ;inflow sink ;sink called ;called denote ;denote quantity ;quantity maximize ;maximize flows ;flows network ;network feasible ;feasible assignment ;assignment real ;real numbers ;numbers xij ;xij edges ;edges network ;network conservation ;conservation constraints ;constraints capacity ;capacity constraints ;constraints xij ;xij uij ;uij edge ;edge maximum ;maximum problem ;problem stated ;stated formally ;formally optimization ;optimization problem ;problem maximize ;maximize subject ;subject xji ;xji xij ;xij uij ;uij edge ;edge solve ;solve linear ;linear programming ;programming problem ;problem simplex ;simplex method ;method algorithm ;algorithm general ;general linear ;linear programming ;programming problems ;problems section ;section special ;special structure ;structure problem ;problem exploited ;exploited design ;design faster ;faster algorithms ;algorithms natural ;natural iterative ;iterative improvement ;improvement idea ;idea set ;set xij ;xij edge ;edge network ;network iteration ;iteration path ;path source ;source sink ;sink additional ;additional path ;path called ;called augmenting ;augmenting path ;path adjust ;adjust edges ;edges path ;path increased ;increased augmenting ;augmenting path ;path augmenting ;augmenting path ;path conclude ;conclude current ;current optimal ;optimal general ;general template ;template solving ;solving maximum ;maximum problem ;problem called ;called augmenting ;augmenting path ;path method ;method ford ;ford fulkerson ;fulkerson method ;method ford ;ford fulkerson ;fulkerson discovered ;discovered actual ;actual implementation ;implementation augmenting ;augmenting path ;path idea ;idea straightforward ;straightforward network ;network figure ;figure shown ;shown figure ;figure amounts ;amounts edge ;edge separated ;separated edge ;edge capacities ;capacities slashes ;slashes notation ;notation examples ;examples natural ;natural flowaugmenting ;flowaugmenting path ;path source ;source sink ;sink directed ;directed edges ;edges current ;current xij ;xij edge ;edge capacity ;capacity uij ;uij possibilities ;possibilities assume ;assume augmenting ;augmenting path ;path maximum ;maximum units ;units smallest ;smallest unused ;unused capacity ;capacity edges ;edges shown ;shown figure ;figure simpleminded ;simpleminded idea ;idea augmenting ;augmenting paths ;paths shown ;shown figure ;figure optimal ;optimal increased ;increased path ;path increasing ;increasing edges ;edges decreasing ;decreasing edge ;edge obtained ;obtained result ;result augmentation ;augmentation shown ;shown figure ;figure maximal ;maximal augmenting ;augmenting path ;path paths ;paths source ;source sink ;sink underlying ;underlying undirected ;undirected graph ;graph consecutive ;consecutive vertices ;vertices connected ;connected directed ;directed edge ;edge positive ;positive unused ;unused capacity ;capacity rij ;rij uij ;uij xij ;xij edge ;edge rij ;rij units ;units connected ;connected directed ;directed edge ;edge positive ;positive xji ;xji decrease ;decrease edge ;edge xji ;xji units ;units edges ;edges kind ;kind called ;called forward ;forward edges ;edges tail ;tail listed ;listed vertex ;vertex defining ;defining path ;path edges ;edges kind ;kind called ;called backward ;backward edges ;edges tail ;tail listed ;listed path ;path illustrate ;illustrate path ;path forward ;forward edges ;edges backward ;backward edge ;edge augmenting ;augmenting path ;path minimum ;minimum unused ;unused capacities ;capacities rij ;rij forward ;forward edges ;edges flows ;flows xji ;xji backward ;backward edges ;edges easy ;easy current ;current forward ;forward edge ;edge decrease ;decrease backward ;backward edge ;edge feasible ;feasible figure ;figure illustration ;illustration augmenting ;augmenting path ;path method ;method augmenting ;augmenting paths ;paths shown ;shown bold ;bold amounts ;amounts edge ;edge capacities ;capacities numbers ;numbers slash ;slash units ;units greater ;greater predecessor ;predecessor intermediate ;intermediate vertex ;vertex augmenting ;augmenting path ;path combinations ;combinations forward ;forward backward ;backward edges ;edges incident ;incident vertex ;vertex conservation ;conservation requirement ;requirement vertex ;vertex hold ;hold adjustments ;adjustments edge ;edge arrows ;arrows minimum ;minimum positive ;positive unused ;unused capacities ;capacities forward ;forward edges ;edges positive ;positive flows ;flows backward ;backward edges ;edges augmenting ;augmenting path ;path capacity ;capacity constraints ;constraints finally ;finally adding ;adding edge ;edge augmenting ;augmenting path ;path assumption ;assumption edge ;edge capacities ;capacities integers ;integers positive ;positive integer ;integer increases ;increases iteration ;iteration augmenting ;augmenting path ;path method ;method maximum ;maximum bounded ;bounded sum ;sum capacities ;capacities source ;source edges ;edges augmenting ;augmenting path ;path method ;method finite ;finite iterations ;iterations surprisingly ;surprisingly final ;final turns ;turns maximal ;maximal irrespective ;irrespective sequence ;sequence augmenting ;augmenting paths ;paths remarkable ;remarkable result ;result stems ;stems proof ;proof max ;max min ;min cut ;cut theorem ;theorem replicate ;replicate section ;section augmenting ;augmenting path ;path method ;method general ;general specific ;specific generating ;generating augmenting ;augmenting paths ;paths bad ;bad sequence ;sequence paths ;paths dramatic ;dramatic impact ;impact method ;method efficiency ;efficiency network ;network figure ;figure stands ;stands large ;large positive ;positive integer ;integer augment ;augment path ;path shown ;shown figure ;figure augmenting ;augmenting path ;path figure ;figure selecting ;selecting pair ;pair augmenting ;augmenting paths ;paths total ;total iterations ;iterations maximum ;maximum figure ;figure maximum ;maximum iterations ;iterations augmenting ;augmenting initial ;initial path ;path augmenting ;augmenting path ;path dramatic ;dramatic difference ;difference iterations ;iterations makes ;makes fortunately ;fortunately ways ;ways generate ;generate augmenting ;augmenting paths ;paths ficiently ;ficiently degradation ;degradation performance ;performance illustrated ;illustrated previous ;previous simplest ;simplest breadth ;breadth generate ;generate augment ;augment ing ;ing paths ;paths edges ;edges section ;section version ;version augmenting ;augmenting path ;path method ;method called ;called shortest ;shortest augmenting ;augmenting path ;path labeled ;labeled scanned ;scanned algorithm ;algorithm suggested ;suggested edmonds ;edmonds karp ;karp edm ;edm labeling ;labeling refers ;refers marking ;marking unlabeled ;unlabeled vertex ;vertex labels ;labels additional ;additional brought ;brought source ;source vertex ;vertex labeled ;labeled vertex ;vertex labeled ;labeled reached ;reached left ;left undefined ;undefined source ;source convenient ;convenient vertex ;vertex reached ;reached forward ;forward backward ;backward edge ;edge source ;source labeled ;labeled vertices ;vertices labels ;labels computed ;computed capacity ;capacity upper ;upper bounds ;bounds irrational ;irrational numbers ;numbers augmenting ;augmenting path ;path method ;method terminate ;terminate chv ;chv cleverly ;cleverly devised ;devised demonstrating ;demonstrating situation ;situation limitation ;limitation theoretical ;theoretical irrational ;irrational numbers ;numbers rational ;rational numbers ;numbers transformed ;transformed integers ;integers changing ;changing capacity ;capacity measurement ;measurement unit ;unit figure ;figure efficiency ;efficiency degradation ;degradation augmenting ;augmenting path ;path method ;method unlabeled ;unlabeled vertex ;vertex connected ;connected vertex ;vertex traversal ;traversal directed ;directed edge ;edge positive ;positive unused ;unused capacity ;capacity rij ;rij uij ;uij xij ;xij vertex ;vertex labeled ;labeled min ;min rij ;rij unlabeled ;unlabeled vertex ;vertex connected ;connected vertex ;vertex traversal ;traversal directed ;directed edge ;edge positive ;positive xji ;xji vertex ;vertex labeled ;labeled min ;min xji ;xji labeling ;labeling enhanced ;enhanced traversal ;traversal ends ;ends labeling ;labeling sink ;sink current ;current augmented ;augmented sink ;sink augmentation ;augmentation performed ;performed augmenting ;augmenting path ;path traced ;traced vertex ;vertex labels ;labels sink ;sink source ;source current ;current quantities ;quantities increased ;increased forward ;forward edges ;edges decreased ;decreased backward ;backward edges ;edges path ;path sink ;sink remains ;remains unlabeled ;unlabeled traversal ;traversal algorithm ;algorithm returns ;returns current ;current maximum ;maximum stops ;stops algorithm ;algorithm shortestaugmentingpath ;shortestaugmentingpath implements ;implements shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm input ;input network ;network single ;single source ;source single ;single sink ;sink positive ;positive integer ;integer capacities ;capacities uij ;uij edges ;edges output ;output maximum ;maximum assign ;assign xij ;xij edge ;edge network ;network source ;source dequeue ;dequeue edge ;edge forward ;forward edges ;edges unlabeled ;unlabeled rij ;rij uij ;uij xij ;xij rij ;rij min ;min rij ;rij enqueue ;enqueue edge ;edge backward ;backward edges ;edges unlabeled ;unlabeled xji ;xji min ;min xji ;xji enqueue ;enqueue sink ;sink labeled ;labeled augment ;augment augmenting ;augmenting path ;path sink ;sink backwards ;backwards labels ;labels source ;source reached ;reached vertex ;vertex xij ;xij vertex ;vertex xji ;xji vertex ;vertex erase ;erase vertex ;vertex labels ;labels source ;source reinitialize ;reinitialize source ;source current ;current maximum ;maximum application ;application algorithm ;algorithm network ;network figure ;figure illustrated ;illustrated figure ;figure optimality ;optimality final ;final obtained ;obtained augmenting ;augmenting path ;path method ;method stems ;stems theorem ;theorem relates ;relates network ;network flows ;flows network ;network cuts ;cuts cut ;cut induced ;induced partitioning ;partitioning vertices ;vertices network ;network subset ;subset source ;source complement ;complement sink ;sink set ;set edges ;edges tail ;tail denote ;denote cut ;cut simply ;simply network ;network figure ;figure cut ;cut stems ;stems property ;property edges ;edges cut ;cut deleted ;deleted network ;network directed ;directed path ;path source ;source sink ;sink cut ;cut directed ;directed path ;path source ;source sink ;sink vertex ;vertex path ;path belongs ;belongs set ;set vertices ;vertices augment ;augment sink ;sink path ;path augment ;augment sink ;sink path ;path augmenting ;augmenting path ;path sink ;sink unlabeled ;unlabeled current ;current maximal ;maximal figure ;figure illustration ;illustration shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm diagrams ;diagrams left ;left current ;current iteration ;iteration begins ;begins diagrams ;diagrams results ;results vertex ;vertex labeling ;labeling iteration ;iteration augmenting ;augmenting path ;path bold ;bold augmentation ;augmentation vertices ;vertices deleted ;deleted symbol ;symbol sink ;sink source ;source predecessor ;predecessor path ;path belongs ;belongs edge ;edge element ;element cut ;cut proves ;proves property ;property capacity ;capacity cut ;cut denoted ;denoted defined ;defined sum ;sum capacities ;capacities edges ;edges compose ;compose cut ;cut examples ;examples cuts ;cuts capacities ;capacities equal ;equal cuts ;cuts network ;network nonempty ;nonempty finite ;finite exists ;exists minimum ;minimum cut ;cut smallest ;smallest capacity ;capacity minimum ;minimum cut ;cut network ;network figure ;figure theorem ;theorem establishes ;establishes important ;important relationship ;relationship notions ;notions maximum ;maximum minimum ;minimum cut ;cut theorem ;theorem max ;max min ;min cut ;cut theorem ;theorem maximum ;maximum network ;network equal ;equal capacity ;capacity minimum ;minimum cut ;cut proof ;proof feasible ;feasible cut ;cut capacity ;capacity network ;network cut ;cut defined ;defined difference ;difference sum ;sum flows ;flows edges ;edges sum ;sum flows ;flows edges ;edges intuitively ;intuitively formally ;formally derived ;derived equations ;equations expressing ;expressing conservation ;conservation requirement ;requirement definition ;definition problem ;problem section ;section exercises ;exercises cut ;cut equal ;equal xij ;xij sum ;sum nonnegative ;nonnegative xij ;xij edge ;edge exceed ;exceed edge ;edge capacity ;capacity uij ;uij equality ;equality implies ;implies xij ;xij uij ;uij feasible ;feasible network ;network exceed ;exceed capacity ;capacity cut ;cut network ;network final ;final obtained ;obtained augmenting ;augmenting path ;path method ;method cut ;cut capacity ;capacity equal ;equal conclude ;conclude view ;view inequality ;inequality final ;final maximal ;maximal feasible ;feasible flows ;flows cut ;cut capacity ;capacity minimal ;minimal cuts ;cuts network ;network iii ;iii maximum ;maximum equal ;equal minimum ;minimum cut ;cut capacity ;capacity cut ;cut set ;set vertices ;vertices reached ;reached source ;source undirected ;undirected path ;path composed ;composed forward ;forward edges ;edges positive ;positive unused ;unused capacities ;capacities respect ;respect final ;final backward ;backward edges ;edges positive ;positive flows ;flows set ;set source ;source sink ;sink augmenting ;augmenting path ;path contradict ;contradict assumption ;assumption final ;final cut ;cut definition ;definition set ;set edge ;edge unused ;unused capacity ;capacity xij ;xij uij ;uij edge ;edge applying ;applying equality ;equality final ;final set ;set defined ;defined xij ;xij xji ;xji uij ;uij proves ;proves theorem ;theorem proof ;proof outlined ;outlined accomplishes ;accomplishes proving ;proving equality ;equality maximum ;maximum minimum ;minimum cut ;cut capacity ;capacity implies ;implies augmenting ;augmenting path ;path method ;method terminates ;terminates yields ;yields maximum ;maximum mini ;mini mum ;mum cut ;cut labeling ;labeling kind ;kind utilized ;utilized shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm minimum ;minimum cut ;cut formed ;formed edges ;edges labeled ;labeled unlabeled ;unlabeled ver ;ver tices ;tices iteration ;iteration method ;method finally ;finally proof ;proof implies ;implies edges ;edges flows ;flows equal ;equal edge ;edge capacities ;capacities edges ;edges unlabeled ;unlabeled vertices ;vertices labeled ;labeled flows ;flows network ;network figure ;figure algorithm ;algorithm finds ;finds cut ;cut minimum ;minimum capacity ;capacity edges ;edges required ;required edmonds ;edmonds karp ;karp proved ;proved paper ;paper edm ;edm aug ;aug menting ;menting paths ;paths needed ;needed shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm exceeds ;exceeds vertices ;vertices edges ;edges required ;required shortest ;shortest augmenting ;augmenting path ;path breadth ;breadth networks ;networks represented ;represented adjacency ;adjacency lists ;lists efficiency ;efficiency shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm efficient ;efficient algorithms ;algorithms maximum ;maximum problem ;problem monograph ;monograph ahu ;ahu chapters ;chapters books ;books cor ;cor kle ;kle implement ;implement augmenting ;augmenting path ;path idea ;idea efficient ;efficient manner ;manner based ;based concept ;concept preflows ;preflows preflow ;preflow satisfies ;satisfies capacity ;capacity constraints ;constraints conservation ;conservation requirement ;requirement vertex ;vertex allowed ;allowed entering ;entering vertex ;vertex leaving ;leaving preflow ;preflow algorithm ;algorithm moves ;moves excess ;excess sink ;sink conservation ;conservation requirement ;requirement reestablished ;reestablished intermediate ;intermediate vertices ;vertices network ;network faster ;faster gorithms ;gorithms kind ;kind worst ;worst case ;case efficiency ;efficiency preflow ;preflow algorithms ;algorithms fall ;fall iterative ;iterative improvement ;improvement paradigm ;paradigm generate ;generate sequence ;sequence improving ;improving solutions ;solutions constraints ;constraints problem ;problem conclude ;conclude section ;section pointing ;pointing initial ;initial studying ;studying network ;network flows ;flows caused ;caused transportation ;transportation applications ;applications model ;model proved ;proved areas ;areas discuss ;discuss section ;section exercises ;exercises maximum ;maximum algorithms ;algorithms require ;require processing ;processing edges ;edges directions ;directions convenient ;convenient modify ;modify adjacency ;adjacency matrix ;matrix representation ;representation network ;network directed ;directed edge ;edge vertex ;vertex capacity ;capacity uij ;uij element ;element ith ;ith row ;row column ;column set ;set uij ;uij element ;element row ;row ith ;ith column ;column set ;set uij ;uij edge ;edge vertices ;vertices elements ;elements set ;set outline ;outline simple ;simple algorithm ;algorithm identifying ;identifying source ;source sink ;sink network ;network presented ;presented matrix ;matrix efficiency ;efficiency apply ;apply shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm maximum ;maximum minimum ;minimum cut ;cut networks ;networks maximum ;maximum problem ;problem unique ;unique solution ;solution networks ;networks capacities ;capacities edges ;edges questions ;questions minimum ;minimum cut ;cut problem ;problem finding ;finding cut ;cut smallest ;smallest capacity ;capacity network ;network maximum ;maximum problem ;problem network ;network sources ;sources sinks ;sinks transformed ;transformed problem ;problem network ;network single ;single source ;source single ;single sink ;sink networks ;networks capacity ;capacity constraints ;constraints amounts ;amounts intermediate ;intermediate vertices ;vertices maximum ;maximum problem ;problem network ;network transformed ;transformed maximum ;maximum problem ;problem network ;network edge ;edge capacity ;capacity constraints ;constraints network ;network rooted ;rooted tree ;tree root ;root source ;source leaves ;leaves sinks ;sinks edges ;edges directed ;directed paths ;paths root ;root leaves ;leaves design ;design efficient ;efficient algorithm ;algorithm finding ;finding maximum ;maximum network ;network efficiency ;efficiency algorithm ;algorithm prove ;prove equality ;equality prove ;prove network ;network cut ;cut equal ;equal cut ;cut equality ;equality relationship ;relationship property ;property equality ;equality express ;express maximum ;maximum problem ;problem network ;network figure ;figure linear ;linear programming ;programming problem ;problem solve ;solve linear ;linear programming ;programming problem ;problem simplex ;simplex method ;method alternative ;alternative shortest ;shortest augmenting ;augmenting path ;path algorithm ;algorithm edmonds ;edmonds karp ;karp edm ;edm suggested ;suggested maximum ;maximum capacity ;capacity augmenting ;augmenting path ;path algorithm ;algorithm augmented ;augmented path ;path increases ;increases largest ;largest implement ;implement algorithms ;algorithms language ;language choice ;choice empirical ;empirical investigation ;investigation relative ;relative efficiency ;efficiency write ;write advanced ;advanced maximum ;maximum algorithm ;algorithm dinitz ;dinitz algorithm ;algorithm karzanov ;karzanov algorithm ;algorithm iii ;iii malhotra ;malhotra kamar ;kamar maheshwari ;maheshwari algorithm ;algorithm goldberg ;goldberg tarjan ;tarjan algorithm ;algorithm dining ;dining problem ;problem families ;families dinner ;dinner social ;social interaction ;interaction sit ;sit tables ;tables members ;members family ;family table ;table seating ;seating arrangement ;arrangement meets ;meets objective ;objective prove ;prove arrangement ;arrangement exists ;exists maximum ;maximum problem ;problem assume ;assume dinner ;dinner contingent ;contingent families ;families ith ;ith family ;family members ;members assume ;assume tables ;tables table ;table seating ;seating capacity ;capacity ahu ;ahu maximum ;maximum matching ;matching bipartite ;bipartite graphs ;graphs situations ;situations faced ;faced problem ;problem pairing ;pairing elements ;elements sets ;sets traditional ;traditional boys ;boys girls ;girls easily ;easily applications ;applications convenient ;convenient represent ;represent elements ;elements sets ;sets vertices ;vertices graph ;graph edges ;edges vertices ;vertices paired ;paired matching ;matching graph ;graph subset ;subset edges ;edges property ;property edges ;edges vertex ;vertex maximum ;maximum matching ;matching precisely ;precisely maximum ;maximum cardinality ;cardinality matching ;matching largest ;largest edges ;edges graph ;graph figure ;figure unique ;unique maximum ;maximum matching ;matching problem ;problem finding ;finding maximum ;maximum matching ;matching graph ;graph arbitrary ;arbitrary graph ;graph difficult ;difficult problem ;problem solved ;solved jack ;jack edmonds ;edmonds edm ;edm gal ;gal good ;good survey ;survey recent ;recent references ;references limit ;limit discussion ;discussion section ;section simpler ;simpler case ;case bipartite ;bipartite graphs ;graphs bipartite ;bipartite graph ;graph vertices ;vertices partitioned ;partitioned disjoint ;disjoint sets ;sets necessarily ;necessarily size ;size edge ;edge connects ;connects vertex ;vertex sets ;sets vertex ;vertex set ;set words ;words graph ;graph bipartite ;bipartite vertices ;vertices colored ;colored colors ;colors edge ;edge vertices ;vertices colored ;colored colors ;colors graphs ;graphs colorable ;colorable graph ;graph figure ;figure bipartite ;bipartite difficult ;difficult prove ;prove graph ;graph bipartite ;bipartite odd ;odd length ;length assume ;assume rest ;rest section ;section figure ;figure bipartite ;bipartite graph ;graph vertex ;vertex set ;set bipartite ;bipartite graph ;graph partitioned ;partitioned sets ;sets required ;required definition ;definition problem ;problem exercises ;exercises apply ;apply iterative ;iterative improvement ;improvement technique ;technique maximumcardinality ;maximumcardinality matching ;matching problem ;problem matching ;matching bipartite ;bipartite graph ;graph matching ;matching edges ;edges vertex ;vertex matched ;matched serves ;serves endpoint ;endpoint edge ;edge maximum ;maximum matching ;matching chance ;chance improving ;improving current ;current matching ;matching unmatched ;unmatched called ;called free ;free vertices ;vertices incident ;incident edge ;edge matching ;matching graph ;graph figure ;figure vertices ;vertices free ;free vertices ;vertices matched ;matched obvious ;obvious observation ;observation immediately ;immediately current ;current matching ;matching adding ;adding edge ;edge free ;free vertices ;vertices adding ;adding matching ;matching graph ;graph figure ;figure yields ;yields larger ;larger matching ;matching figure ;figure matching ;matching larger ;larger matching ;matching vertex ;vertex edge ;edge matching ;matching inclusion ;inclusion requires ;requires removal ;removal compensated ;compensated inclusion ;inclusion matching ;matching shown ;shown figure ;figure general ;general size ;size current ;current matching ;matching constructing ;constructing simple ;simple path ;path free ;free vertex ;vertex free ;free vertex ;vertex edges ;edges alternately ;alternately edge ;edge path ;path edge ;edge path ;path called ;called augmenting ;augmenting respect ;respect matching ;matching path ;path augmenting ;augmenting path ;path respect ;respect matching ;matching figure ;figure length ;length augmenting ;augmenting path ;path odd ;odd adding ;adding matching ;matching path ;path edges ;edges odd ;odd numbered ;numbered positions ;positions deleting ;deleting path ;path edges ;edges numbered ;numbered positions ;positions yields ;yields matching ;matching edge ;edge matching ;matching adjustment ;adjustment called ;called augmentation ;augmentation figure ;figure matching ;matching obtained ;obtained augmentation ;augmentation matching ;matching augmenting ;augmenting path ;path matching ;matching obtained ;obtained augmentation ;augmentation matching ;matching augmenting ;augmenting path ;path moving ;moving augmenting ;augmenting path ;path matching ;matching figure ;figure adding ;adding edges ;edges deleting ;deleting matching ;matching shown ;shown figure ;figure augmenting ;augmenting path ;path augmenting ;augmenting path ;path augmenting ;augmenting path ;path maximum ;maximum matching ;matching figure ;figure augmenting ;augmenting paths ;paths matching ;matching augmentations ;augmentations matching ;matching maximum ;maximum matching ;matching perfect ;perfect matching ;matching matches ;matches vertices ;vertices graph ;graph discuss ;discuss algorithm ;algorithm finding ;finding augmenting ;augmenting path ;path issue ;issue nonexistence ;nonexistence path ;path means ;means theorem ;theorem discovered ;discovered french ;french mathematician ;mathematician claude ;claude berge ;berge means ;means current ;current matching ;matching maximal ;maximal theorem ;theorem matching ;matching maximum ;maximum matching ;matching exists ;exists augmenting ;augmenting path ;path respect ;respect proof ;proof augmenting ;augmenting path ;path respect ;respect matching ;matching exists ;exists size ;size matching ;matching increased ;increased augmentation ;augmentation prove ;prove difficult ;difficult augmenting ;augmenting path ;path respect ;respect matching ;matching exists ;exists matching ;matching maximum ;maximum matching ;matching assume ;assume contrary ;contrary case ;case matching ;matching graph ;graph maximum ;maximum matching ;matching assumption ;assumption edges ;edges symmetric ;symmetric difference ;difference set ;set edges ;edges assumption ;assumption subgraph ;subgraph edges ;edges endpoints ;endpoints definition ;definition matching ;matching vertex ;vertex incident ;incident edge ;edge vertices ;vertices degree ;degree connected ;connected component ;component path ;path length ;length alternating ;alternating edges ;edges length ;length alternating ;alternating edges ;edges path ;path alternating ;alternating edges ;edges starts ;starts ends ;ends edge ;edge augmenting ;augmenting path ;path matching ;matching contradicts ;contradicts assumption ;assumption path ;path exists ;exists discussion ;discussion augmenting ;augmenting paths ;paths leads ;leads general ;general method ;method constructing ;constructing maximum ;maximum matching ;matching bipartite ;bipartite graph ;graph initial ;initial matching ;matching set ;set augmenting ;augmenting path ;path augment ;augment current ;current matching ;matching path ;path augmenting ;augmenting path ;path terminate ;terminate algorithm ;algorithm matching ;matching maximum ;maximum specific ;specific algorithm ;algorithm implementing ;implementing general ;general template ;template augmenting ;augmenting path ;path matching ;matching bfs ;bfs traversal ;traversal graph ;graph starts ;starts simultaneously ;simultaneously free ;free vertices ;vertices sets ;sets logical ;logical select ;select smaller ;smaller vertex ;vertex sets ;sets observation ;observation pseudocode ;pseudocode recall ;recall augmenting ;augmenting path ;path exists ;exists odd ;odd length ;length path ;path connects ;connects free ;free vertex ;vertex free ;free vertex ;vertex consists ;consists single ;single edge ;edge zigs ;zigs vertex ;vertex zags ;zags uniquely ;uniquely defined ;defined edge ;edge free ;free vertex ;vertex reached ;reached draw ;draw augmenting ;augmenting paths ;paths matchings ;matchings figure ;figure candidate ;candidate path ;path edges ;edges alternate ;alternate pattern ;pattern motivates ;motivates rules ;rules labeling ;labeling vertices ;vertices bfs ;bfs traversal ;traversal graph ;graph case ;case vertex ;vertex free ;free vertex ;vertex adjacent ;adjacent endpoint ;endpoint augmenting ;augmenting path ;path labeling ;labeling stops ;stops augmentation ;augmentation matching ;matching commences ;commences augmenting ;augmenting path ;path obtained ;obtained moving ;moving backward ;backward vertex ;vertex labels ;labels alternately ;alternately delete ;delete edges ;edges current ;current matching ;matching free ;free connected ;connected edge ;edge labeled ;labeled case ;case vertex ;vertex case ;case matched ;matched pseudocode ;pseudocode algorithm ;algorithm entirety ;entirety algorithm ;algorithm maximumbipartitematching ;maximumbipartitematching finds ;finds maximum ;maximum matching ;matching bipartite ;bipartite graph ;graph bfs ;bfs traversal ;traversal input ;input bipartite ;bipartite graph ;graph output ;output maximum ;maximum cardinality ;cardinality matching ;matching input ;input graph ;graph initialize ;initialize set ;set edges ;edges valid ;valid matching ;matching set ;set initialize ;initialize free ;free vertices ;vertices dequeue ;dequeue vertex ;vertex adjacent ;adjacent free ;free augment ;augment labeled ;labeled vertex ;vertex labels ;labels reinitialize ;reinitialize free ;free vertices ;vertices break ;break exit ;exit loop ;loop matched ;matched unlabeled ;unlabeled enqueue ;enqueue matched ;matched enqueue ;enqueue current ;current matching ;matching maximum ;maximum application ;application algorithm ;algorithm matching ;matching figure ;figure shown ;shown figure ;figure algorithm ;algorithm finds ;finds maximum ;maximum matching ;matching differs ;differs figure ;figure augment ;augment maximum ;maximum matching ;matching figure ;figure application ;application maximum ;maximum cardinality ;cardinality matching ;matching algorithm ;algorithm left ;left column ;column shows ;shows current ;current matching ;matching initialized ;initialized iteration ;iteration column ;column shows ;shows vertex ;vertex labeling ;labeling generated ;generated algorithm ;algorithm augmentation ;augmentation performed ;performed matching ;matching edges ;edges shown ;shown bold ;bold vertex ;vertex labels ;labels vertices ;vertices labeling ;labeling discovered ;discovered endpoint ;endpoint augmenting ;augmenting path ;path shaded ;shaded labeled ;labeled clarity ;clarity vertices ;vertices deleted ;deleted efficient ;efficient maximum ;maximum matching ;matching algorithm ;algorithm iteration ;iteration matches ;matches previously ;previously free ;free vertices ;vertices sets ;sets total ;total iterations ;iterations exceed ;exceed vertices ;vertices graph ;graph spent ;spent iteration ;iteration edges ;edges graph ;graph assumes ;assumes information ;information status ;status vertex ;vertex free ;free matched ;matched vertex ;vertex retrieved ;retrieved constant ;constant storing ;storing array ;array efficiency ;efficiency algorithm ;algorithm hopcroft ;hopcroft karp ;karp showed ;showed efficiency ;efficiency improved ;improved combining ;combining iterations ;iterations single ;single stage ;stage maximize ;maximize edges ;edges added ;added matching ;matching concerned ;concerned section ;section matching ;matching largest ;largest vertex ;vertex pairs ;pairs bipartite ;bipartite graph ;graph applications ;applications require ;require taking ;taking quality ;quality cost ;cost matching ;matching pairs ;pairs workers ;workers execute ;execute jobs ;jobs efficiencies ;efficiencies girls ;girls preferences ;preferences potential ;potential partners ;partners natural ;natural model ;model situations ;situations bipartite ;bipartite graphs ;graphs weights ;weights assigned ;assigned edges ;edges leads ;leads problem ;problem maxi ;maxi mizing ;mizing sum ;sum weights ;weights edges ;edges connecting ;connecting matched ;matched pairs ;pairs vertices ;vertices problem ;problem called ;called maximum ;maximum weight ;weight matching ;matching encountered ;encountered differ ;differ ent ;ent assignment ;assignment problem ;problem section ;section sophisti ;sophisti cated ;cated algorithms ;algorithms problem ;problem efficient ;efficient exhaustive ;exhaustive pap ;pap gal ;gal ahu ;ahu leave ;leave discussion ;discussion complexity ;complexity general ;general graphs ;graphs exercises ;exercises matching ;matching shown ;shown bold ;bold augmentation ;augmentation exists ;exists apply ;apply maximum ;maximum matching ;matching algorithm ;algorithm bipartite ;bipartite graph ;graph largest ;largest smallest ;smallest cardinality ;cardinality ing ;ing bipartite ;bipartite graph ;graph vertices ;vertices vertex ;vertex set ;set edges ;edges largest ;largest smallest ;smallest distinct ;distinct solutions ;solutions maximum ;maximum cardinality ;cardinality matching ;matching problem ;problem bipartite ;bipartite graph ;graph vertices ;vertices vertex ;vertex set ;set edges ;edges hall ;hall marriage ;marriage theorem ;theorem asserts ;asserts bipartite ;bipartite graph ;graph matching ;matching matches ;matches vertices ;vertices set ;set subset ;subset set ;set vertices ;vertices adjacent ;adjacent vertex ;vertex property ;property graph ;graph devise ;devise algorithm ;algorithm returns ;returns matching ;matching bipartite ;bipartite graph ;graph matches ;matches vertices ;vertices returns ;returns base ;base algorithm ;algorithm checking ;checking condition ;condition hall ;hall marriage ;marriage theorem ;theorem committees ;committees composed ;composed persons ;persons committee ;committee members ;members committee ;committee members ;members committee ;committee members ;members committee ;committee members ;members committee ;committee members ;members distinct ;distinct representatives ;representatives select ;select representative ;representative committee ;committee selected ;selected persons ;persons distinct ;distinct maximum ;maximum cardinality ;cardinality matching ;matching problem ;problem bipartite ;bipartite graph ;graph reduced ;reduced maximum ;maximum problem ;problem discussed ;discussed section ;section greedy ;greedy algorithm ;algorithm finding ;finding maximum ;maximum matching ;matching bipartite ;bipartite graph ;graph sort ;sort vertices ;vertices nondecreasing ;nondecreasing degrees ;degrees scan ;scan sorted ;sorted current ;current matching ;matching initially ;initially edge ;edge free ;free vertex ;vertex adjacent ;adjacent free ;free vertex ;vertex lowest ;lowest degree ;degree vertex ;vertex matched ;matched adjacent ;adjacent free ;free vertices ;vertices vertex ;vertex simply ;simply skipped ;skipped algorithm ;algorithm maximum ;maximum matching ;matching bipartite ;bipartite graph ;graph design ;design linear ;linear algorithm ;algorithm finding ;finding maximum ;maximum matching ;matching tree ;tree implement ;implement maximum ;maximum matching ;matching algorithm ;algorithm section ;section language ;language choice ;choice experiment ;experiment performance ;performance bipartite ;bipartite graphs ;graphs vertices ;vertices vertex ;vertex sets ;sets randomly ;randomly generated ;generated edges ;edges dense ;dense sparse ;sparse modes ;modes observed ;observed running ;running algorithm ;algorithm theoretical ;theoretical efficiency ;efficiency domino ;domino puzzle ;puzzle domino ;domino tile ;tile oriented ;oriented hori ;hori zontally ;zontally vertically ;vertically tiling ;tiling board ;board composed ;composed squares ;squares covering ;covering dominoes ;dominoes overlap ;overlap tile ;tile dominoes ;dominoes board ;board unit ;unit squares ;squares diagonally ;diagonally corners ;corners stable ;stable marriage ;marriage problem ;problem section ;section interesting ;interesting version ;version bipartite ;bipartite matching ;matching called ;called stable ;stable marriage ;marriage problem ;problem set ;set men ;men set ;set women ;women preference ;preference ordering ;ordering women ;women potential ;potential marriage ;marriage partners ;partners ties ;ties allowed ;allowed similarly ;similarly woman ;woman preference ;preference men ;men ties ;ties examples ;examples sets ;sets lists ;lists figures ;figures information ;information presented ;presented ranking ;ranking matrix ;matrix figure ;figure rows ;rows columns ;columns matrix ;matrix represent ;represent men ;men women ;women sets ;sets cell ;cell row ;row column ;column rankings ;rankings position ;position ranking ;ranking preference ;preference position ;position ranking ;ranking preference ;preference pair ;pair jim ;jim row ;row ann ;ann column ;column matrix ;matrix figure ;figure ann ;ann jim ;jim choice ;choice jim ;jim ann ;ann ways ;ways represent ;represent information ;information depends ;depends task ;task easier ;easier sets ;sets elements ;elements ranking ;ranking matrix ;matrix preference ;preference lists ;lists efficient ;efficient data ;data structure ;structure implementing ;implementing matching ;matching algorithm ;algorithm marriage ;marriage matching ;matching set ;set pairs ;pairs members ;members selected ;selected disjoint ;disjoint element ;element sets ;sets fashion ;fashion paired ;paired woman ;woman vice ;vice versa ;versa represent ;represent vertices ;vertices bipartite ;bipartite graph ;graph edges ;edges connecting ;connecting marriage ;marriage partners ;partners marriage ;marriage matching ;matching perfect ;perfect matching ;matching graph ;graph men ;men preferences ;preferences women ;women preferences ;preferences ranking ;ranking matrix ;matrix ann ;ann lea ;lea sue ;sue bob ;bob lea ;lea ann ;ann sue ;sue ann ;ann jim ;jim tom ;tom bob ;bob jim ;jim lea ;lea sue ;sue ann ;ann lea ;lea tom ;tom bob ;bob jim ;jim tom ;tom sue ;sue lea ;lea ann ;ann sue ;sue jim ;jim tom ;tom bob ;bob tom ;tom figure ;figure data ;data instance ;instance stable ;stable marriage ;marriage problem ;problem men ;men preference ;preference lists ;lists women ;women preference ;preference lists ;lists ranking ;ranking matrix ;matrix boxed ;boxed cells ;cells composing ;composing unstable ;unstable matching ;matching pair ;pair blocking ;blocking pair ;pair marriage ;marriage matching ;matching woman ;woman matched ;matched mates ;mates bob ;bob lea ;lea blocking ;blocking pair ;pair marriage ;marriage matching ;matching bob ;bob ann ;ann jim ;jim lea ;lea tom ;tom sue ;sue figure ;figure matched ;matched bob ;bob prefers ;prefers lea ;lea ann ;ann lea ;lea prefers ;prefers bob ;bob jim ;jim marriage ;marriage matching ;matching called ;called stable ;stable blocking ;blocking pair ;pair called ;called unstable ;unstable definition ;definition marriage ;marriage matching ;matching figure ;figure unstable ;unstable bob ;bob lea ;lea designated ;designated mates ;mates union ;union stable ;stable marriage ;marriage problem ;problem stable ;stable marriage ;marriage matching ;matching men ;men women ;women preferences ;preferences surprisingly ;surprisingly problem ;problem solution ;solution instance ;instance figure ;figure algorithm ;algorithm stable ;stable marriage ;marriage algorithm ;algorithm input ;input set ;set men ;men set ;set women ;women rankings ;rankings women ;women rankings ;rankings men ;men woman ;woman ties ;ties allowed ;allowed rankings ;rankings output ;output stable ;stable marriage ;marriage matching ;matching men ;men women ;women free ;free men ;men arbitrarily ;arbitrarily select ;select proposal ;proposal selected ;selected free ;free proposes ;proposes woman ;woman preference ;preference highest ;highest ranked ;ranked woman ;woman rejected ;rejected response ;response free ;free accepts ;accepts proposal ;proposal matched ;matched free ;free compares ;compares current ;current prefers ;prefers accepts ;accepts proposal ;proposal making ;making free ;free simply ;simply rejects ;rejects proposal ;proposal leaving ;leaving free ;free set ;set matched ;matched pairs ;pairs analyze ;analyze algorithm ;algorithm input ;input presented ;presented figure ;figure discuss ;discuss properties ;properties stable ;stable marriage ;marriage algorithm ;algorithm theorem ;theorem stable ;stable marriage ;marriage algorithm ;algorithm terminates ;terminates iterations ;iterations stable ;stable marriage ;marriage output ;output proof ;proof algorithm ;algorithm starts ;starts men ;men total ;total women ;women ranking ;ranking lists ;lists iteration ;iteration makes ;makes proposal ;proposal woman ;woman reduces ;reduces total ;total women ;women men ;men propose ;propose future ;future proposes ;proposes woman ;woman algorithm ;algorithm iterations ;iterations ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob proposed ;proposed lea ;lea bob ;bob jim ;jim tom ;tom jim ;jim lea ;lea accepted ;accepted tom ;tom ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob jim ;jim proposed ;proposed lea ;lea jim ;jim tom ;tom jim ;jim lea ;lea rejected ;rejected tom ;tom ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob jim ;jim proposed ;proposed sue ;sue jim ;jim tom ;tom jim ;jim sue ;sue accepted ;accepted tom ;tom ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob tom ;tom proposed ;proposed sue ;sue tom ;tom jim ;jim sue ;sue rejected ;rejected tom ;tom ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob tom ;tom proposed ;proposed lea ;lea tom ;tom jim ;jim lea ;lea replaced ;replaced bob ;bob tom ;tom ann ;ann lea ;lea sue ;sue free ;free men ;men bob ;bob proposed ;proposed ann ;ann bob ;bob jim ;jim ann ;ann accepted ;accepted tom ;tom figure ;figure application ;application stable ;stable marriage ;marriage algorithm ;algorithm accepted ;accepted proposal ;proposal boxed ;boxed cell ;cell rejected ;rejected proposal ;proposal shown ;shown underlined ;underlined cell ;cell prove ;prove final ;final matching ;matching stable ;stable marriage ;marriage matching ;matching algorithm ;algorithm stops ;stops men ;men matched ;matched women ;women thing ;thing proved ;proved stability ;stability contrary ;contrary unstable ;unstable exists ;exists blocking ;blocking pair ;pair woman ;woman unmatched ;unmatched persons ;persons matched ;matched proposes ;proposes woman ;woman ranking ;ranking decreasing ;decreasing preference ;preference precedes ;precedes proposed ;proposed iteration ;iteration refused ;refused proposal ;proposal accepted ;accepted replaced ;replaced subsequent ;subsequent iteration ;iteration higher ;higher ranked ;ranked higher ;higher preference ;preference rankings ;rankings men ;men matched ;matched woman ;woman iteration ;iteration algorithm ;algorithm contradicts ;contradicts assumption ;assumption prefers ;prefers final ;final stable ;stable marriage ;marriage algorithm ;algorithm notable ;notable shortcoming ;shortcoming gender ;gender neutral ;neutral presented ;presented favors ;favors men ;men preferences ;preferences women ;women preferences ;preferences easily ;easily tracing ;tracing algorithm ;algorithm instance ;instance problem ;problem woman ;woman algorithm ;algorithm yields ;yields stable ;stable matching ;matching woman ;woman matching ;matching men ;men matched ;matched choices ;choices case ;case women ;women prove ;prove algorithm ;algorithm yields ;yields stable ;stable matching ;matching optimal ;optimal assigns ;assigns highest ;highest ranked ;ranked woman ;woman stable ;stable marriage ;marriage gender ;gender bias ;bias reversed ;reversed eliminated ;eliminated reversing ;reversing roles ;roles played ;played men ;men women ;women algorithm ;algorithm making ;making women ;women propose ;propose men ;men proposals ;proposals important ;important corollary ;corollary fact ;fact stable ;stable marriage ;marriage algorithm ;algorithm yields ;yields gender ;gender optimal ;optimal stable ;stable matching ;matching easy ;easy prove ;prove woman ;woman optimal ;optimal matching ;matching unique ;unique set ;set participant ;participant preferences ;preferences algorithm ;algorithm output ;output free ;free men ;men women ;women make ;make proposals ;proposals data ;data structure ;structure stack ;stack representing ;representing set ;set impact ;impact algorithm ;algorithm outcome ;outcome notion ;notion stable ;stable matching ;matching algorithm ;algorithm discussed ;discussed introduced ;introduced gale ;gale shapley ;shapley paper ;paper titled ;titled college ;college admissions ;admissions stability ;stability marriage ;marriage gal ;gal applications ;applications mentioned ;mentioned title ;title important ;important stability ;stability matching ;matching property ;property desirable ;desirable variety ;variety applications ;applications years ;years united ;united states ;states matching ;matching medical ;medical school ;school graduates ;graduates hospitals ;hospitals residency ;residency training ;training history ;history application ;application depth ;depth discussion ;discussion stable ;stable marriage ;marriage problem ;problem extensions ;extensions monograph ;monograph gusfield ;gusfield irwing ;irwing gus ;gus exercises ;exercises instance ;instance stable ;stable marriage ;marriage problem ;problem ranking ;ranking matrix ;matrix marriage ;marriage matchings ;matchings stable ;stable unstable ;unstable matchings ;matchings blocking ;blocking pair ;pair stable ;stable matchings ;matchings optimal ;optimal woman ;woman optimal ;optimal assume ;assume greek ;greek roman ;roman letters ;letters denote ;denote men ;men women ;women design ;design simple ;simple algorithm ;algorithm checking ;checking marriage ;marriage matching ;matching stable ;stable determine ;determine efficiency ;efficiency class ;class stable ;stable marriage ;marriage matching ;matching instance ;instance problem ;problem apply ;apply ing ;ing stable ;stable marriage ;marriage algorithm ;algorithm men ;men proposing ;proposing version ;version women ;women proposing ;proposing version ;version stable ;stable marriage ;marriage matching ;matching instance ;instance defined ;defined ranking ;ranking matrix ;matrix determine ;determine efficiency ;efficiency class ;class stable ;stable marriage ;marriage algorithm ;algorithm worst ;worst case ;case prove ;prove optimal ;optimal stable ;stable marriage ;marriage set ;set unique ;unique true ;true woman ;woman optimal ;optimal stable ;stable marriage ;marriage matching ;matching prove ;prove optimal ;optimal stable ;stable matching ;matching woman ;woman worst ;worst partner ;partner stable ;stable marriage ;marriage matching ;matching implement ;implement stable ;stable marriage ;marriage algorithm ;algorithm section ;section running ;running run ;run experiment ;experiment ascertain ;ascertain average ;average case ;case efficiency ;efficiency write ;write college ;college admission ;admission problem ;problem residents ;residents hospitals ;hospitals assign ;assign ment ;ment generalizes ;generalizes stable ;stable marriage ;marriage problem ;problem college ;college proposals ;proposals applicant ;applicant problem ;problem roommates ;roommates related ;related difficult ;difficult stable ;stable marriage ;marriage problem ;problem boys ;boys pairs ;pairs roommates ;roommates set ;set pairings ;pairings called ;called stable ;stable boys ;boys roommates ;roommates actual ;actual roommates ;roommates gal ;gal instance ;instance problem ;problem stable ;stable pairing ;pairing summary ;summary iterative ;iterative improvement ;improvement technique ;technique involves ;involves finding ;finding solution ;solution timization ;timization problem ;problem generating ;generating sequence ;sequence feasible ;feasible solutions ;solutions improving ;improving values ;values problem ;problem objective ;objective function ;function subsequent ;subsequent lution ;lution sequence ;sequence typically ;typically involves ;involves small ;small localized ;localized previous ;previous feasible ;feasible solution ;solution improves ;improves objective ;objective function ;function algorithm ;algorithm returns ;returns feasible ;feasible solution ;solution optimal ;optimal stops ;stops important ;important problems ;problems solved ;solved iterative ;iterative improvement ;improvement algorithms ;algorithms linear ;linear programming ;programming maximizing ;maximizing network ;network matching ;matching maximum ;maximum vertices ;vertices graph ;graph simplex ;simplex method ;method classic ;classic method ;method solving ;solving general ;general linear ;linear programming ;programming problem ;problem works ;works generating ;generating sequence ;sequence adjacent ;adjacent extreme ;extreme points ;points problem ;problem feasible ;feasible region ;region improving ;improving values ;values objective ;objective function ;function maximum ;maximum problem ;problem asks ;asks maximum ;maximum network ;network weighted ;weighted directed ;directed graph ;graph source ;source sink ;sink ford ;ford fulkerson ;fulkerson method ;method classic ;classic template ;template solving ;solving maximumflow ;maximumflow problem ;problem iterative ;iterative improvement ;improvement approach ;approach shortestaugmenting ;shortestaugmenting path ;path method ;method implements ;implements idea ;idea labeling ;labeling network ;network vertices ;vertices breadth ;breadth manner ;manner ford ;ford fulkerson ;fulkerson method ;method finds ;finds minimum ;minimum cut ;cut network ;network maximum ;maximum cardinality ;cardinality matching ;matching largest ;largest subset ;subset edges ;edges graph ;graph edges ;edges vertex ;vertex bipartite ;bipartite graph ;graph sequence ;sequence augmentations ;augmentations previously ;previously obtained ;obtained matchings ;matchings stable ;stable marriage ;marriage problem ;problem stable ;stable matching ;matching elements ;elements nelement ;nelement sets ;sets based ;based matching ;matching preferences ;preferences problem ;problem solution ;solution gale ;gale shapley ;shapley algorithm ;plutarch sertorius ;sertorius teach ;teach soldiers ;soldiers perseverance ;perseverance wit ;wit brute ;brute horses ;horses brought ;brought set ;set men ;men tails ;tails men ;men burly ;burly hercules ;hercules tugged ;tugged purpose ;purpose sharp ;sharp weasel ;weasel faced ;faced tailor ;tailor plucked ;plucked hair ;hair roars ;roars laughter ;laughter left ;left tail ;tail cobham ;cobham brewer ;brewer dictionary ;dictionary phrase ;phrase fable ;fable decrease ;decrease conquer ;conquer technique ;technique based ;based exploiting ;exploiting relationship ;relationship solution ;solution instance ;instance problem ;problem solution ;solution smaller ;smaller instance ;instance relationship ;relationship established ;established exploited ;exploited leads ;leads naturally ;naturally recursive ;recursive implementa ;implementa tion ;tion examples ;examples chapter ;chapter ultimate ;ultimate implementation ;implementation nonrecursive ;nonrecursive variation ;variation implemented ;implemented iteratively ;iteratively starting ;starting solution ;solution smallest ;smallest instance ;instance problem ;problem called ;called incremental ;incremental approach ;approach major ;major variations ;variations decrease ;decrease conquer ;conquer decrease ;decrease constant ;constant decrease ;decrease constant ;constant factor ;factor variable ;variable size ;size decrease ;decrease constant ;constant variation ;variation size ;size instance ;instance reduced ;reduced constant ;constant iteration ;iteration algorithm ;algorithm typically ;typically constant ;constant equal ;equal figure ;figure constant ;constant size ;size reductions ;reductions occasionally ;occasionally exponentiation ;exponentiation problem ;problem computing ;computing nonnegative ;nonnegative integer ;integer relationship ;relationship solution ;solution instance ;instance size ;size instance ;instance size ;size obtained ;obtained obvious ;obvious formula ;formula function ;function computed ;computed recursive ;recursive definition ;definition problem ;problem size ;size subproblem ;subproblem size ;size solution ;solution subproblem ;subproblem solution ;solution original ;original problem ;problem figure ;figure decrease ;decrease conquer ;conquer technique ;technique multiplying ;multiplying times ;times brute ;brute algorithm ;algorithm thought ;thought process ;process interesting ;interesting examples ;examples decrease ;decrease algorithms ;algorithms sections ;sections decrease ;decrease constant ;constant factor ;factor technique ;technique suggests ;suggests reducing ;reducing problem ;problem instance ;instance constant ;constant factor ;factor iteration ;iteration algorithm ;algorithm applications ;applications constant ;constant factor ;factor equal ;equal algorithm ;algorithm decrease ;decrease half ;half idea ;idea illustrated ;illustrated figure ;figure revisit ;revisit exponentiation ;exponentiation problem ;problem instance ;instance size ;size compute ;compute instance ;instance half ;half size ;size compute ;compute obvious ;obvious relationship ;relationship instances ;instances integer ;integer exponents ;exponents odd ;odd compute ;compute valued ;valued exponents ;exponents result ;result summarize ;summarize formula ;formula problem ;problem size ;size subproblem ;subproblem size ;size solution ;solution subproblem ;subproblem solution ;solution original ;original problem ;problem figure ;figure decrease ;decrease half ;half conquer ;conquer technique ;technique positive ;positive odd ;odd compute ;compute recursively ;recursively formula ;formula algorithm ;algorithm efficiency ;efficiency multiplications ;multiplications algorithm ;algorithm log ;log iteration ;iteration size ;size reduced ;reduced half ;half expense ;expense multiplications ;multiplications examples ;examples decrease ;decrease constant ;constant factor ;factor algorithms ;algorithms section ;section exercises ;exercises algorithms ;algorithms efficient ;efficient examples ;examples kind ;kind finally ;finally variable ;variable size ;size decrease ;decrease variety ;variety decrease ;decrease conquer ;conquer size ;size reduction ;reduction pattern ;pattern varies ;varies iteration ;iteration algorithm ;algorithm euclid ;euclid algorithm ;algorithm computing ;computing greatest ;greatest common ;common divisor ;divisor good ;good situation ;situation recall ;recall algorithm ;algorithm based ;based formula ;formula gcd ;gcd mod ;mod argument ;argument smaller ;smaller left ;left decreases ;decreases constant ;constant factor ;factor examples ;examples algorithms ;algorithms section ;section insertion ;insertion sort ;sort section ;section application ;application decrease ;decrease technique ;technique sorting ;sorting array ;array technique ;technique idea ;idea assume ;assume smaller ;smaller problem ;problem sorting ;sorting array ;array solved ;solved sorted ;sorted array ;array size ;size advantage ;advantage solution ;solution smaller ;smaller problem ;problem solution ;solution original ;original problem ;problem taking ;taking account ;account element ;element position ;position sorted ;sorted elements ;elements insert ;insert scanning ;scanning sorted ;sorted subarray ;subarray left ;left element ;element smaller ;smaller equal ;equal encountered ;encountered insert ;insert element ;element resulting ;resulting algorithm ;algorithm called ;called straight ;straight insertion ;insertion sort ;sort simply ;simply insertion ;insertion sort ;sort insertion ;insertion sort ;sort based ;based recursive ;recursive idea ;idea efficient ;efficient implement ;implement algorithm ;algorithm iteratively ;iteratively shown ;shown figure ;figure starting ;starting ending ;ending inserted ;inserted elements ;elements array ;array sorted ;sorted selection ;selection sort ;sort generally ;generally final ;final positions ;positions pseudocode ;pseudocode algorithm ;algorithm insertionsort ;insertionsort sorts ;sorts array ;array insertion ;insertion sort ;sort input ;input array ;array orderable ;orderable elements ;elements output ;output array ;array sorted ;sorted nondecreasing ;nondecreasing smaller ;smaller equal ;equal greater ;greater figure ;figure iteration ;iteration insertion ;insertion sort ;sort inserted ;inserted proper ;proper position ;position preceding ;preceding elements ;elements previously ;previously sorted ;sorted figure ;figure sorting ;sorting insertion ;insertion sort ;sort vertical ;vertical separates ;separates sorted ;sorted array ;array remaining ;remaining elements ;elements element ;element inserted ;inserted bold ;bold operation ;operation algorithm ;algorithm illustrated ;illustrated figure ;figure basic ;basic operation ;operation algorithm ;algorithm key ;key comparison ;comparison faster ;faster actual ;actual implementation ;implementation germane ;germane algorithm ;algorithm implementation ;implementation sentinel ;sentinel problem ;problem section ;section exercises ;exercises eliminates ;eliminates altogether ;altogether key ;key comparisons ;comparisons algorithm ;algorithm depends ;depends nature ;nature input ;input worst ;worst case ;case executed ;executed largest ;largest times ;times fact ;fact ith ;ith iteration ;iteration insertion ;insertion sort ;sort elements ;elements preceding ;preceding elements ;elements input ;input albeit ;albeit sorted ;sorted worst ;worst case ;case input ;input words ;words worst ;worst case ;case input ;input array ;array strictly ;strictly decreasing ;decreasing values ;values key ;key comparisons ;comparisons input ;input cworst ;cworst worst ;worst case ;case insertion ;insertion sort ;sort makes ;makes comparisons ;comparisons selection ;selection sort ;sort section ;section case ;case comparison ;comparison executed ;executed iteration ;iteration outer ;outer loop ;loop input ;input array ;array sorted ;sorted nondecreasing ;nondecreasing makes ;makes sense ;sense case ;case algorithm ;algorithm problem ;problem solved ;solved case ;case discussion ;discussion quicksort ;quicksort chapter ;chapter sorted ;sorted arrays ;arrays key ;key comparisons ;comparisons cbest ;cbest good ;good performance ;performance case ;case sorted ;sorted arrays ;arrays convenient ;convenient inputs ;inputs sorted ;sorted files ;files arise ;arise variety ;variety applications ;applications insertion ;insertion sort ;sort preserves ;preserves excellent ;excellent performance ;performance inputs ;inputs rigorous ;rigorous analysis ;analysis algorithm ;algorithm average ;average case ;case efficiency ;efficiency based ;based investigating ;investigating element ;element pairs ;pairs problem ;problem section ;section exercises ;exercises shows ;shows randomly ;randomly ordered ;ordered arrays ;arrays insertion ;insertion sort ;sort makes ;makes average ;average half ;half comparisons ;comparisons decreasing ;decreasing arrays ;arrays cavg ;cavg fast ;fast average ;average case ;case performance ;performance coupled ;coupled excellent ;excellent efficiency ;efficiency sorted ;sorted arrays ;arrays makes ;makes insertion ;insertion sort ;sort stand ;stand principal ;principal petitors ;petitors elementary ;elementary sorting ;sorting algorithms ;algorithms selection ;selection sort ;sort addition ;addition extension ;extension named ;named shellsort ;shellsort inventor ;inventor shell ;shell algorithm ;algorithm sorting ;sorting moderately ;moderately large ;large files ;files problem ;problem section ;section exercises ;exercises ferrying ;ferrying soldiers ;soldiers detachment ;detachment soldiers ;soldiers wide ;wide deep ;deep river ;river bridge ;bridge sight ;sight year ;year boys ;boys playing ;playing rowboat ;rowboat shore ;shore boat ;boat tiny ;tiny hold ;hold boys ;boys soldier ;soldier soldiers ;soldiers river ;river leave ;leave boys ;boys joint ;joint possession ;possession boat ;boat times ;times boat ;boat shore ;shore alternating ;alternating glasses ;glasses standing ;standing row ;row filled ;filled soda ;soda drink ;drink remaining ;remaining glasses ;glasses make ;make glasses ;glasses alternate ;alternate filled ;filled pattern ;pattern minimum ;minimum glass ;glass moves ;moves gar ;gar solve ;solve problem ;problem glasses ;glasses drink ;drink initially ;initially random ;random marking ;marking cells ;cells design ;design algorithm ;algorithm task ;task cells ;cells infinite ;infinite sheet ;sheet graph ;graph paper ;paper marked ;marked cell ;cell odd ;odd marked ;marked neighbors ;neighbors cells ;cells considered ;considered neighbors ;neighbors horizontally ;horizontally vertically ;vertically diagonally ;diagonally marked ;marked cells ;cells contiguous ;contiguous region ;region path ;path pair ;pair marked ;marked cells ;cells sequence ;sequence marked ;marked neighbors ;neighbors kor ;kor design ;design decrease ;decrease algorithm ;algorithm generating ;generating power ;power set ;set elements ;elements power ;power set ;set subsets ;subsets set ;set algorithm ;algorithm connectivity ;connectivity graph ;graph defined ;defined adjacency ;adjacency matrix ;matrix algorithm ;algorithm connected ;connected input ;input adjacency ;adjacency matrix ;matrix undirected ;undirected graph ;graph output ;output true ;true connected ;connected false ;false vertex ;vertex graph ;graph connected ;connected definition ;definition connected ;connected algorithm ;algorithm correctly ;correctly undirected ;undirected graph ;graph vertices ;vertices algorithm ;algorithm efficiency ;efficiency class ;class worst ;worst case ;case team ;team ordering ;ordering results ;results completed ;completed robin ;robin tournament ;tournament teams ;teams played ;played game ;game ended ;ended victory ;victory teams ;teams design ;design algorithm ;algorithm lists ;lists teams ;teams sequence ;sequence team ;team lose ;lose game ;game team ;team listed ;listed immediately ;immediately efficiency ;efficiency class ;class algorithm ;algorithm apply ;apply insertion ;insertion sort ;sort alphabetical ;alphabetical sentinel ;sentinel element ;element array ;array sorted ;sorted checking ;checking bound ;bound condition ;condition iteration ;iteration loop ;loop insertion ;insertion sort ;sort sentinel ;sentinel version ;version efficiency ;efficiency class ;class original ;original version ;version implement ;implement insertion ;insertion sort ;sort sorting ;sorting linked ;linked lists ;lists efficiency ;efficiency array ;array version ;version text ;text implementation ;implementation insertion ;insertion sort ;sort ver ;ver sion ;sion algorithm ;algorithm insertsort ;insertsort swap ;swap efficiency ;efficiency algorithm ;algorithm compared ;compared version ;version section ;section array ;array sortable ;sortable elements ;elements simplicity ;simplicity assume ;assume elements ;elements distinct ;distinct pair ;pair called ;called inversion ;inversion arrays ;arrays size ;size largest ;largest inversions ;inversions questions ;questions smallest ;smallest inversions ;inversions average ;average case ;case key ;key comparisons ;comparisons insertion ;insertion sort ;sort formula ;formula cavg ;cavg shellsort ;shellsort accurately ;accurately shell ;shell sort ;sort important ;important sorting ;sorting algorithm ;algorithm works ;works applying ;applying insertion ;insertion sort ;sort interleaving ;interleaving sublists ;sublists formed ;formed stepping ;stepping increment ;increment predefined ;predefined decreasing ;decreasing sequence ;sequence sizes ;sizes algorithm ;algorithm works ;works sequence ;sequence sequences ;sequences yield ;yield efficiency ;efficiency sequence ;sequence reverse ;reverse purpose ;purpose apply ;apply shellsort ;shellsort stable ;stable sorting ;sorting algorithm ;algorithm implement ;implement shellsort ;shellsort straight ;straight insertion ;insertion sort ;sort selection ;selection sort ;sort language ;language choice ;choice performance ;performance random ;random arrays ;arrays sizes ;sizes increasing ;increasing decreasing ;decreasing arrays ;arrays sizes ;sizes topological ;topological sorting ;sorting section ;section discuss ;discuss important ;important problem ;problem directed ;directed graphs ;graphs variety ;variety applications ;applications involving ;involving prerequisite ;prerequisite restricted ;restricted tasks ;tasks pose ;pose problem ;problem review ;review basic ;basic facts ;facts directed ;directed graphs ;graphs directed ;directed graph ;graph digraph ;digraph short ;short graph ;graph directions ;directions edges ;edges figure ;figure adjacency ;adjacency matrix ;matrix adjacency ;adjacency lists ;lists principal ;principal means ;means representing ;representing digraph ;digraph notable ;notable differences ;differences undirected ;undirected directed ;directed graphs ;graphs representing ;representing adjacency ;adjacency matrix ;matrix directed ;directed graph ;graph symmetric ;symmetric edge ;edge directed ;directed graph ;graph nodes ;nodes digraph ;digraph adjacency ;adjacency lists ;lists figure ;figure digraph ;digraph dfs ;dfs forest ;forest digraph ;digraph dfs ;dfs traversal ;traversal started ;started depth ;depth breadth ;breadth principal ;principal traversal ;traversal algorithms ;algorithms traversing ;traversing digraphs ;digraphs structure ;structure forests ;forests complex ;complex undirected ;undirected graphs ;graphs simple ;simple figure ;figure depth ;depth forest ;forest figure ;figure exhibits ;exhibits types ;types edges ;edges dfs ;dfs forest ;forest directed ;directed graph ;graph tree ;tree edges ;edges vertices ;vertices ancestors ;ancestors forward ;forward edges ;edges vertices ;vertices descendants ;descendants tree ;tree children ;children edges ;edges aforementioned ;aforementioned types ;types edge ;edge dfs ;dfs forest ;forest directed ;directed graph ;graph vertex ;vertex parent ;parent case ;case presence ;presence edge ;edge digraph ;digraph directed ;directed digraph ;digraph sequence ;sequence vertices ;vertices starts ;starts ends ;ends vertex ;vertex connected ;connected predecessor ;predecessor edge ;edge directed ;directed predecessor ;predecessor successor ;successor directed ;directed digraph ;digraph figure ;figure conversely ;conversely dfs ;dfs forest ;forest digraph ;digraph edges ;edges digraph ;digraph dag ;dag acronym ;acronym directed ;directed acyclic ;acyclic graph ;graph edge ;edge directions ;directions lead ;lead questions ;questions digraphs ;digraphs meaningless ;meaningless trivial ;trivial undirected ;undirected graphs ;graphs section ;section discuss ;discuss motivating ;motivating set ;set required ;required courses ;courses student ;student degree ;degree courses ;courses prerequisites ;prerequisites met ;met prerequisites ;prerequisites requires ;requires student ;student term ;term student ;student courses ;courses situation ;situation modeled ;modeled digraph ;digraph vertices ;vertices represent ;represent courses ;courses directed ;directed edges ;edges prerequisite ;prerequisite requirements ;requirements figure ;figure terms ;terms digraph ;digraph vertices ;vertices edge ;edge graph ;graph vertex ;vertex edge ;edge starts ;starts listed ;listed vertex ;vertex edge ;edge ends ;ends ordering ;ordering digraph ;digraph vertices ;vertices problem ;problem called ;called topological ;topological sorting ;sorting posed ;posed figure ;figure digraph ;digraph representing ;representing prerequisite ;prerequisite structure ;structure courses ;courses popping ;popping topologically ;topologically sorted ;sorted figure ;figure digraph ;digraph topological ;topological sorting ;sorting problem ;problem solved ;solved dfs ;dfs traversal ;traversal stack ;stack subscript ;subscript numbers ;numbers indicating ;indicating popping ;popping solution ;solution problem ;problem arbitrary ;arbitrary digraph ;digraph easy ;easy problem ;problem solution ;solution digraph ;digraph directed ;directed topological ;topological sorting ;sorting digraph ;digraph dag ;dag turns ;turns dag ;dag sufficient ;sufficient topological ;topological sorting ;sorting digraph ;digraph directed ;directed cycles ;cycles topological ;topological sorting ;sorting problem ;problem solution ;solution efficient ;efficient algorithms ;algorithms verify ;verify digraph ;digraph dag ;dag ordering ;ordering vertices ;vertices solves ;solves topological ;topological sorting ;sorting problem ;problem algorithm ;algorithm simple ;simple application ;application depth ;depth dfs ;dfs traversal ;traversal vertices ;vertices dead ;dead ends ;ends popped ;popped traversal ;traversal stack ;stack reversing ;reversing yields ;yields solution ;solution topological ;topological sorting ;sorting problem ;problem provided ;provided edge ;edge encountered ;encountered traversal ;traversal edge ;edge encountered ;encountered digraph ;digraph dag ;dag topological ;topological sorting ;sorting vertices ;vertices impossible ;impossible algorithm ;algorithm vertex ;vertex popped ;popped dfs ;dfs stack ;stack vertex ;vertex edge ;edge vertices ;vertices popped ;popped edge ;edge vertex ;vertex listed ;listed popped ;popped reversed ;reversed figure ;figure illustrates ;illustrates application ;application algorithm ;algorithm digraph ;digraph fig ;fig ure ;ure figure ;figure drawn ;drawn edges ;edges digraph ;digraph left ;left problem ;problem statement ;statement requires ;requires venient ;venient visually ;visually correctness ;correctness solution ;solution instance ;instance topological ;topological sorting ;sorting problem ;problem delete ;delete solution ;solution obtained ;obtained figure ;figure illustration ;illustration source ;source removal ;removal algorithm ;algorithm topological ;topological sorting ;sorting problem ;problem iteration ;iteration vertex ;vertex incoming ;incoming edges ;edges deleted ;deleted digraph ;digraph algorithm ;algorithm based ;based direct ;direct implementation ;implementation decrease ;decrease conquer ;conquer technique ;technique repeatedly ;repeatedly remaining ;remaining digraph ;digraph source ;source vertex ;vertex incoming ;incoming edges ;edges delete ;delete edges ;edges outgoing ;outgoing sources ;sources break ;break arbitrarily ;arbitrarily problem ;problem solved ;solved problem ;problem section ;section exercises ;exercises vertices ;vertices deleted ;deleted yields ;yields solution ;solution topological ;topological sorting ;sorting problem ;problem application ;application algorithm ;algorithm digraph ;digraph representing ;representing courses ;courses figure ;figure solution ;solution obtained ;obtained source ;source removal ;removal algorithm ;algorithm obtained ;obtained dfs ;dfs based ;based algorithm ;algorithm topological ;topological sorting ;sorting problem ;problem alternative ;alternative solutions ;solutions tiny ;tiny size ;size create ;create wrong ;wrong impression ;impression topological ;topological sorting ;sorting problem ;problem large ;large project ;project construction ;construction research ;research software ;software development ;development involves ;involves multitude ;multitude interrelated ;interrelated tasks ;tasks prerequisites ;prerequisites thing ;thing situation ;situation make ;make set ;set prerequisites ;prerequisites contradictory ;contradictory convenient ;convenient solve ;solve topological ;topological sorting ;sorting problem ;problem project ;project digraph ;digraph thinking ;thinking scheduling ;scheduling tasks ;tasks minimize ;minimize total ;total completion ;completion project ;project require ;require algorithms ;algorithms general ;general books ;books operations ;operations research ;research special ;special cpm ;cpm critical ;critical path ;path method ;method pert ;pert evaluation ;evaluation review ;review technique ;technique methodologies ;methodologies applications ;applications topological ;topological sorting ;sorting science ;science instruction ;instruction scheduling ;scheduling compilation ;compilation cell ;cell evaluation ;evaluation ordering ;ordering spreadsheet ;spreadsheet formulas ;formulas resolving ;resolving symbol ;symbol dependencies ;dependencies linkers ;linkers exercises ;exercises apply ;apply dfs ;dfs based ;based algorithm ;algorithm solve ;solve topological ;topological sorting ;sorting problem ;problem digraphs ;digraphs prove ;prove topological ;topological sorting ;sorting problem ;problem solution ;solution dag ;dag digraph ;digraph vertices ;vertices largest ;largest distinct ;distinct solutions ;solutions topological ;topological sorting ;sorting problem ;problem efficiency ;efficiency dfs ;dfs based ;based algorithm ;algorithm topological ;topological sorting ;sorting modify ;modify dfs ;dfs based ;based algorithm ;algorithm reversing ;reversing vertex ;vertex ordering ;ordering generated ;generated dfs ;dfs vertices ;vertices pushed ;pushed dfs ;dfs stack ;stack popped ;popped solve ;solve topological ;topological sorting ;sorting problem ;problem apply ;apply source ;source removal ;removal algorithm ;algorithm digraphs ;digraphs problem ;problem prove ;prove nonempty ;nonempty dag ;dag source ;source determine ;determine vertex ;vertex digraph ;digraph represented ;represented adjacency ;adjacency matrix ;matrix efficiency ;efficiency operation ;operation source ;source determine ;determine vertex ;vertex digraph ;digraph represented ;represented adjacency ;adjacency lists ;lists efficiency ;efficiency operation ;operation implement ;implement source ;source removal ;removal algorithm ;algorithm digraph ;digraph represented ;represented adjacency ;adjacency lists ;lists running ;running implement ;implement topological ;topological sorting ;sorting algorithms ;algorithms language ;language choice ;choice run ;run experiment ;experiment running ;running times ;times digraph ;digraph called ;called strongly ;strongly connected ;connected pair ;pair distinct ;distinct vertices ;vertices exists ;exists directed ;directed path ;path directed ;directed path ;path general ;general digraph ;digraph vertices ;vertices partitioned ;partitioned disjoint ;disjoint maximal ;maximal subsets ;subsets vertices ;vertices mutually ;mutually accessible ;accessible directed ;directed paths ;paths subsets ;subsets called ;called strongly ;strongly connected ;connected components ;components digraph ;digraph dfs ;dfs based ;based algorithms ;algorithms identifying ;identifying strongly ;strongly connected ;connected components ;components simpler ;simpler efficient ;efficient dfs ;dfs traversal ;traversal digraph ;digraph vertices ;vertices dead ;dead ends ;ends reverse ;reverse directions ;directions edges ;edges digraph ;digraph dfs ;dfs traversal ;traversal digraph ;digraph starting ;starting restarting ;restarting traversal ;traversal highest ;highest numbered ;numbered vertex ;vertex unvisited ;unvisited vertices ;vertices strongly ;strongly connected ;connected components ;components vertices ;vertices dfs ;dfs trees ;trees obtained ;obtained traversal ;traversal apply ;apply algorithm ;algorithm digraph ;digraph determine ;determine strongly ;strongly connected ;connected components ;components efficiency ;efficiency class ;class algorithm ;algorithm answers ;answers adjacency ;adjacency matrix ;matrix representation ;representation adjacency ;adjacency representation ;representation input ;input digraph ;digraph strongly ;strongly connected ;connected components ;components dag ;dag spider ;spider web ;web spider ;spider sits ;sits web ;web fly ;fly sits ;sits ways ;ways spider ;spider fly ;fly moving ;moving web ;web lines ;lines directions ;directions arrows ;arrows kor ;kor algorithms ;algorithms generating ;generating combinatorial ;combinatorial objects ;objects section ;section discuss ;discuss algorithms ;algorithms generating ;generating combi ;combi natorial ;natorial objects ;objects important ;important types ;types combinatorial ;combinatorial objects ;objects permuta ;permuta tions ;tions combinations ;combinations subsets ;subsets set ;set typically ;typically arise ;arise problems ;problems require ;require consideration ;consideration choices ;choices encountered ;encountered chapter ;chapter discussed ;discussed exhaustive ;exhaustive combinatorial ;combinatorial objects ;objects stud ;stud ied ;ied discrete ;discrete mathematics ;mathematics called ;called combinatorics ;combinatorics mathematicians ;mathematicians primarily ;primarily interested ;interested counting ;counting formulas ;formulas ful ;ful formulas ;formulas items ;items generated ;generated combinatorial ;combinatorial objects ;objects typically ;typically grows ;grows exponentially ;exponentially faster ;faster function ;function problem ;problem size ;size primary ;primary lies ;lies algorithms ;algorithms generating ;generating combinatorial ;combinatorial objects ;objects counting ;counting generating ;generating permutations ;permutations simplicity ;simplicity assume ;assume underlying ;underlying set ;set elements ;elements permuted ;permuted simply ;simply set ;set integers ;integers generally ;generally interpreted ;interpreted indices ;indices elements ;elements element ;element set ;set decrease ;decrease technique ;technique problem ;problem generating ;generating permutations ;permutations smaller ;smaller problem ;problem generate ;generate permutations ;permutations assuming ;assuming smaller ;smaller problem ;problem solved ;solved solution ;solution larger ;larger inserting ;inserting positions ;positions elements ;elements permutation ;permutation elements ;elements permu ;permu tations ;tations obtained ;obtained fashion ;fashion distinct ;distinct total ;total permutations ;permutations insert ;insert previously ;previously generated ;generated permutations ;permutations left ;left turns ;turns beneficial ;beneficial inserting ;inserting moving ;moving left ;left direction ;direction permutation ;permutation processed ;processed applying ;applying approach ;approach figure ;figure advantage ;advantage generating ;generating permutations ;permutations stems ;stems fact ;fact satisfies ;satisfies minimal ;minimal requirement ;requirement permutation ;permutation tained ;tained predecessor ;predecessor exchanging ;exchanging elements ;elements method ;method discussed ;discussed elements ;elements adjacent ;adjacent insert ;insert left ;left insert ;insert left ;left insert ;insert left ;left figure ;figure generating ;generating permutations ;permutations generated ;generated figure ;figure minimal ;minimal requirement ;requirement beneficial ;beneficial algorithm ;algorithm speed ;speed applications ;applications permutations ;permutations section ;section needed ;needed permutations ;permutations cities ;cities solve ;solve traveling ;traveling salesman ;salesman problem ;problem exhaustive ;exhaustive permutations ;permutations generated ;generated minimal ;minimal algorithm ;algorithm compute ;compute length ;length predecessor ;predecessor constant ;constant linear ;linear ordering ;ordering permutations ;permutations elements ;elements explicitly ;explicitly generating ;generating permutations ;permutations smaller ;smaller values ;values associating ;associating direction ;direction element ;element permutation ;permutation direction ;direction small ;small arrow ;arrow written ;written element ;element mobile ;mobile arrow ;arrow marked ;marked permutation ;permutation arrow ;arrow points ;points smaller ;smaller adjacent ;adjacent permutation ;permutation mobile ;mobile notion ;notion mobile ;mobile element ;element description ;description johnson ;johnson trotter ;trotter algorithm ;algorithm generating ;generating permutations ;permutations algorithm ;algorithm johnsontrotter ;johnsontrotter implements ;implements johnson ;johnson trotter ;trotter algorithm ;algorithm generating ;generating permutations ;permutations input ;input positive ;positive integer ;integer output ;output permutations ;permutations initialize ;initialize permutation ;permutation mobile ;mobile element ;element largest ;largest mobile ;mobile element ;element swap ;swap adjacent ;adjacent element ;element arrow ;arrow points ;points reverse ;reverse direction ;direction elements ;elements larger ;larger permutation ;permutation application ;application algorithm ;algorithm largest ;largest mobile ;mobile element ;element shown ;shown bold ;bold algorithm ;algorithm efficient ;efficient generating ;generating permutations ;permutations implemented ;implemented run ;run proportional ;proportional permutations ;permutations horribly ;horribly small ;small values ;values algorithm ;algorithm fault ;fault problem ;problem simply ;simply asks ;asks generate ;generate items ;items permutation ;permutation ordering ;ordering generated ;generated johnsontrotter ;johnsontrotter algorithm ;algorithm natural ;natural permutation ;permutation case ;case permutations ;permutations listed ;listed increasing ;increasing called ;called lexicographic ;lexicographic der ;der listed ;listed dictionary ;dictionary numbers ;numbers interpreted ;interpreted letters ;letters alphabet ;alphabet generate ;generate permutation ;permutation lexi ;lexi cographic ;cographic case ;case half ;half permutations ;permutations simply ;simply transpose ;transpose elements ;elements permutation ;permutation longest ;longest decreasing ;decreasing suffix ;suffix exchanging ;exchanging smallest ;smallest element ;element suffix ;suffix greater ;greater reverse ;reverse suffix ;suffix increasing ;increasing pseudocode ;pseudocode simple ;simple algorithm ;algorithm origins ;origins century ;century india ;india algorithm ;algorithm lexicographicpermute ;lexicographicpermute generates ;generates permutations ;permutations lexicographic ;lexicographic input ;input positive ;positive integer ;integer output ;output permutations ;permutations lexicographic ;lexicographic initialize ;initialize permutation ;permutation consecutive ;consecutive elements ;elements increasing ;increasing largest ;largest index ;index largest ;largest index ;index swap ;swap decreasing ;decreasing reverse ;reverse elements ;elements inclusive ;inclusive permutation ;permutation generating ;generating subsets ;subsets recall ;recall section ;section examined ;examined knapsack ;knapsack problem ;problem asks ;asks valuable ;valuable subset ;subset items ;items fits ;fits knapsack ;knapsack capacity ;capacity exhaustive ;exhaustive approach ;approach solving ;solving problem ;problem discussed ;discussed based ;based generating ;generating subsets ;subsets set ;set items ;items section ;section discuss ;discuss algorithms ;algorithms generating ;generating subsets ;subsets abstract ;abstract set ;set mathematicians ;mathematicians set ;set subsets ;subsets set ;set power ;power set ;set decrease ;decrease idea ;idea immediately ;immediately applicable ;applicable problem ;problem subsets ;subsets divided ;divided groups ;groups group ;group subsets ;subsets element ;element obtained ;obtained adding ;adding subset ;subset subsets ;subsets adding ;adding elements ;elements application ;application algorithm ;algorithm generate ;generate subsets ;subsets illustrated ;illustrated figure ;figure similarly ;similarly generating ;generating permutations ;permutations generate ;generate power ;power sets ;sets smaller ;smaller sets ;sets convenient ;convenient solving ;solving problem ;problem directly ;directly based ;based correspondence ;correspondence subsets ;subsets element ;element set ;set subsets ;subsets figure ;figure generating ;generating subsets ;subsets bit ;bit strings ;strings length ;length easiest ;easiest establish ;establish correspondence ;correspondence assign ;assign subset ;subset bit ;bit string ;string belongs ;belongs subset ;subset mentioned ;mentioned idea ;idea bit ;bit vectors ;vectors section ;section bit ;bit string ;string correspond ;correspond subset ;subset element ;element set ;set correspond ;correspond set ;set represent ;represent correspondence ;correspondence generate ;generate bit ;bit strings ;strings length ;length generating ;generating successive ;successive binary ;binary numbers ;numbers padded ;padded leading ;leading case ;case bit ;bit strings ;strings subsets ;subsets bit ;bit strings ;strings generated ;generated algorithm ;algorithm lexicographic ;lexicographic symbol ;symbol alphabet ;alphabet subsets ;subsets natural ;natural called ;called squashed ;squashed subset ;subset involving ;involving listed ;listed subsets ;subsets involving ;involving case ;case element ;element set ;set figure ;figure easy ;easy adjust ;adjust bit ;bit string ;string based ;based algorithm ;algorithm yield ;yield squashed ;squashed ordering ;ordering subsets ;subsets involved ;involved problem ;problem section ;section exercises ;exercises challenging ;challenging exists ;exists minimal ;minimal algorithm ;algorithm generating ;generating bit ;bit strings ;strings differs ;differs predecessor ;predecessor single ;single bit ;bit language ;language subsets ;subsets subset ;subset differ ;differ predecessor ;predecessor addition ;addition deletion ;deletion single ;single element ;element sequence ;sequence bit ;bit strings ;strings called ;called binary ;binary reflected ;reflected gray ;gray code ;code frank ;frank gray ;gray researcher ;researcher bell ;bell laboratories ;laboratories reinvented ;reinvented minimize ;minimize effect ;effect errors ;errors transmitting ;transmitting digital ;digital signals ;signals ros ;ros years ;years earlier ;earlier french ;french engineer ;engineer mile ;mile baudot ;baudot codes ;codes telegraphy ;telegraphy pseudocode ;pseudocode generates ;generates binary ;binary reflected ;reflected gray ;gray code ;code recursively ;recursively algorithm ;algorithm brgc ;brgc generates ;generates recursively ;recursively binary ;binary reflected ;reflected gray ;gray code ;code input ;input positive ;positive integer ;integer output ;output bit ;bit strings ;strings length ;length composing ;composing gray ;gray code ;code make ;make bit ;bit strings ;strings generate ;generate bit ;bit strings ;strings size ;size calling ;calling brgc ;brgc reversed ;reversed bit ;bit string ;string bit ;bit string ;string append ;append correctness ;correctness algorithm ;algorithm stems ;stems fact ;fact generates ;generates bit ;bit strings ;strings distinct ;distinct assertions ;assertions easy ;easy mathematical ;mathematical induction ;induction binary ;binary reflected ;reflected gray ;gray code ;code cyclic ;cyclic bit ;bit string ;string differs ;differs single ;single bit ;bit nonrecursive ;nonrecursive algorithm ;algorithm generating ;generating binary ;binary reflected ;reflected gray ;gray code ;code problem ;problem section ;section exercises ;exercises realistic ;realistic implement ;implement algorithm ;algorithm requires ;requires generating ;generating permu ;permu tations ;tations element ;element set ;set subsets ;subsets set ;set generate ;generate permutations ;permutations minimal ;minimal algorithm ;algorithm johnson ;johnson trotter ;trotter algorithm ;algorithm lexicographic ;lexicographic algorithm ;algorithm apply ;apply lexicographicpermute ;lexicographicpermute multiset ;multiset generate ;generate correctly ;correctly permutations ;permutations lexicographic ;lexicographic implementation ;implementation algorithm ;algorithm generating ;generating mutations ;mutations discovered ;discovered hea ;hea algorithm ;algorithm heappermute ;heappermute implements ;implements algorithm ;algorithm generating ;generating permutations ;permutations input ;input positive ;positive integer ;integer global ;global array ;array output ;output permutations ;permutations elements ;elements write ;write heappermute ;heappermute odd ;odd swap ;swap algorithm ;algorithm prove ;prove correctness ;correctness algorithm ;algorithm efficiency ;efficiency heappermute ;heappermute generate ;generate subsets ;subsets element ;element set ;set algorithms ;algorithms outlined ;outlined section ;section simple ;simple make ;make bit ;bit string ;string based ;based algorithm ;algorithm generate ;generate subsets ;subsets squashed ;squashed write ;write pseudocode ;pseudocode recursive ;recursive algorithm ;algorithm generating ;generating bit ;bit strings ;strings length ;length write ;write nonrecursive ;nonrecursive algorithm ;algorithm generating ;generating bit ;bit strings ;strings length ;length implements ;implements bit ;bit strings ;strings arrays ;arrays binary ;binary additions ;additions generate ;generate binary ;binary reflexive ;reflexive gray ;gray code ;code nonrecursive ;nonrecursive algorithm ;algorithm generate ;generate binary ;binary flexive ;flexive gray ;gray code ;code bit ;bit string ;string generate ;generate ith ;ith bit ;bit string ;string flipping ;flipping bit ;bit previ ;previ ous ;ous bit ;bit string ;string position ;position significant ;significant binary ;binary representation ;representation design ;design decrease ;decrease conquer ;conquer algorithm ;algorithm generating ;generating combinations ;combinations items ;items chosen ;chosen element ;element subsets ;subsets element ;element set ;set algorithm ;algorithm minimal ;minimal algorithm ;algorithm gray ;gray code ;code tower ;tower hanoi ;hanoi disk ;disk moves ;moves classic ;classic recursive ;recursive algorithm ;algorithm tower ;tower hanoi ;hanoi puzzle ;puzzle generating ;generating binary ;binary reflected ;reflected gray ;gray code ;code binary ;binary reflected ;reflected gray ;gray code ;code solving ;solving tower ;tower hanoi ;hanoi puzzle ;puzzle fair ;fair attraction ;attraction olden ;olden days ;days encounter ;encounter attraction ;attraction fair ;fair light ;light bulb ;bulb connected ;connected switches ;switches lighted ;lighted switches ;switches closed ;closed controlled ;controlled button ;button pressing ;pressing button ;button toggled ;toggled state ;state light ;light bulb ;bulb design ;design algorithm ;algorithm light ;light bulb ;bulb minimum ;minimum button ;button pushes ;pushes needed ;needed worst ;worst case ;case switches ;switches decrease ;decrease constant ;constant factor ;factor algorithms ;algorithms recall ;recall introduction ;introduction chapter ;chapter decrease ;decrease constant ;constant factor ;factor major ;major variety ;variety decrease ;decrease conquer ;conquer algorithm ;algorithm based ;based technique ;technique mentioned ;mentioned exponentiation ;exponentiation squar ;squar ing ;ing defined ;defined formula ;formula section ;section examples ;examples algorithms ;algorithms important ;important binary ;binary decrease ;decrease constant ;constant factor ;factor algorithms ;algorithms run ;run logarithmic ;logarithmic ing ;ing efficient ;efficient reduction ;reduction factor ;factor rare ;rare binary ;binary remarkably ;remarkably efficient ;efficient algorithm ;algorithm searching ;searching sorted ;sorted array ;array works ;works comparing ;comparing key ;key array ;array middle ;middle element ;element algorithm ;algorithm stops ;stops operation ;operation repeated ;repeated recursively ;recursively half ;half array ;array half ;half apply ;apply binary ;binary searching ;searching array ;array iterations ;iterations algorithm ;algorithm table ;table index ;index iteration ;iteration binary ;binary based ;based recursive ;recursive idea ;idea easily ;easily implemented ;implemented nonrecursive ;nonrecursive algorithm ;algorithm pseudocode ;pseudocode nonre ;nonre cursive ;cursive version ;version algorithm ;algorithm binarysearch ;binarysearch implements ;implements nonrecursive ;nonrecursive binary ;binary input ;input array ;array sorted ;sorted ascending ;ascending key ;key output ;output index ;index array ;array element ;element equal ;equal element ;element standard ;standard analyze ;analyze efficiency ;efficiency binary ;binary times ;times key ;key compared ;compared element ;element array ;array sake ;sake simplicity ;simplicity called ;called comparisons ;comparisons assumes ;assumes comparison ;comparison algorithm ;algorithm determine ;determine smaller ;smaller equal ;equal larger ;larger comparisons ;comparisons algorithm ;algorithm make ;make array ;array elements ;elements depends ;depends specifics ;specifics instance ;instance problem ;problem key ;key comparisons ;comparisons worst ;worst case ;case cworst ;cworst worst ;worst case ;case inputs ;inputs arrays ;arrays key ;key successful ;successful searches ;searches comparison ;comparison algorithm ;algorithm faces ;faces situation ;situation array ;array half ;half size ;size recurrence ;recurrence relation ;relation cworst ;cworst convince ;convince rounded ;rounded initial ;initial condition ;condition written ;written encountered ;encountered recurrence ;recurrence initial ;initial condition ;condition section ;section recurrence ;recurrence solution ;solution initial ;initial condition ;condition cworst ;cworst log ;log similarly ;similarly case ;case recurrence ;recurrence problem ;problem exercises ;exercises solution ;solution formula ;formula tweaked ;tweaked solution ;solution valid ;valid arbitrary ;arbitrary positive ;positive integer ;integer cworst ;cworst log ;log formula ;formula deserves ;deserves attention ;attention implies ;implies worst ;worst case ;case efficiency ;efficiency binary ;binary log ;log fully ;fully expected ;expected algorithm ;algorithm simply ;simply reduces ;reduces size ;size remaining ;remaining array ;array half ;half iteration ;iteration iterations ;iterations needed ;needed initial ;initial size ;size final ;final size ;size log ;log reiterate ;reiterate section ;section logarithmic ;logarithmic function ;function grows ;grows slowly ;slowly values ;values small ;small large ;large values ;values formula ;formula log ;log comparisons ;comparisons element ;element establish ;establish element ;element sorted ;sorted array ;array elements ;elements log ;log comparisons ;comparisons sorted ;sorted array ;array size ;size average ;average case ;case efficiency ;efficiency binary ;binary phisticated ;phisticated analysis ;analysis shows ;shows average ;average key ;key comparisons ;comparisons binary ;binary slightly ;slightly smaller ;smaller worst ;worst case ;case cavg ;cavg log ;log accurate ;accurate formulas ;formulas average ;average comparisons ;comparisons successful ;successful unsuccessful ;unsuccessful cayvegs ;cayvegs log ;log canvog ;canvog log ;log binary ;binary optimal ;optimal searching ;searching algorithm ;algorithm restrict ;restrict erations ;erations comparisons ;comparisons keys ;keys section ;section searching ;searching algorithms ;algorithms interpolation ;interpolation section ;section hashing ;hashing section ;section average ;average case ;case efficiency ;efficiency hashing ;hashing quire ;quire array ;array sorted ;sorted algorithms ;algorithms require ;require special ;special calculations ;calculations addition ;addition key ;key comparisons ;comparisons finally ;finally idea ;idea binary ;binary applications ;applications searching ;searching ben ;ben addition ;addition applied ;applied solving ;solving nonlinear ;nonlinear equations ;equations unknown ;unknown discuss ;discuss continuous ;continuous analogue ;analogue binary ;binary called ;called method ;method bisection ;bisection section ;section fake ;fake coin ;coin problem ;problem versions ;versions fake ;fake coin ;coin identification ;identification problem ;problem illustrates ;illustrates decrease ;decrease constant ;constant factor ;factor strategy ;strategy identical ;identical coins ;coins fake ;fake scale ;scale sets ;sets coins ;coins tipping ;tipping left ;left staying ;staying scale ;scale sets ;sets heavier ;heavier problem ;problem design ;design efficient ;efficient algorithm ;algorithm detecting ;detecting fake ;fake coin ;coin easier ;easier version ;version problem ;problem discuss ;discuss assumes ;assumes fake ;fake coin ;coin lighter ;lighter genuine ;genuine natural ;natural idea ;idea solving ;solving problem ;problem coins ;coins piles ;piles coins ;coins leaving ;leaving extra ;extra coin ;coin odd ;odd challenging ;challenging version ;version assumes ;assumes additional ;additional information ;information relative ;relative weights ;weights fake ;fake genuine ;genuine coins ;coins presence ;presence fake ;fake coin ;coin coins ;coins pursue ;pursue difficult ;difficult version ;version exercises ;exercises section ;section piles ;piles scale ;scale piles ;piles coin ;coin fake ;fake proceed ;proceed manner ;manner lighter ;lighter pile ;pile fake ;fake coin ;coin easily ;easily set ;set recurrence ;recurrence relation ;relation weighings ;weighings needed ;needed algorithm ;algorithm worst ;worst case ;case recurrence ;recurrence familiar ;familiar identical ;identical worst ;worst case ;case comparisons ;comparisons binary ;binary difference ;difference initial ;initial condition ;condition similarity ;similarity surprising ;surprising algorithms ;algorithms based ;based technique ;technique halving ;halving instance ;instance size ;size solution ;solution recurrence ;recurrence weighings ;weighings similar ;similar binary ;binary log ;log elementary ;elementary outright ;outright boring ;boring interesting ;interesting fact ;fact algorithm ;algorithm efficient ;efficient solution ;solution efficient ;efficient coins ;coins piles ;piles coins ;coins details ;details precise ;precise formulation ;formulation developed ;developed section ;section exercises ;exercises instructor ;instructor forgets ;forgets demand ;demand instructor ;instructor assign ;assign problem ;problem weighing ;weighing piles ;piles instance ;instance size ;size factor ;factor weighings ;weighings log ;log smaller ;smaller log ;log russian ;russian peasant ;peasant multiplication ;multiplication nonorthodox ;nonorthodox algorithm ;algorithm multiplying ;multiplying positive ;positive integers ;integers called ;called multiplication ;multiplication russe ;russe russian ;russian peasant ;peasant method ;method positive ;positive integers ;integers product ;product compute ;compute instance ;instance size ;size instance ;instance half ;half size ;size deal ;deal obvious ;obvious formula ;formula relating ;relating solution ;solution problem ;problem larger ;larger instance ;instance solution ;solution smaller ;smaller odd ;odd slight ;slight adjustment ;adjustment formula ;formula formulas ;formulas trivial ;trivial case ;case compute ;compute product ;product recursively ;recursively iteratively ;iteratively computing ;computing algorithm ;algorithm figure ;figure extra ;extra addends ;addends shown ;shown parentheses ;parentheses figure ;figure rows ;rows odd ;odd values ;values column ;column product ;product simply ;simply adding ;adding elements ;elements column ;column odd ;odd column ;column figure ;figure algorithm ;algorithm involves ;involves simple ;simple operations ;operations halving ;halving doubling ;doubling adding ;adding feature ;feature attractive ;attractive figure ;figure computing ;computing russian ;russian peasant ;peasant method ;method memorize ;memorize table ;table multiplications ;multiplications feature ;feature algorithm ;algorithm attractive ;attractive russian ;russian peasants ;peasants accord ;accord ing ;ing western ;western visitors ;visitors widely ;widely nineteenth ;nineteenth century ;century method ;method named ;named fact ;fact method ;method egyptian ;egyptian mathematicians ;mathematicians early ;early cha ;cha leads ;leads fast ;fast hardware ;hardware implementa ;implementa tion ;tion doubling ;doubling halving ;halving binary ;binary numbers ;numbers performed ;performed shifts ;shifts basic ;basic operations ;operations machine ;machine josephus ;josephus problem ;problem josephus ;josephus problem ;problem named ;named flavius ;flavius josephus ;josephus famous ;famous jewish ;jewish historian ;historian participated ;participated chronicled ;chronicled jewish ;jewish revolt ;revolt romans ;romans josephus ;josephus general ;general managed ;managed hold ;hold fortress ;fortress jotapata ;jotapata days ;days fall ;fall city ;city refuge ;refuge diehards ;diehards nearby ;nearby cave ;cave rebels ;rebels voted ;voted perish ;perish surrender ;surrender josephus ;josephus proposed ;proposed dispatch ;dispatch neighbor ;neighbor determined ;determined casting ;casting lots ;lots josephus ;josephus contrived ;contrived draw ;draw lot ;lot surviving ;surviving men ;men cave ;cave prevailed ;prevailed intended ;intended victim ;victim surrender ;surrender romans ;romans people ;people numbered ;numbered stand ;stand circle ;circle starting ;starting grim ;grim person ;person eliminate ;eliminate person ;person survivor ;survivor left ;left problem ;problem determine ;determine survivor ;survivor figure ;figure people ;people positions ;positions eliminated ;eliminated circle ;circle people ;people initial ;initial positions ;positions eliminated ;eliminated leaving ;leaving sole ;sole survivor ;survivor initial ;initial position ;position people ;people positions ;positions eliminated ;eliminated convenient ;convenient people ;people positions ;positions convenience ;convenience figure ;figure instances ;instances josephus ;josephus problem ;problem subscript ;subscript numbers ;numbers person ;person position ;position eliminated ;eliminated solutions ;solutions convenient ;convenient cases ;cases odd ;odd separately ;separately circle ;circle yields ;yields instance ;instance problem ;problem half ;half initial ;initial size ;size difference ;difference position ;position numbering ;numbering person ;person initial ;initial position ;position person ;person initial ;initial position ;position figure ;figure easy ;easy initial ;initial position ;position person ;person simply ;simply position ;position relationship ;relationship hold ;hold survivor ;survivor case ;case odd ;odd eliminates ;eliminates people ;people positions ;positions elimination ;elimination person ;person position ;position left ;left instance ;instance size ;size initial ;initial position ;position corresponds ;corresponds position ;position numbering ;numbering position ;position figure ;figure odd ;odd values ;values closed ;closed solution ;solution case ;case recurrence ;recurrence subject ;subject initial ;initial condition ;condition requires ;requires ingenuity ;ingenuity applying ;applying backward ;backward substitutions ;substitutions fact ;fact solution ;solution apply ;apply forward ;forward substitutions ;substitutions values ;values discern ;discern pattern ;pattern prove ;prove general ;general validity ;validity mathematical ;mathematical induction ;induction leave ;leave execution ;execution exercises ;exercises alternatively ;alternatively gkp ;gkp exposition ;exposition josephus ;josephus problem ;problem interestingly ;interestingly elegant ;elegant closed ;closed involves ;involves binary ;binary representation ;representation size ;size obtained ;obtained bit ;bit cyclic ;cyclic shift ;shift left ;left exercises ;exercises cutting ;cutting stick ;stick inches ;inches cut ;cut inch ;inch pieces ;pieces outline ;outline algorithm ;algorithm performs ;performs task ;task minimum ;minimum cuts ;cuts pieces ;pieces stick ;stick cut ;cut formula ;formula minimum ;minimum cuts ;cuts design ;design decrease ;decrease half ;half algorithm ;algorithm computing ;computing log ;log determine ;determine efficiency ;efficiency largest ;largest key ;key comparisons ;comparisons binary ;binary searching ;searching key ;key array ;array keys ;keys array ;array require ;require largest ;largest key ;key comparisons ;comparisons searched ;searched binary ;binary average ;average key ;key comparisons ;comparisons binary ;binary successful ;successful array ;array assume ;assume key ;key searched ;searched probability ;probability average ;average key ;key comparisons ;comparisons binary ;binary unsuccessful ;unsuccessful array ;array assume ;assume searches ;searches keys ;keys intervals ;intervals formed ;formed array ;array elements ;elements equally ;equally estimate ;estimate times ;times faster ;faster average ;average successful ;successful sorted ;sorted array ;array elements ;elements binary ;binary sequential ;sequential efficiency ;efficiency sequential ;sequential implemented ;implemented array ;array linked ;linked true ;true searching ;searching sorted ;sorted binary ;binary design ;design version ;version binary ;binary comparisons ;comparisons implement ;implement algorithm ;algorithm language ;language choice ;choice carefully ;carefully debug ;debug programs ;programs notorious ;notorious prone ;prone bugs ;bugs analyze ;analyze efficiency ;efficiency comparison ;comparison version ;version designed ;designed picture ;picture guessing ;guessing version ;version popular ;popular problem ;problem solving ;solving task ;task involves ;involves pre ;pre senting ;senting people ;people array ;array pictures ;pictures rows ;rows pictures ;pictures target ;target picture ;picture questions ;questions answered ;answered people ;people required ;required picture ;picture questions ;questions efficient ;efficient algorithm ;algorithm problem ;problem largest ;largest questions ;questions ternary ;ternary algorithm ;algorithm searching ;searching sorted ;sorted array ;array simply ;simply key ;key single ;single element ;element array ;array recursively ;recursively comparing ;comparing larger ;larger determine ;determine array ;array design ;design technique ;technique algorithm ;algorithm based ;based set ;set recurrence ;recurrence key ;key comparisons ;comparisons worst ;worst case ;case assume ;assume solve ;solve recurrence ;recurrence algorithm ;algorithm efficiency ;efficiency binary ;binary array ;array integers ;integers increasing ;increasing integer ;integer range ;range missing ;missing design ;design efficient ;efficient algorithm ;algorithm missing ;missing integer ;integer efficiency ;efficiency write ;write pseudocode ;pseudocode algorithm ;algorithm fake ;fake coin ;coin problem ;problem make ;make algorithm ;algorithm handles ;handles properly ;properly values ;values multiples ;multiples set ;set recurrence ;recurrence relation ;relation weighings ;weighings algorithm ;algorithm fake ;fake coin ;coin problem ;problem solve ;solve large ;large values ;values times ;times faster ;faster algorithm ;algorithm based ;based dividing ;dividing coins ;coins piles ;piles apply ;apply russian ;russian peasant ;peasant algorithm ;algorithm compute ;compute standpoint ;standpoint efficiency ;efficiency russian ;russian peasant ;peasant algorithm ;algorithm write ;write pseudocode ;pseudocode russian ;russian peasant ;peasant multiplication ;multiplication algorithm ;algorithm efficiency ;efficiency class ;class russian ;russian peasant ;peasant multiplication ;multiplication solution ;solution josephus ;josephus problem ;problem prove ;prove solution ;solution josephus ;josephus problem ;problem power ;power josephus ;josephus problem ;problem compute ;compute discern ;discern pattern ;pattern solutions ;solutions values ;values prove ;prove general ;general validity ;validity prove ;prove validity ;validity bit ;bit cyclic ;cyclic shift ;shift left ;left binary ;binary representation ;representation variable ;variable size ;size decrease ;decrease algorithms ;algorithms principal ;principal variety ;variety decrease ;decrease conquer ;conquer size ;size reduction ;reduction pattern ;pattern varies ;varies iteration ;iteration algorithm ;algorithm euclid ;euclid algorithm ;algorithm computing ;computing greatest ;greatest common ;common divisor ;divisor section ;section good ;good kind ;kind algorithm ;algorithm section ;section encounter ;encounter examples ;examples variety ;variety computing ;computing median ;median selection ;selection problem ;problem selection ;selection problem ;problem finding ;finding kth ;kth smallest ;smallest element ;element numbers ;numbers called ;called kth ;kth statistic ;statistic simply ;simply scan ;scan smallest ;smallest largest ;largest element ;element interesting ;interesting case ;case problem ;problem asks ;asks element ;element larger ;larger half ;half elements ;elements smaller ;smaller half ;half middle ;middle called ;called median ;median important ;important notions ;notions mathematical ;mathematical statistics ;statistics kth ;kth smallest ;smallest element ;element sorting ;sorting selecting ;selecting kth ;kth element ;element output ;output sorting ;sorting algorithm ;algorithm determined ;determined efficiency ;efficiency sorting ;sorting algorithm ;algorithm fast ;fast sorting ;sorting algorithm ;algorithm mergesort ;mergesort discussed ;discussed chapter ;chapter algorithm ;algorithm efficiency ;efficiency log ;log immediately ;immediately sorting ;sorting entire ;entire overkill ;overkill problem ;problem asks ;asks entire ;entire kth ;kth smallest ;smallest element ;element advantage ;advantage idea ;idea partitioning ;partitioning element ;element general ;general rearrangement ;rearrangement elements ;elements left ;left elements ;elements smaller ;smaller equal ;equal pivot ;pivot elements ;elements greater ;greater equal ;equal principal ;principal algorithmic ;algorithmic alternatives ;alternatives partition ;partition array ;array discuss ;discuss lomuto ;lomuto partitioning ;partitioning ben ;ben hoare ;hoare algorithm ;algorithm chapter ;chapter idea ;idea lomuto ;lomuto parti ;parti tioning ;tioning helpful ;helpful array ;array generally ;generally subarray ;subarray consideration ;consideration composed ;composed contiguous ;contiguous seg ;seg ments ;ments listed ;listed pivot ;pivot segment ;segment elements ;elements smaller ;smaller segment ;segment elements ;elements greater ;greater equal ;equal segment ;segment elements ;elements compared ;compared fig ;fig ure ;ure segments ;segments case ;case segments ;segments algorithm ;algorithm starts ;starts starting ;starting algorithm ;algorithm scans ;scans subarray ;subarray left ;left maintaining ;maintaining structure ;structure partition ;partition achieved ;achieved iteration ;iteration pares ;pares element ;element unknown ;unknown segment ;segment pointed ;pointed scanning ;scanning index ;index figure ;figure pivot ;pivot simply ;simply incremented ;incremented segment ;segment elements ;elements greater ;greater equal ;equal shrinking ;shrinking processed ;processed segment ;segment elements ;elements smaller ;smaller expanded ;expanded incrementing ;incrementing index ;index figure ;figure illustration ;illustration lomuto ;lomuto partitioning ;partitioning element ;element segment ;segment swapping ;swapping incrementing ;incrementing element ;element shrunk ;shrunk unprocessed ;unprocessed segment ;segment unprocessed ;unprocessed elements ;elements figure ;figure algorithm ;algorithm swaps ;swaps pivot ;pivot achieve ;achieve partition ;partition sought ;sought figure ;figure pseudocode ;pseudocode implementing ;implementing partitioning ;partitioning procedure ;procedure algorithm ;algorithm lomutopartition ;lomutopartition partitions ;partitions subarray ;subarray lomuto ;lomuto algorithm ;algorithm element ;element pivot ;pivot input ;input subarray ;subarray array ;array defined ;defined left ;left indices ;indices output ;output partition ;partition position ;position pivot ;pivot swap ;swap advantage ;advantage partition ;partition kth ;kth smallest ;smallest element ;element assume ;assume implemented ;implemented array ;array elements ;elements indexed ;indexed starting ;starting partition ;partition split ;split position ;position index ;index array ;array element ;element occupied ;occupied pivot ;pivot partitioning ;partitioning pivot ;pivot kth ;kth smallest ;smallest element ;element solves ;solves problem ;problem kth ;kth smallest ;smallest element ;element entire ;entire array ;array kth ;kth smallest ;smallest element ;element left ;left partitioned ;partitioned array ;array smallest ;smallest element ;element solve ;solve problem ;problem outright ;outright instance ;instance smaller ;smaller solved ;solved approach ;approach recursively ;recursively algorithm ;algorithm called ;called quickselect ;quickselect kth ;kth smallest ;smallest element ;element array ;array algorithm ;algorithm quickselect ;quickselect algorithm ;algorithm quickselect ;quickselect solves ;solves selection ;selection problem ;problem recursive ;recursive partition ;partition based ;based algorithm ;algorithm input ;input subarray ;subarray array ;array orderable ;orderable elements ;elements integer ;integer output ;output kth ;kth smallest ;smallest element ;element lomutopartition ;lomutopartition partition ;partition algorithm ;algorithm quickselect ;quickselect fact ;fact idea ;idea implemented ;implemented recursion ;recursion nonrecursive ;nonrecursive version ;version adjust ;adjust apply ;apply partition ;partition based ;based algorithm ;algorithm median ;median fol ;fol lowing ;lowing numbers ;numbers task ;task smallest ;smallest element ;element array ;array version ;version array ;array partitioning ;partitioning showing ;showing pivots ;pivots bold ;bold smaller ;smaller proceed ;proceed array ;array median ;median greater ;greater smaller ;smaller efficient ;efficient quickselect ;quickselect partitioning ;partitioning element ;element array ;array requires ;requires key ;key comparisons ;comparisons produces ;produces split ;split solves ;solves selection ;selection problem ;problem requiring ;requiring iterations ;iterations case ;case cbest ;cbest algorithm ;algorithm extremely ;extremely unbalanced ;unbalanced partition ;partition array ;array elements ;elements worst ;worst case ;case iterations ;iterations specific ;specific worst ;worst case ;case input ;input case ;case strictly ;strictly increasing ;increasing array ;array implies ;implies cworst ;cworst compares ;compares poorly ;poorly straightforward ;straightforward sorting ;sorting based ;based approach ;approach mentioned ;mentioned beginning ;beginning selection ;selection problem ;problem discussion ;discussion usefulness ;usefulness partition ;partition based ;based algorithm ;algorithm depends ;depends algorithm ;algorithm efficiency ;efficiency average ;average case ;case fortunately ;fortunately careful ;careful mathematical ;mathematical analysis ;analysis shown ;shown average ;average case ;case efficiency ;efficiency linear ;linear fact ;fact scientists ;scientists discovered ;discovered sophisticated ;sophisticated choosing ;choosing pivot ;pivot quickselect ;quickselect guarantees ;guarantees linear ;linear worst ;worst case ;case blo ;blo complicated ;complicated recommended ;recommended practical ;practical applications ;applications noting ;noting partition ;partition based ;based algorithm ;algorithm solves ;solves general ;general problem ;problem identifying ;identifying smallest ;smallest largest ;largest elements ;elements kth ;kth smallest ;smallest element ;element interpolation ;interpolation variable ;variable size ;size decrease ;decrease algorithm ;algorithm searching ;searching sorted ;sorted array ;array called ;called interpolation ;interpolation binary ;binary compares ;compares key ;key middle ;middle sorted ;sorted array ;array reduces ;reduces problem ;problem instance ;instance size ;size half ;half interpolation ;interpolation takes ;takes account ;account key ;key array ;array element ;element compared ;compared key ;key sense ;sense algorithm ;algorithm mimics ;mimics index ;index figure ;figure index ;index computation ;computation interpolation ;interpolation searching ;searching named ;named brown ;brown middle ;middle beginning ;beginning action ;action searching ;searching named ;named smith ;smith precisely ;precisely iteration ;iteration dealing ;dealing array ;array portion ;portion leftmost ;leftmost element ;element rightmost ;rightmost element ;element algorithm ;algorithm assumes ;assumes array ;array values ;values linearly ;linearly straight ;straight line ;line points ;points accuracy ;accuracy assumption ;assumption algorithm ;algorithm efficiency ;efficiency correctness ;correctness key ;key compared ;compared element ;element index ;index computed ;computed coordinate ;coordinate straight ;straight line ;line points ;points coordinate ;coordinate equal ;equal figure ;figure writing ;writing standard ;standard equation ;equation straight ;straight line ;line passing ;passing points ;points substituting ;substituting solving ;solving leads ;leads formula ;formula logic ;logic approach ;approach straightforward ;straightforward array ;array values ;values increasing ;increasing accurately ;accurately decreasing ;decreasing values ;values increased ;increased linearly ;linearly simplest ;simplest manner ;manner index ;index computed ;computed formula ;formula expected ;expected location ;location array ;array element ;element equal ;equal formula ;formula applied ;applied comparing ;comparing algorithm ;algorithm stops ;stops equal ;equal proceeds ;proceeds searching ;searching manner ;manner elements ;elements indexed ;indexed depending ;depending smaller ;smaller larger ;larger size ;size problem ;problem instance ;instance reduced ;reduced priori ;priori analysis ;analysis algorithm ;algorithm efficiency ;efficiency shows ;shows interpolation ;interpolation log ;log key ;key comparisons ;comparisons average ;average searching ;searching random ;random keys ;keys function ;function grows ;grows slowly ;slowly comparisons ;comparisons small ;small constant ;constant practically ;practically feasible ;feasible inputs ;inputs problem ;problem section ;section exercises ;exercises worst ;worst case ;case interpolation ;interpolation linear ;linear considered ;considered bad ;bad performance ;performance assessing ;assessing worthiness ;worthiness interpolation ;interpolation binary ;binary robert ;robert sedgewick ;sedgewick wrote ;wrote edition ;edition algorithms ;algorithms binary ;binary smaller ;smaller files ;files interpolation ;interpolation large ;large files ;files applications ;applications comparisons ;comparisons expensive ;expensive access ;access costs ;costs high ;high section ;section discuss ;discuss continuous ;continuous counterpart ;counterpart interpolation ;interpolation variable ;variable size ;size decrease ;decrease algorithm ;algorithm searching ;searching insertion ;insertion binary ;binary tree ;tree revisit ;revisit binary ;binary tree ;tree recall ;recall binary ;binary tree ;tree nodes ;nodes elements ;elements set ;set orderable ;orderable items ;items element ;element node ;node elements ;elements left ;left subtree ;subtree smaller ;smaller elements ;elements subtree ;subtree greater ;greater element ;element subtree ;subtree root ;root element ;element tree ;tree recursively ;recursively manner ;manner tree ;tree ends ;ends failure ;failure tree ;tree root ;root desired ;desired element ;element stopped ;stopped left ;left subtree ;subtree root ;root subtree ;subtree iteration ;iteration algorithm ;algorithm problem ;problem searching ;searching binary ;binary tree ;tree reduced ;reduced searching ;searching smaller ;smaller binary ;binary tree ;tree size ;size tree ;tree height ;height decrease ;decrease tree ;tree height ;height iteration ;iteration binary ;binary tree ;tree giving ;giving excellent ;excellent variable ;variable size ;size decrease ;decrease algorithm ;algorithm worst ;worst case ;case binary ;binary tree ;tree severely ;severely skewed ;skewed tree ;tree constructed ;constructed successive ;successive insertions ;insertions increasing ;increasing decreasing ;decreasing sequence ;sequence keys ;keys figure ;figure tree ;tree requires ;requires comparisons ;comparisons making ;making worst ;worst case ;case efficiency ;efficiency operation ;operation fall ;fall fortunately ;fortunately average ;average case ;case efficiency ;efficiency turns ;turns log ;log precisely ;precisely key ;key comparisons ;comparisons needed ;needed binary ;binary tree ;tree built ;built random ;random keys ;keys log ;log insertion ;insertion key ;key binary ;binary tree ;tree identical ;identical searching ;searching exemplifies ;exemplifies variablesize ;variablesize decrease ;decrease technique ;technique efficiency ;efficiency characteristics ;characteristics operation ;operation figure ;figure binary ;binary trees ;trees increasing ;increasing sequence ;sequence keys ;keys decreasing ;decreasing sequence ;sequence keys ;keys game ;game nim ;nim games ;games features ;features players ;players randomness ;randomness hidden ;hidden information ;information permitted ;permitted players ;players information ;information gameplay ;gameplay game ;game impartial ;impartial player ;player moves ;moves game ;game position ;position finite ;finite moves ;moves leads ;leads smaller ;smaller instance ;instance game ;game ends ;ends win ;win players ;players ties ;ties winner ;winner player ;player prototypical ;prototypical games ;games nim ;nim generally ;generally game ;game played ;played piles ;piles chips ;chips pile ;pile version ;version single ;single pile ;pile chips ;chips players ;players turns ;turns removing ;removing pile ;pile chips ;chips vary ;vary lower ;lower upper ;upper limits ;limits wins ;wins game ;game taking ;taking chip ;chip player ;player moving ;moving players ;players make ;make moves ;moves instance ;instance game ;game winning ;winning position ;position player ;player winning ;winning strategy ;strategy sequence ;sequence moves ;moves results ;results victory ;victory moves ;moves opponent ;opponent makes ;makes instance ;instance game ;game losing ;losing position ;position player ;player leads ;leads winning ;winning position ;position opponent ;opponent standard ;standard approach ;approach determining ;determining positions ;positions winning ;winning losing ;losing investigate ;investigate small ;small values ;values logical ;logical instance ;instance losing ;losing player ;player make ;make instance ;instance chips ;chips winning ;winning position ;position player ;player instance ;instance chips ;chips losing ;losing taking ;taking allowed ;allowed chips ;chips puts ;puts opponent ;opponent winning ;winning position ;position illustration ;illustration figure ;figure instance ;instance chips ;chips winning ;winning position ;position player ;player leaves ;leaves opponent ;opponent chips ;chips losing ;losing figure ;figure illustration ;illustration pile ;pile nim ;nim maximum ;maximum chips ;chips numbers ;numbers chips ;chips pile ;pile losing ;losing positions ;positions player ;player circled ;circled winning ;winning moves ;moves winning ;winning positions ;positions shown ;shown bold ;bold position ;position chips ;chips losing ;losing position ;position difficult ;difficult pattern ;pattern formally ;formally proved ;proved mathematical ;mathematical induction ;induction instance ;instance chips ;chips winning ;winning position ;position player ;player multiple ;multiple winning ;winning strategy ;strategy mod ;mod chips ;chips deviation ;deviation strategy ;strategy puts ;puts opponent ;opponent winning ;winning position ;position pile ;pile nim ;nim appeared ;appeared summation ;summation game ;game published ;published recreational ;recreational mathematics ;mathematics authored ;authored claude ;claude gaspar ;gaspar bachet ;bachet french ;french aristocrat ;aristocrat mathematician ;mathematician player ;player picks ;picks positive ;positive integer ;integer opponent ;opponent turns ;turns adding ;adding integer ;integer player ;player winner ;winner dud ;dud general ;general nim ;nim played ;played piles ;piles chips ;chips sizes ;sizes player ;player chips ;chips single ;single pile ;pile goal ;goal player ;player make ;make easy ;easy figure ;figure wins ;wins game ;game hint ;hint game ;game instances ;instances differs ;differs solution ;solution general ;general case ;case nim ;nim unexpected ;unexpected based ;based binary ;binary representation ;representation pile ;pile sizes ;sizes pile ;pile sizes ;sizes binary ;binary compute ;compute binary ;binary digital ;digital sum ;sum nim ;nim sum ;sum defined ;defined sum ;sum binary ;binary digits ;digits discarding ;discarding words ;words binary ;binary digit ;digit sum ;sum ith ;ith position ;position addends ;addends odd ;odd turns ;turns instance ;instance nim ;nim winning ;winning player ;player nim ;nim sum ;sum nim ;nim instance ;instance losing ;losing instance ;instance nim ;nim sum ;sum zeros ;zeros commonly ;commonly played ;played instance ;instance nim ;nim sum ;sum instance ;instance winning ;winning player ;player moving ;moving winning ;winning position ;position player ;player bit ;bit strings ;strings nim ;nim sum ;sum difficult ;difficult accomplish ;accomplish chips ;chips pile ;pile ingenious ;ingenious solution ;solution game ;game nim ;nim discovered ;discovered harvard ;harvard math ;math ematics ;ematics professor ;professor bouton ;bouton years ;years ago ;ago mathemati ;mathemati cians ;cians developed ;developed general ;general theory ;theory games ;games excellent ;excellent account ;account theory ;theory applications ;applications specific ;specific games ;games monograph ;monograph berlekamp ;berlekamp conway ;conway guy ;guy ber ;ber exercises ;exercises instance ;instance size ;size computing ;computing greatest ;greatest common ;common divisor ;divisor size ;size decrease ;decrease iteration ;iteration euclid ;euclid algorithm ;algorithm prove ;prove instance ;instance size ;size decrease ;decrease factor ;factor successive ;successive iterations ;iterations euclid ;euclid algorithm ;algorithm apply ;apply quickselect ;quickselect median ;median numbers ;numbers write ;write pseudocode ;pseudocode nonrecursive ;nonrecursive implementation ;implementation quickselect ;quickselect derive ;derive formula ;formula underlying ;underlying interpolation ;interpolation worst ;worst case ;case input ;input interpolation ;interpolation algorithm ;algorithm linear ;linear worst ;worst case ;case smallest ;smallest log ;log greater ;greater determine ;determine assertions ;assertions true ;true log ;log iii ;iii log ;log outline ;outline algorithm ;algorithm finding ;finding largest ;largest key ;key binary ;binary tree ;tree classify ;classify algorithm ;algorithm variable ;variable size ;size decrease ;decrease algorithm ;algorithm efficiency ;efficiency class ;class algorithm ;algorithm worst ;worst case ;case outline ;outline algorithm ;algorithm deleting ;deleting key ;key binary ;binary tree ;tree classify ;classify algorithm ;algorithm variable ;variable size ;size decrease ;decrease algorithm ;algorithm efficiency ;efficiency class ;class algorithm ;algorithm worst ;worst case ;case outline ;outline variable ;variable size ;size decrease ;decrease algorithm ;algorithm constructing ;constructing eulerian ;eulerian circuit ;circuit connected ;connected graph ;graph vertices ;vertices degrees ;degrees mise ;mise pile ;pile nim ;nim called ;called mise ;mise version ;version pile ;pile nim ;nim player ;player taking ;taking chip ;chip loses ;loses game ;game conditions ;conditions game ;game pile ;pile chips ;chips player ;player takes ;takes chips ;chips winning ;winning losing ;losing positions ;positions player ;player game ;game moldy ;moldy chocolate ;chocolate players ;players turns ;turns breaking ;breaking chocolate ;chocolate spoiled ;spoiled square ;square break ;break single ;single straight ;straight line ;line cutting ;cutting boundaries ;boundaries squares ;squares break ;break player ;player broke ;broke eats ;eats piece ;piece spoiled ;spoiled square ;square player ;player left ;left spoiled ;spoiled square ;square loses ;loses game ;game write ;write interactive ;interactive game ;game make ;make winning ;winning position ;position random ;random legitimate ;legitimate losing ;losing position ;position flipping ;flipping pancakes ;pancakes sizes ;sizes stacked ;stacked allowed ;allowed flipper ;flipper pancakes ;pancakes flip ;flip stack ;stack flipper ;flipper purpose ;purpose pancakes ;pancakes size ;size biggest ;biggest visualization ;visualization puzzle ;puzzle interactive ;interactive mathematics ;mathematics miscellany ;miscellany puzzles ;puzzles site ;site bog ;bog design ;design algorithm ;algorithm solving ;solving puzzle ;puzzle matrix ;matrix row ;row column ;column sorted ;sorted increasing ;increasing design ;design algorithm ;algorithm problem ;problem laa ;laa summary ;summary decrease ;decrease conquer ;conquer general ;general algorithm ;algorithm design ;design technique ;technique based ;based exploiting ;exploiting relationship ;relationship solution ;solution instance ;instance problem ;problem solution ;solution smaller ;smaller instance ;instance problem ;problem relationship ;relationship established ;established exploited ;exploited recursively ;recursively major ;major variations ;variations decrease ;decrease conquer ;conquer decrease ;decrease constant ;constant insertion ;insertion sort ;sort decrease ;decrease constant ;constant factor ;factor binary ;binary variable ;variable size ;size decrease ;decrease euclid ;euclid algorithm ;algorithm insertion ;insertion sort ;sort direct ;direct application ;application decrease ;decrease conquer ;conquer technique ;technique sorting ;sorting problem ;problem algorithm ;algorithm worst ;worst average ;average cases ;cases fast ;fast average ;average worst ;worst case ;case algorithm ;algorithm notable ;notable advantage ;advantage good ;good performance ;performance sorted ;sorted arrays ;arrays digraph ;digraph graph ;graph directions ;directions edges ;edges topological ;topological sorting ;sorting problem ;problem asks ;asks vertices ;vertices digraph ;digraph edge ;edge digraph ;digraph vertex ;vertex starts ;starts listed ;listed vertex ;vertex points ;points problem ;problem solution ;solution digraph ;digraph dag ;dag directed ;directed acyclic ;acyclic graph ;graph directed ;directed cycles ;cycles algorithms ;algorithms solving ;solving topological ;topological sorting ;sorting problem ;problem based ;based depth ;depth based ;based direct ;direct application ;application decrease ;decrease technique ;technique decrease ;decrease technique ;technique natural ;natural approach ;approach developing ;developing algo ;algo rithms ;rithms generating ;generating elementary ;elementary combinatorial ;combinatorial objects ;objects efficient ;efficient class ;class algorithms ;algorithms minimal ;minimal algorithms ;algorithms num ;num ber ;ber combinatorial ;combinatorial objects ;objects grows ;grows fast ;fast algorithms ;algorithms practical ;practical small ;small instances ;instances problems ;problems binary ;binary efficient ;efficient algorithm ;algorithm searching ;searching sorted ;sorted array ;array principal ;principal decrease ;decrease constant ;constant factor ;factor algorithm ;algorithm examples ;examples exponentiation ;exponentiation squaring ;squaring identifying ;identifying fake ;fake coin ;coin scale ;scale russian ;russian peasant ;peasant multiplication ;multiplication josephus ;josephus problem ;problem decrease ;decrease conquer ;conquer algorithms ;algorithms size ;size reduction ;reduction varies ;varies iteration ;iteration algorithm ;algorithm examples ;examples variable ;variable size ;size decrease ;decrease algorithms ;algorithms euclid ;euclid algorithm ;algorithm partition ;partition based ;based algorithm ;algorithm selection ;selection problem ;problem interpolation ;interpolation searching ;searching insertion ;insertion binary ;binary tree ;tree nim ;nim exemplifies ;exemplifies games ;games proceed ;proceed series ;series diminishing ;diminishing instances ;instances game