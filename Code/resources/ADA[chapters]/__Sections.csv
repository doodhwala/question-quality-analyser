Section No.,Level,Section,Page No.
1,1,Introduction,1
1.1,2,What Is an Algorithm?,3
1.2,2,Fundamentals of Algorithmic Problem Solving,9
,3,Understanding the Problem,9
,3,Ascertaining the Capabilities of the Computational Device,9
,3,Choosing between Exact and Approximate Problem Solving,11
,3,Algorithm Design Techniques,11
,3,Designing an Algorithm and Data Structures,12
,3,Methods of Specifying an Algorithm,12
,3,Proving an Algorithm's Correctness,13
,3,Analyzing an Algorithm,14
,3,Coding an Algorithm,15
1.3,2,Important Problem Types,18
,3,Sorting,19
,3,Searching,20
,3,String Processing,20
,3,Graph Problems,21
,3,Combinatorial Problems,21
,3,Geometric Problems,22
,3,Numerical Problems,22
1.4,2,Fundamental Data Structures,25
,3,Linear Data Structures,25
,3,Graphs,28
,3,Trees,31
,3,Sets and Dictionaries,35
2,1,Fundamentals of the Analysis of Algorithm Efficiency,41
2.1,2,The Analysis Framework,42
,3,Measuring an Input's Size,43
,3,Units for Measuring Running Time,44
,3,Orders of Growth,45
,3,"Worst-Case, Best-Case, and Average-Case Efficiencies",47
,3,Recapitulation of the Analysis Framework,50
2.2,2,Asymptotic Notations and Basic Efficiency Classes,52
,3,Informal Introduction,52
,3,O -notation,53
,3,Useful Property Involving the Asymptotic Notations,55
,3,Using Limits for Comparing Orders of Growth,56
,3,Basic Efficiency Classes,58
2.3,2,Mathematical Analysis of Nonrecursive Algorithms,61
2.4,2,Mathematical Analysis of Recursive Algorithms,70
2.5,2,Example: Computing the nth Fibonacci Number,80
2.6,2,Empirical Analysis of Algorithms,84
2.7,2,Algorithm Visualization,91
3,1,Brute Force and Exhaustive Search,97
3.1,2,Selection Sort and Bubble Sort,98
,3,Selection Sort,98
,3,Bubble Sort,100
3.2,2,Sequential Search and Brute-Force String Matching,104
,3,Sequential Search,104
,3,Brute-Force String Matching,105
3.3,2,Closest-Pair and Convex-Hull Problems by Brute Force,108
,3,Closest-Pair Problem,108
,3,Convex-Hull Problem,109
3.4,2,Exhaustive Search,115
,3,Traveling Salesman Problem,116
,3,Knapsack Problem,116
,3,Assignment Problem,119
3.5,2,Depth-First Search and Breadth-First Search,122
,3,Depth-First Search,122
,3,Breadth-First Search,125
4,1,Decrease-and-Conquer,131
4.1,2,Insertion Sort,134
4.2,2,Topological Sorting,138
4.3,2,Algorithms for Generating Combinatorial Objects,144
,3,Generating Permutations,144
,3,Generating Subsets,146
4.4,2,Decrease-by-a-Constant-Factor Algorithms,150
,3,Binary Search,150
,3,Fake-Coin Problem,152
,3,Russian Peasant Multiplication,153
,3,Josephus Problem,154
4.5,2,Variable-Size-Decrease Algorithms,157
,3,Computing a Median and the Selection Problem,158
,3,Interpolation Search,161
,3,Searching and Insertion in a Binary Search Tree,163
,3,The Game of Nim,164
5,1,Divide-and-Conquer,169
5.1,2,Mergesort,172
5.2,2,Quicksort,176
5.3,2,Binary Tree Traversals and Related Properties,182
5.4,2,Multiplication of Large Integers and Strassen's Matrix Multiplication,186
,3,Multiplication of Large Integers,187
,3,Strassen's Matrix Multiplication,189
5.5,2,The Closest-Pair and Convex-Hull Problems by Divide-and-Conquer,192
,3,The Closest-Pair Problem,192
,3,Convex-Hull Problem,195
6,1,Transform-and-Conquer,201
6.1,2,Presorting,202
6.2,2,Gaussian Elimination,208
,3,LU Decomposition,212
,3,Computing a Matrix Inverse,214
,3,Computing a Determinant,215
6.3,2,Balanced Search Trees,218
,3,AVL Trees,218
6.4,2,Heaps and Heapsort,226
,3,Notion of the Heap,227
,3,Heapsort,231
6.5,2,Horner's Rule and Binary Exponentiation,234
,3,Horner's Rule,234
,3,Binary Exponentiation,236
6.6,2,Problem Reduction,240
,3,Computing the Least Common Multiple,241
,3,Counting Paths in a Graph,242
,3,Reduction of Optimization Problems,243
,3,Linear Programming,244
,3,Reduction to Graph Problems,246
7,1,Space and Time Trade-Offs,253
7.1,2,Sorting by Counting,254
7.2,2,Input Enhancement in String Matching,258
,3,Horspool's Algorithm,259
,3,Boyer-Moore Algorithm,263
7.3,2,Hashing,269
,3,Open Hashing \(Separate Chaining\),270
,3,Closed Hashing \(Open Addressing\),272
7.4,2,B-Trees,276
8,1,Dynamic Programming,283
8.1,2,Three Basic Examples,285
8.2,2,The Knapsack Problem and Memory Functions,292
,3,Memory Functions,294
8.3,2,Optimal Binary Search Trees,297
8.4,2,Warshall's and Floyd's Algorithms,304
,3,Warshall's Algorithm,304
,3,Floyd's Algorithm for the All-Pairs Shortest-Paths Problem,308
9,1,Greedy Technique,315
9.1,2,Prim's Algorithm,318
9.2,2,Kruskal's Algorithm,325
,3,Disjoint Subsets and Union-Find Algorithms,327
9.3,2,Dijkstra's Algorithm,333
9.4,2,Huffman Trees and Codes,338
10,1,Iterative Improvement,345
10.1,2,The Simplex Method,346
,3,Geometric Interpretation of Linear Programming,347
,3,An Outline of the Simplex Method,351
,3,Further Notes on the Simplex Method,357
10.2,2,The Maximum-Flow Problem,361
10.3,2,Maximum Matching in Bipartite Graphs,372
10.4,2,The Stable Marriage Problem,380
11,1,Limitations of Algorithm Power,387
11.1,2,Lower-Bound Arguments,388
,3,Trivial Lower Bounds,389
,3,Information-Theoretic Arguments,390
,3,Adversary Arguments,390
,3,Problem Reduction,391
11.2,2,Decision Trees,394
,3,Decision Trees for Sorting,395
,3,Decision Trees for Searching a Sorted Array,397
11.3,2,"P , NP , and NP-Complete Problems",401
,3,P and NP Problems,402
,3,NP -Complete Problems,406
11.4,2,Challenges of Numerical Algorithms,412
12,1,Coping with the Limitations of Algorithm Power,423
12.1,2,Backtracking,424
,3,n-Queens Problem,425
,3,Hamiltonian Circuit Problem,426
,3,Subset-Sum Problem,427
,3,General Remarks,428
12.2,2,Branch-and-Bound,432
,3,Assignment Problem,433
,3,Knapsack Problem,436
,3,Traveling Salesman Problem,438
12.3,2,Approximation Algorithms for NP -Hard Problems,441
,3,Approximation Algorithms for the Traveling Salesman Problem,443
,3,Approximation Algorithms for the Knapsack Problem,453
12.4,2,Algorithms for Solving Nonlinear Equations,459
,3,Bisection Method,460
,3,Method of False Position,464
,3,Newton's Method,464
[\d]*,-1,Exercises,465
