P , NP , and NP-Complete Problems
In the study of the computational complexity of problems, the first concern of both
      computer scientists and computing professionals is whether a given problem can
      be solved in polynomial time by some algorithm.
      DEFINITION 1        We say that an algorithm solves a problem in polynomial time
      if its worst-case time efficiency belongs to O(p(n)) where p(n) is a polynomial of
      the problem's input size n. (Note that since we are using big-oh notation here,
      problems solvable in, say, logarithmic time are solvable in polynomial time as
      well.) Problems that can be solved in polynomial time are called tractable, and
      problems that cannot be solved in polynomial time are called intractable.
           There are several reasons for drawing the intractability line in this way. First,
      the entries of Table 2.1 and their discussion in Section 2.1 imply that we cannot
      solve arbitrary instances of intractable problems in a reasonable amount of time
      unless such instances are very small. Second, although there might be a huge
      difference between the running times in O(p(n)) for polynomials of drastically
      different degrees, there are very few useful polynomial-time algorithms with the
      degree of a polynomial higher than three. In addition, polynomials that bound
      running times of algorithms do not usually have extremely large coefficients.
      Third, polynomial functions possess many convenient properties; in particular,
      both the sum and composition of two polynomials are always polynomials too.
      Fourth, the choice of this class has led to a development of an extensive theory
      called computational complexity, which seeks to classify problems according to
      their inherent difficulty. And according to this theory, a problem's intractability
     remains the same for all principal models of computations and all reasonable
     input-encoding schemes for the problem under consideration.
     We just touch on some basic notions and ideas of complexity theory in this
     section. If you are interested in a more formal treatment of this theory, you will
     have no trouble finding a wealth of textbooks devoted to the subject (e.g., [Sip05],
     [Aro09]).
