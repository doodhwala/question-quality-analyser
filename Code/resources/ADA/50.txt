Recapitulation of the Analysis Framework
Before we leave this section, let us summarize the main points of the framework
    outlined above.
        Both time and space efficiencies are measured as functions of the algorithm's
        input size.
        Time efficiency is measured by counting the number of times the algorithm's
        basic operation is executed. Space efficiency is measured by counting the
        number of extra memory units consumed by the algorithm.
        The efficiencies of some algorithms may differ significantly for inputs of the
        same size. For such algorithms, we need to distinguish between the worst-case,
        average-case, and best-case efficiencies.
        The framework's primary interest lies in the order of growth of the algorithm's
        running time (extra memory units consumed) as its input size goes to infinity.
        In the next section, we look at formal means to investigate orders of growth. In
    Sections 2.3 and 2.4, we discuss particular methods for investigating nonrecursive
    and recursive algorithms, respectively. It is there that you will see how the analysis
    framework outlined here can be applied to investigating the efficiency of specific
    algorithms. You will encounter many more examples throughout the rest of the
    book.
    Exercises 2.1
    1.  For each of the following algorithms, indicate (i) a natural size metric for its
        inputs, (ii) its basic operation, and (iii) whether the basic operation count can
        be different for inputs of the same size:
        a.  computing the sum of n numbers
        b. computing n!
        c.  finding the largest element in a list of n numbers
        d. Euclid's algorithm
        e.  sieve of Eratosthenes
        f.  pen-and-pencil algorithm for multiplying two n-digit decimal integers
    2.  a.  Consider the definition-based algorithm for adding two n × n matrices.
            What is its basic operation? How many times is it performed as a function
            of the matrix order n? As a function of the total number of elements in the
            input matrices?
        b.  Answer the same questions for the definition-based algorithm for matrix
            multiplication.
3.  Consider a variation of sequential search that scans a list to return the number
    of occurrences of a given search key in the list. Does its efficiency differ from
    the efficiency of classic sequential search?
4.  a.  Glove selection         There are 22 gloves in a drawer: 5 pairs of red gloves, 4
        pairs of yellow, and 2 pairs of green. You select the gloves in the dark and
        can check them only after a selection has been made. What is the smallest
        number of gloves you need to select to have at least one matching pair in
        the best case? In the worst case?
    b.  Missing socks           Imagine that after washing 5 distinct pairs of socks, you
        discover that two socks are missing. Of course, you would like to have
        the largest number of complete pairs remaining. Thus, you are left with
        4 complete pairs in the best-case scenario and with 3 complete pairs in
        the worst case. Assuming that the probability of disappearance for each
        of the 10 socks is the same, find the probability of the best-case scenario;
        the probability of the worst-case scenario; the number of pairs you should
        expect in the average case.
5.  a.  Prove formula (2.1) for the number of bits in the binary representation of
        a positive decimal integer.
    b. Prove the alternative formula for the number of bits in the binary repre-
        sentation of a positive integer n:
                                      b=        log2(n + 1) .
    c.  What would be the analogous formulas for the number of decimal digits?
    d. Explain why, within the accepted analysis framework, it does not matter
        whether we use binary or decimal digits in measuring n's size.
6.  Suggest how any sorting algorithm can be augmented in a way to make the
    best-case count of its key comparisons equal to just n - 1 (n is a list's size,
    of course). Do you think it would be a worthwhile addition to any sorting
    algorithm?
7.  Gaussian elimination, the classic algorithm for solving systems of n linear
    equations   in     n  unknowns,   requires  about   1  n3  multiplications,  which  is  the
    algorithm's basic operation.                        3
    a.  How much longer should you expect Gaussian elimination to work on a
        system of 1000 equations versus a system of 500 equations?
    b.  You are considering buying a computer that is 1000 times faster than the
        one you currently have. By what factor will the faster computer increase
        the sizes of systems solvable in the same amount of time as on the old
        computer?
8.  For each of the following functions, indicate how much the function's value
    will  change   if  its  argument  is increased fourfold.
          a. log2  n        b.  n     c. n      d.  n2     e.  n3  f.  2n
         9.   For each of the following pairs of functions, indicate whether the first function
              of each of the following pairs has a lower, same, or higher order of growth (to
              within a constant multiple) than the second function.
                  a. n(n + 1) and 2000n2  b.  100n2 and 0.01n3
                  c. log2 n and ln n      d.  log22 n and log2 n2
                  e.  2n-1 and 2n         f. (n - 1)! and n!
         10.  Invention of chess
              a.  According to a well-known legend, the game of chess was invented many
                  centuries ago in northwestern India by a certain sage. When he took his
                  invention to his king, the king liked the game so much that he offered the
                  inventor any reward he wanted. The inventor asked for some grain to be
                  obtained as follows: just a single grain of wheat was to be placed on the
                  first square of the chessboard, two on the second, four on the third, eight
                  on the fourth, and so on, until all 64 squares had been filled. If it took just
                  1 second to count each grain, how long would it take to count all the grain
                  due to him?
              b. How long would it take if instead of doubling the number of grains for each
                  square of the chessboard, the inventor asked for adding two grains?
    