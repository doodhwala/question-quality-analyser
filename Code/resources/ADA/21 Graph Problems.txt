One of the oldest and most interesting areas in algorithmics is graph algorithms.
Informally, a graph can be thought of as a collection of points called vertices, some
of which are connected by line segments called edges. (A more formal definition
is given in the next section.) Graphs are an interesting subject to study, for both
theoretical and practical reasons. Graphs can be used for modeling a wide variety
of applications, including transportation, communication, social and economic
networks, project scheduling, and games. Studying different technical and social
aspects of the Internet in particular is one of the active areas of current research
involving computer scientists, economists, and social scientists (see, e.g., [Eas10]).
Basic graph algorithms include graph-traversal algorithms (how can one reach
all the points in a network?), shortest-path algorithms (what is the best route be-
tween two cities?), and topological sorting for graphs with directed edges (is a set
of courses with their prerequisites consistent or self-contradictory?). Fortunately,
these algorithms can be considered illustrations of general design techniques; ac-
cordingly, you will find them in corresponding chapters of the book.
Some graph problems are computationally very hard; the most well-known
examples are the traveling salesman problem and the graph-coloring problem.
The traveling salesman problem (TSP) is the problem of finding the shortest tour
through n cities that visits every city exactly once. In addition to obvious appli-
cations involving route planning, it arises in such modern applications as circuit
board and VLSI chip fabrication, X-ray crystallography, and genetic engineer-
ing. The graph-coloring problem seeks to assign the smallest number of colors to
the vertices of a graph so that no two adjacent vertices are the same color. This
problem arises in several applications, such as event scheduling: if the events are
represented by vertices that are connected by an edge if and only if the correspond-
ing events cannot be scheduled at the same time, a solution to the graph-coloring
problem yields an optimal schedule.
