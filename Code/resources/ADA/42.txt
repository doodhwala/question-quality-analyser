The Analysis Framework
In this section, we outline a general framework for analyzing the efficiency of algo-
         rithms. We already mentioned in Section 1.2 that there are two kinds of efficiency:
         time efficiency and space efficiency. Time efficiency, also called time complexity,
         indicates how fast an algorithm in question runs. Space efficiency, also called space
         complexity, refers to the amount of memory units required by the algorithm in ad-
         dition to the space needed for its input and output. In the early days of electronic
         computing, both resources--time and space--were at a premium. Half a century
    of relentless technological innovations have improved the computer's speed and
    memory size by many orders of magnitude. Now the amount of extra space re-
    quired by an algorithm is typically not of as much concern, with the caveat that
    there is still, of course, a difference between the fast main memory, the slower
    secondary memory, and the cache. The time issue has not diminished quite to the
    same extent, however. In addition, the research experience has shown that for
    most problems, we can achieve much more spectacular progress in speed than in
    space. Therefore, following a well-established tradition of algorithm textbooks, we
    primarily concentrate on time efficiency, but the analytical framework introduced
    here is applicable to analyzing space efficiency as well.
