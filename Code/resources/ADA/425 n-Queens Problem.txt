As our first example, we use a perennial favorite of textbook writers: the n-queens
problem. The problem is to place n queens on an n × n chessboard so that no two
queens attack each other by being in the same row or in the same column or on
the same diagonal. For n = 1, the problem has a trivial solution, and it is easy to
see that there is no solution for n = 2 and n = 3. So let us consider the four-queens
problem and solve it by the backtracking technique. Since each of the four queens
has to be placed in its own row, all we need to do is to assign a column for each
queen on the board presented in Figure 12.1.
We start with the empty board and then place queen 1 in the first possible
position of its row, which is in column 1 of row 1. Then we place queen 2, after
trying unsuccessfully columns 1 and 2, in the first acceptable position for it, which
is square (2, 3), the square in row 2 and column 3. This proves to be a dead end
because there is no acceptable position for queen 3. So, the algorithm backtracks
and puts queen 2 in the next possible position at (2, 4). Then queen 3 is placed
at (3, 2), which proves to be another dead end. The algorithm then backtracks all
the way to queen 1 and moves it to (1, 2). Queen 2 then goes to (2, 4), queen 3 to
(3, 1), and queen 4 to (4, 3), which is a solution to the problem. The state-space
tree of this search is shown in Figure 12.2.
If other solutions need to be found (how many of them are there for the four-
queens problem?), the algorithm can simply resume its operations at the leaf at
which it stopped. Alternatively, we can use the board's symmetry for this purpose.
                               1  2  3  4
                  1                                 queen 1
                  2                                 queen 2
                  3                                 queen 3
                  4                                 queen 4
FIGURE 12.1  Board for the four-queens problem.
                                                       0
                                  1                                5
                            Q                                      Q
                      2                       3                                          6
     1  2          Q                    Q                    1  2     3             Q
                         Q                       Q                                          Q
                                              4                       7
             1     2     3     4     1  Q           3     4           Q
                                                 Q                         Q
                                           Q                       Q
                                                                                 8
                                     1     2     3  4           1     2       Q
                                                                                    Q
                                                                           Q
                                                                                 Q
                                                                              solution
     FIGURE  12.2  State-space tree of solving the four-queens problem by backtracking.
                   × denotes an unsuccessful attempt to place a queen in the indicated
                   column. The numbers above the nodes indicate the order in which the
                   nodes are generated.
        Finally, it should be pointed out that a single solution to the n-queens problem
     for any n  4 can be found in linear time. In fact, over the last 150 years mathe-
     maticians have discovered several alternative formulas for nonattacking positions
     of n queens [Bel09]. Such positions can also be found by applying some general
     algorithm design strategies (Problem 4 in this section's exercises).
