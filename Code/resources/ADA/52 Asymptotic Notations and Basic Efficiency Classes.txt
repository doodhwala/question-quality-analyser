As pointed out in the previous section, the efficiency analysis framework con-
         centrates on the order of growth of an algorithm's basic operation count as the
         principal indicator of the algorithm's efficiency. To compare and rank such orders
         of growth, computer scientists use three notations: O (big oh),  (big omega), and
         (big theta). First, we introduce these notations informally, and then, after sev-
         eral examples, formal definitions are given. In the following discussion, t (n) and
         g(n) can be any nonnegative functions defined on the set of natural numbers. In
         the context we are interested in, t (n) will be an algorithm's running time (usually
         indicated by its basic operation count C(n)), and g(n) will be some simple function
         to compare the count with.
