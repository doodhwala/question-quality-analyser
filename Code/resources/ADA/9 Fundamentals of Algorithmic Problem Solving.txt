Let us start by reiterating an important point made in the introduction to this
     chapter:
              We can consider algorithms to be procedural solutions to problems.
     These solutions are not answers but specific instructions for getting answers. It is
     this emphasis on precisely defined constructive procedures that makes computer
     science distinct from other disciplines. In particular, this distinguishes it from the-
     oretical mathematics, whose practitioners are typically satisfied with just proving
     the existence of a solution to a problem and, possibly, investigating the solution's
     properties.
     We now list and briefly discuss a sequence of steps one typically goes through
     in designing and analyzing an algorithm (Figure 1.2).
