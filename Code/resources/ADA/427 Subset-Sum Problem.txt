As our last example, we consider the subset-sum problem: find a subset of a given
set A = {a1, . . . , an} of n positive integers whose sum is equal to a given positive
integer d. For example, for A = {1, 2, 5, 6, 8} and d = 9, there are two solutions:
{1, 2, 6} and {1, 8}. Of course, some instances of this problem may have no
solutions.
   It is convenient to sort the set's elements in increasing order. So, we will
assume that
                          a1 < a2 < . . . < an.
                                                               0
                                          with 3                  w/o 3
                               3                                                           0
                 with 5                   w/o 5                                 with 5        w/o 5
              8                                   3                             5             0
     with 6          w/o 6                with 6        w/o 6     with 6           w/o 6
                                                                                              0+13<15
     14                8                  9             3         11                    5
             with 7         w/o 7
     14+7>15                          9+7>15         3+7<15       11+7>15          5+7<15
              15            8
             solution
                            8<15
     FIGURE 12.4       Complete state-space tree of the backtracking algorithm applied to the
                       instance A = {3, 5, 6, 7} and d = 15 of the subset-sum problem. The
                       number inside a node is the sum of the elements already included in the
                       subsets represented by the node. The inequality below a leaf indicates
                       the reason for its termination.
     The state-space tree can be constructed as a binary tree like that in Figure 12.4 for
     the instance A = {3, 5, 6, 7} and d = 15. The root of the tree represents the starting
     point, with no decisions about the given elements made as yet. Its left and right
     children represent, respectively, inclusion and exclusion of a1 in a set being sought.
     Similarly, going to the left from a node of the first level corresponds to inclusion
     of a2 while going to the right corresponds to its exclusion, and so on. Thus, a path
     from the root to a node on the ith level of the tree indicates which of the first i
     numbers have been included in the subsets represented by that node.
     We record the value of s, the sum of these numbers, in the node. If s is equal
     to d, we have a solution to the problem. We can either report this result and stop
     or, if all the solutions need to be found, continue by backtracking to the node's
     parent. If s is not equal to d, we can terminate the node as nonpromising if either
     of the following two inequalities holds:
                                  s + ai+1 > d       (the sum s is too large),
                                   n
                            s+            aj < d     (the sum s is too small).
                                  j =i+1
