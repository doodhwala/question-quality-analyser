Key Terms, Review Questions, and Problems
426  CHAPTER 9 / UNIPROCESSOR SCHEDULING
9.6       KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS
Key Terms
arrival rate                     medium-term scheduler                  short-term scheduler
dispatcher                       multilevel feedback                    throughput
exponential averaging            predictability                         time slicing
fair-share scheduling            residence time                         turnaround time
fairness                         response time                          utilization
first-come-first-served          round robin                            waiting time
first-in-first-out               scheduling priority
long-term scheduler              service time
          Review Questions
          9.1       Briefly describe the three types of processor scheduling.
          9.2       What is usually the critical performance requirement in an interactive operating
                    system?
          9.3       What is the difference between turnaround time and response time?
          9.4       For process scheduling, does a low-priority value represent a low priority or a high
                    priority?
          9.5       What is the difference between preemptive and nonpreemptive scheduling?
          9.6       Briefly define FCFS scheduling.
          9.7       Briefly define round-robin scheduling.
          9.8       Briefly define shortest-process-next scheduling.
          9.9       Briefly define shortest-remaining-time scheduling.
          9.10      Briefly define highest-response-ratio-next scheduling.
          9.11      Briefly define feedback scheduling.
          Problems
          9.1       Consider the following workload:
                        Process  Burst Time              Priority       Arrival Time
                         P1      50 ms                      4                  0 ms
                         P2      20 ms                      1                  20 ms
                         P3      100 ms                     3                  40 ms
                         P4      40 ms                      2                  60 ms
                    a.  Show the schedule using shortest remaining time, nonpreemptive priority (a
                        smaller priority number implies higher priority) and round robin with quantum
                        30 ms. Use time scale diagram as shown below for the FCFS example to show the
                        schedule for each requested scheduling policy.

                          9.6 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS                           427
              Example for FCFS (1 unit = 10 ms):
P1  P1   P1   P1  P1  P2  P2        P3  P3        P3   P3  P3  P3  P3  P3       P3  P3  P4  P4  P4  P4
0   123       4   5   6   7         8   9      10     11   12  13  14  15       16  17  18  19  20
              b.  What is the average waiting time of the above scheduling policies?
         9.2  Consider the following set of processes:
                          Process          Arrival Time        Processing Time
                                 A                 0               3
                                 B                 1               5
                                 C                 3               2
                                 D                 9               5
                                 E                 12              5
              Perform the same analysis as depicted in Table 9.5 and Figure 9.5 for this set.
         9.3  Prove that, among nonpreemptive scheduling algorithms, SPN provides the minimum
              average waiting time for a batch of jobs that arrive at the same time. Assume that the
              scheduler must always execute a task if one is available.
         9.4  Assume the following burst-time pattern for a process: 6, 4, 6, 4, 13, 13, 13, and assume
              that the initial guess is 10. Produce a plot similar to those of Figure 9.9.
         9.5  Consider the following pair of equations as an alternative to Equation (9.3):
                                       Sn+1    =  aTn + (1 - a)Sn
                                       Xn + 1  =  min[Ubound, max[Lbound, (bSn+1)]]
              where Ubound and Lbound are prechosen upper and lower bounds on the estimated
              value of T.The value of Xn + 1 is used in the shortest-process-next algorithm, instead of
              the value of Sn + 1. What functions do a and b perform, and what is the effect of higher
              and lower values on each?
         9.6  In the bottom example in Figure 9.5, process A runs for two time units before control
              is passed to process B. Another plausible scenario would be that A runs for three time
              units before control is passed to process B. What policy differences in the feedback-
              scheduling algorithm would account for the two different scenarios?
         9.7  In a nonpreemptive uniprocessor system, the ready queue contains three jobs at time
              t immediately after the completion of a job. These jobs arrived at times t1, t2, and t3
              with estimated execution times of r1, r2, and r3, respectively. Figure 9.18 shows the
              linear increase of their response ratios over time. Use this example to find a variant
              of response ratio scheduling, known as minimax response ratio scheduling, that mini-
              mizes the maximum response ratio for a given batch of jobs ignoring further arrivals.
              (Hint: Decide, first, which job to schedule as the last one.)
         9.8  Prove that the minimax response ratio algorithm of the preceding problem minimizes
              the maximum response ratio for a given batch of jobs. (Hint: Focus attention on the
              job that will achieve the highest response ratio and all jobs executed before it. Con-
              sider the same subset of jobs scheduled in any other order and observe the response
              ratio of the job that is executed as the last one among them. Notice that this subset
              may now be mixed with other jobs from the total set.)
         9.9  Define residence time Tr as the average total time a process spends waiting and being
              served. Show that for FIFO, with mean service time Ts, we have Tr = Ts/(1 ­ r), where
              r is utilization.

428  CHAPTER 9 / UNIPROCESSOR SCHEDULING
           Response ratio                                                      1
                                                                               r2
                                                    1
                                                    r1
                                                                                   1
                                                                                   r3
                           1
                                   t1                              t2      t3           t4
                                                             Time
           Figure 9.18             Response Ratio as a Function of Time
     9.10  A processor is multiplexed at infinite speed among all processes present in a ready
           queue with no overhead. (This is an idealized model of round-robin scheduling
           among ready processes using time slices that are very small compared to the mean
           service time.) Show that for Poisson input from an infinite source with exponential
           service times, the mean response time Rx of a process with service time x is given by
           Rx = x/(1 ­ r). (Hint: Review the basic queueing equations in Appendix H or Chapter
           20. Then consider the number of items waiting, w, in the system upon arrival of the
           given process.)
     9.11  Consider a variant of the RR scheduling algorithm where the entries in the ready
           queue are pointers to the PCBs.
           a.              What would be the effect of putting two pointers to the same process in the ready
                           queue?
           b.              What would be the major advantage of this scheme?
           c.              How could you modify the basic RR algorithm to achieve the same effect without
                           the duplicate pointers?
     9.12  In a queueing system, new jobs must wait for a while before being served. While a job
           waits, its priority increases linearly with time from zero at a rate a. A job waits until its
           priority reaches the priority of the jobs in service; then, it begins to share the proces-
           sor equally with other jobs in service using round robin while its priority continues to
           increase at a slower rate b. The algorithm is referred to as selfish round robin, because
           the jobs in service try (in vain) to monopolize the processor by increasing their prior-
           ity continuously. Use Figure 9.19 to show that the mean response time Rx for a job of
           service time x is given by:
                                                        Rx   s         +  x-s
                                                             1-r          1 - r
           where
                                                                       b       0...b6a
                                       r  ls            r  ra1 -       ab
           assuming that arrival and service times are exponentially distributed with means
           1/ and s, respectively. (Hint: Consider the total system and the two subsystems
           separately.)
     9.13  An interactive system using round-robin scheduling and swapping tries to give guar-
           anteed response to trivial requests as follows: After completing a round-robin cycle
           among all ready processes, the system determines the time slice to allocate to each

                                  9.6 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS                      429
          l                           a             l          b
                                                                                           Departures
                                  Waiting jobs           Served jobs
             Increasing priority                         1/l                   b
                                                a                 a
                                                    1/l
                                                         Time
          Figure 9.19             Selfish Round Robin
      ready process for the next cycle by dividing a maximum response time by the number
      of processes requiring service. Is this a reasonable policy?
9.14  Which  type                 of  process   is  generally  favored  by  a  multilevel  feedback    queueing
      scheduler--a processor-bound process or an I/O-bound process? Briefly explain why.
9.15  In priority-based process scheduling, the scheduler only gives control to a particular
      process if no other process of higher priority is currently in the Ready state. Assume
      that no other information is used in making the process scheduling decision. Also
      assume that process priorities are established at process creation time and do not
      change. In a system operating with such assumptions, why would using Dekker's solu-
      tion (see Section A.1) to the mutual exclusion problem be "dangerous"? Explain this
      by telling what undesired event could occur and how it could occur.
9.16  Five batch jobs, A through E, arrive at a computer center at essentially the same time.
      They have an estimated running time of 15, 9, 3, 6, and 12 minutes, respectively. Their
      (externally defined) priorities are 6, 3, 7, 9, and 4, respectively, with a lower value
      corresponding to a higher priority. For each of the following scheduling algorithms,
      determine the turnaround time for each process and the average turnaround for all
      jobs. Ignore process switching overhead. Explain how you arrived at your answers. In
      the last three cases, assume that only one job at a time runs until it finishes and that all
      jobs are completely processor bound.
      a.  round robin with a time quantum of 1 minute
      b.  priority scheduling
      c.  FCFS (run in order 15, 9, 3, 6, and 12)
      d.  shortest job first

                                       CHAPTER
MULTIPROCESSOR AND
REAL-TIME SCHEDULING
     10.1   Multiprocessor Scheduling
            Granularity
            Design Issues
            Process Scheduling
            Thread Scheduling
     10.2   Real-Time Scheduling
            Background
            Characteristics of Real-Time Operating Systems
            Real-Time Scheduling
            Deadline Scheduling
            Rate Monotonic Scheduling
            Priority Inversion
     10.3   Linux Scheduling
     10.4   UNIX SVR4 Scheduling
     10.5   UNIX FreeBSD Scheduling
     10.6   Windows Scheduling
     10.7   Linux Virtual Machine Process Scheduling
     10.8   Summary
     10.9   Recommended Reading
     10.10  Key Terms, Review Questions, and Problems
430                                                         430
